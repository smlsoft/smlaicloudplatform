name: Build API
on: [workflow_dispatch]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: smlsoft/smlcloudapi
  DISCORD_CHANNEL: "1139124359731093614"

jobs:
  build-and-push-vfapi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          # file: ./cmd/vfapi/Dockerfile2
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  update-mainfest-argocd:
    runs-on: ubuntu-latest
    needs: ['build-and-push-vfapi']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: smlsoft/sml-ols-cluster-config
          ref: 'main'
          token: ${{ secrets.GH_SECRET }}
      - name: setup git config
        run: |
          git config --global user.email "woranich@gmail.com"
          git config --global user.name "userplant"
          echo ${{ github.sha }}
          sed -i "s|ghcr.io/smlsoft/smlcloudapi:sha-.\{7\}|ghcr.io/smlsoft/smlcloudapi:sha-${GITHUB_SHA::7}|g" dedepos-api-dev/deployment.yaml
          git add -A
          git commit -am "Update dedepos-api-dev sha-${GITHUB_SHA::7}"
      - run: echo ${{ github }}
      - run: git push origin main
  notify-deploy:
    runs-on: ubuntu-latest
    needs: ['update-mainfest-argocd']
    steps:
      - name: send discord notification
        run: |
            SHORT_SHA="${GITHUB_SHA::7}"
            BOT_TOKEN="${{ secrets.DISCORD_BOT }}"
            curl -X POST -H "Content-Type: application/json" -H "Authorization: Bot $BOT_TOKEN" -d "{\"content\": \"ðŸš€ New deploy available: $REGISTRY/$IMAGE_NAME:sha-$SHORT_SHA\"}" https://discordapp.com/api/channels/$DISCORD_CHANNEL/messages
      