{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "title": "SML Cloud Platform API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/apikeyservice": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "generate x-api-key",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "XApiKey"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete x-api-key",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "XApiKey"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/checksms": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransactionPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/color": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "description": "Color",
                        "name": "Color",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Color"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/color/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "description": "Color",
                        "name": "Color",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Color"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/color/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/color/pk": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Color by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "description": "Code Array",
                        "name": "[]string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/color/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Color ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Color ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Color",
                        "name": "Color",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Color"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Color ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/create-shop": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Shop on login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "Add Shop",
                        "name": "Shop",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "groups guidfixed",
                        "name": "groups",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Creditor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "description": "Creditor",
                        "name": "Creditor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreditorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Creditor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "description": "Creditor GUIDs",
                        "name": "Creditor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor-group": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create CreditorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "description": "CreditorGroup",
                        "name": "CreditorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreditorGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete CreditorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "description": "CreditorGroup GUIDs",
                        "name": "CreditorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor-group/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create CreditorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "description": "CreditorGroup",
                        "name": "CreditorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreditorGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor-group/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor-group/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CreditorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update CreditorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CreditorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CreditorGroup",
                        "name": "CreditorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreditorGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete CreditorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CreditorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CreditorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Creditor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "description": "Creditor",
                        "name": "Creditor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreditorRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Creditor by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "groups guidfixed",
                        "name": "groups",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/creditor/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Creditor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Creditor",
                        "name": "Creditor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreditorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Creditor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "creditor",
                        "name": "iscreditor",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "debtor",
                        "name": "isdebtor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Customer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "description": "Customer",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Customer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "description": "Customer GUIDs",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer-group": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create CustomerGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "description": "CustomerGroup",
                        "name": "CustomerGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete CustomerGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "description": "CustomerGroup GUIDs",
                        "name": "CustomerGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer-group/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create CustomerGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "description": "CustomerGroup",
                        "name": "CustomerGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomerGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer-group/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer-group/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CustomerGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update CustomerGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CustomerGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CustomerGroup",
                        "name": "CustomerGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete CustomerGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CustomerGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CustomerGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Customer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "description": "Customer",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomerRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Customer By Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "creditor",
                        "name": "iscreditor",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "debtor",
                        "name": "isdebtor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/customer/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get info Customer by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Customer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Customer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "groups guidfixed",
                        "name": "groups",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "description": "Debtor",
                        "name": "Debtor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DebtorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "description": "Debtor GUIDs",
                        "name": "Debtor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor-group": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create DebtorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "description": "DebtorGroup",
                        "name": "DebtorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DebtorGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete DebtorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "description": "DebtorGroup GUIDs",
                        "name": "DebtorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor-group/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create DebtorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "description": "DebtorGroup",
                        "name": "DebtorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DebtorGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor-group/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor-group/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DebtorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update DebtorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DebtorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DebtorGroup",
                        "name": "DebtorGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DebtorGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete DebtorGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DebtorGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DebtorGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor/auth": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Auth Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "description": "Debtor Auth",
                        "name": "DebtorAuth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DebtorAuth"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "description": "Debtor",
                        "name": "Debtor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DebtorRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get debtor by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "groups guidfixed",
                        "name": "groups",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/debtaccount/debtor/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Debtor",
                        "name": "Debtor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DebtorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Debtor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Debtor"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/dimension": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "disabled",
                        "name": "disabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Dimension",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "description": "Dimension",
                        "name": "Dimension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dimension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Dimension",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "description": "Dimension GUIDs",
                        "name": "Dimension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/dimension/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "disabled",
                        "name": "disabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/dimension/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Dimension info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dimension guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Dimension",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dimension ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dimension",
                        "name": "Dimension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dimension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Dimension",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dimension"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dimension ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Document Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "List Document Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Status Value",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Module Value",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Doc GUID Ref Value",
                        "name": "docguidref",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Document Ref Value",
                        "name": "documentref",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImagePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Document Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "Create Document Image",
                "parameters": [
                    {
                        "description": "DocumentImage",
                        "name": "DocumentImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Document Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "Create Document Image",
                "parameters": [
                    {
                        "description": "DocumentImage",
                        "name": "DocumentImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentImage"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage/upload": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Upload Document Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module",
                        "name": "module",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentImageInfoResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage/{guid}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Document Image Infomation",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "Get Document Image Infomation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImageInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage/{guid}/comment": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Document Image Comment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "Create Document Image Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CommentRequest",
                        "name": "CommentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimage/{guid}/imageedit": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Document Image Edit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImage"
                ],
                "summary": "Create Document Image Edit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ImageEditRequest",
                        "name": "ImageEditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImageEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Document Image Group",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup",
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Path Job",
                        "name": "pathtask",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Job guidfixed",
                        "name": "taskguid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "เอกสารที่มีการจอง,0 not filter, 1 filter",
                        "name": "reserve",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ex. status=0 status=1,2,3",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "document reference: empty not filter, 1 not reference, 2 referenced",
                        "name": "ref",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From Date (YYYY-MM-DD)",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To Date (YYYY-MM-DD)",
                        "name": "todate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Save Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "description": "Document Image Group",
                        "name": "DocumentImageGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImageGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Many Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "summary": "Delete Many Document Image Group",
                "parameters": [
                    {
                        "description": "document image group guids",
                        "name": "guids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/docref/{docref}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Document Image Group By document reference Infomation",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "summary": "Get Document Image Group By document reference Infomation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document reference",
                        "name": "docref",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImageInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/task/{taskguid}/recount": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ReCount Status Document Image Group By Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task guid",
                        "name": "taskguid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/task/{taskguid}/status": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Status Document Image Group By Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task guid",
                        "name": "taskguid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "status",
                        "name": "models.Status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/xsort/{taskguid}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update XSort Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "description": "XSort",
                        "name": "XSort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.XSortDocumentImageGroupRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Image Group",
                        "name": "DocumentImageGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentImageGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "summary": "Delete Document Image Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}/documentimages": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image Reference",
                        "name": "ImageReferenceBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImageReferenceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}/reference": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Reference In Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reference",
                        "name": "Reference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}/status": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Status Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "status",
                        "name": "models.Status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}/tags": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Status Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "tags",
                        "name": "[]string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/documentimagegroup/{guid}/ungroup": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Ungroup Document Image Group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentImageGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "document image group guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/category": {
            "get": {
                "description": "List Product Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "group number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/notify": {
            "get": {
                "description": "List Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "notify type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TablePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/product": {
            "get": {
                "description": "List Product",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "is A La Carte",
                        "name": "isalacarte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order types ex. a01,a02",
                        "name": "ordertypes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/product-barcode": {
            "get": {
                "description": "List Product By Barcodes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "barcode json array",
                        "name": "barcodes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/restaurant/kitchen": {
            "get": {
                "description": "List Restaurant Kitchen Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.KitchenPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/restaurant/table": {
            "get": {
                "description": "List Restaurant Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TablePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/restaurant/zone": {
            "get": {
                "description": "List Restaurant Zone Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ZonePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/sale-invoice/last-pos-docno": {
            "get": {
                "description": "get SaleInvoice Last DocNo",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Max DocNo",
                        "name": "maxdocno",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/shop-info": {
            "get": {
                "description": "Get Shop Info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order station code",
                        "name": "order-station",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/e-order/shop-info/v1.1": {
            "get": {
                "description": "Get Shop Info v1.1",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order station code",
                        "name": "order-station",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/employee/password": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Password Employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update Password Employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register Employee",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_shop_employee_models.EmployeeRequestPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/favorite-shop": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Favorite Shop In Account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "Shop Favorite Request",
                        "name": "ShopFavoriteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShopFavoriteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/forgot-password-phonenumber": {
            "post": {
                "description": "For User Forgot Password Phonenumber",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Forgot Password By Phonenumber",
                "parameters": [
                    {
                        "description": "Forgot Password PhoneNumber Request",
                        "name": "ForgotPasswordPhoneNumberRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForgotPasswordPhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountgroup": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายการกลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายการกลุ่มบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountGroupPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "สร้างกลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "สร้างกลุ่มบัญชี",
                "parameters": [
                    {
                        "description": "กลุ่มบัญชี",
                        "name": "AccountGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountgroup/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "นำเข้ากลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "นำเข้ากลุ่มบัญชี",
                "parameters": [
                    {
                        "description": "กลุ่มบัญชี",
                        "name": "AccountGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountgroup/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดกลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดกลุ่มบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountGroupInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แก้ไขกลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แก้ไขกลุ่มบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "กลุ่มบัญชี",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบกลุ่มบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "ลบกลุ่มบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountperiodmaster": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create AccountPeriodMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "description": "AccountPeriodMaster",
                        "name": "AccountPeriodMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountPeriodMaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete AccountPeriodMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "description": "AccountPeriodMaster GUIDs",
                        "name": "AccountPeriodMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountperiodmaster/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Bulk Create AccountPeriodMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "description": "Array AccountPeriodMaster",
                        "name": "AccountPeriodMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountPeriodMaster"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountperiodmaster/by-date": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get AccountPeriodMaster by date",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "date-list",
                        "name": "date-list",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountperiodmaster/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/accountperiodmaster/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountPeriodMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update AccountPeriodMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountPeriodMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AccountPeriodMaster",
                        "name": "AccountPeriodMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountPeriodMaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete AccountPeriodMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AccountPeriodMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountPeriodMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/chartofaccount": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายการผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายการผังบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChartOfAccountPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "สร้างผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "สร้างผังบัญชี",
                "parameters": [
                    {
                        "description": "ChartOfAccount",
                        "name": "ChartOfAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChartOfAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/chartofaccount/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "นำเข้าผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "นำเข้าผังบัญชี",
                "parameters": [
                    {
                        "description": "ChartOfAccount",
                        "name": "ChartOfAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChartOfAccount"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/chartofaccount/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดผังบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChartOfAccountInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แก้ไขผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แก้ไขผังบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ChartOfAccount",
                        "name": "ChartOfAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChartOfAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบผังบัญชี",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "ลบผังบัญชี",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายการข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายการข้อมูลรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "AppName",
                        "name": "appname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DocDate ex. 2020-01-01",
                        "name": "docdate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Account Year",
                        "name": "accountyear",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Account Period",
                        "name": "accountperiod",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Account Description",
                        "name": "accountdescription",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created By",
                        "name": "createdby",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Create Date ex. 2020-01-01",
                        "name": "createdat",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date ex 2020-01-01",
                        "name": "startdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date ex 2020-01-01",
                        "name": "enddate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "บันทึกข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "บันทึกข้อมูลรายวัน",
                "parameters": [
                    {
                        "description": "ข้อมูลรายวัน",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Journal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/": {
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Journal",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "parameters": [
                    {
                        "description": "GL GUIDs",
                        "name": "GL",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/batchid/{batchid}": {
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบข้อมูลรายวัน By Batch ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "ลบข้อมูลรายวัน By Batch ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal Batch ID",
                        "name": "batchid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "นำเข้าข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "นำเข้าข้อมูลรายวัน",
                "parameters": [
                    {
                        "description": "ข้อมูลรายวัน",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Journal"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/docno/{docno}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดข้อมูลรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal DocNo",
                        "name": "docno",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/docref/deselect": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "For List Document Ref selected",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WSDocumentRef"
                ],
                "summary": "List Document Ref selected",
                "parameters": [
                    {
                        "description": "JournalRef body",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JournalRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/docref/next": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "For List Document Ref selected",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WSDocumentRef"
                ],
                "summary": "List Document Ref selected",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/docref/select": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "For List Document Ref selected",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WSDocumentRef"
                ],
                "summary": "List Document Ref selected",
                "parameters": [
                    {
                        "description": "JournalRef body",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JournalRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/docref/{doc}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document Ref",
                        "name": "doc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/last-docno": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดข้อมูลรายวัน",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journal/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดข้อมูลรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แก้ไขข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แก้ไขข้อมูลรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ข้อมูลรายวัน",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Journal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบข้อมูลรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "ลบข้อมูลรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journalbook": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายการสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายการสมุดรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalBookPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "สร้างสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "สร้างสมุดรายวัน",
                "parameters": [
                    {
                        "description": "สมุดรายวัน",
                        "name": "JournalBook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JournalBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journalbook/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "นำเข้าสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "นำเข้าสมุดรายวัน",
                "parameters": [
                    {
                        "description": "สมุดรายวัน",
                        "name": "JournalBook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.JournalBook"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/journalbook/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียดสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แสดงรายละเอียดสมุดรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalBookInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แก้ไขสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "แก้ไขสมุดรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "สมุดรายวัน",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JournalBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบสมุดรายวัน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GL"
                ],
                "summary": "ลบสมุดรายวัน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/report/balancesheet": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ดึงข้อมูลงบดุล",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GLReport"
                ],
                "summary": "ดึงข้อมูลงบดุล",
                "parameters": [
                    {
                        "type": "string",
                        "description": "กลุ่มบัญชี",
                        "name": "accountgroup",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ณ วันที่ (Date Format: YYYY-MM-DD)",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "รวมรายการปิดปัญชี",
                        "name": "ica",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TimeZone",
                        "name": "timezone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheetReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/report/ledgeraccount": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "บัญชีแยกประเภท",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GLReport"
                ],
                "summary": "บัญชีแยกประเภท",
                "parameters": [
                    {
                        "type": "string",
                        "description": "จากวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "startdate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ถึงวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account Code",
                        "name": "accountcode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TimeZone",
                        "name": "timezone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrialBalanceSheetReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/report/profitandloss": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ดึงข้อมูลงบกำไรขาดทุน",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GLReport"
                ],
                "summary": "ดึงข้อมูลงบกำไรขาดทุน",
                "parameters": [
                    {
                        "type": "string",
                        "description": "กลุ่มบัญชี",
                        "name": "accountgroup",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "จากวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "startdate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ถึงวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "รวมรายการปิดปัญชี",
                        "name": "ica",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TimeZone",
                        "name": "timezone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LostAndProfitSheetReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/gl/report/trialbalancesheet": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ดึงข้อมูลงบทดลอง",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GLReport"
                ],
                "summary": "ดึงข้อมูลงบทดลอง",
                "parameters": [
                    {
                        "type": "string",
                        "description": "กลุ่มบัญชี",
                        "name": "accountgroup",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "จากวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "startdate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ถึงวันที่ (Date Format: YYYY-MM-DD)",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "รวมรายการปิดปัญชี",
                        "name": "ica",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TimeZone",
                        "name": "timezone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrialBalanceSheetReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/line-notify": {
            "post": {
                "description": "List Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "E-Order"
                ],
                "parameters": [
                    {
                        "description": "Line Payload",
                        "name": "LinePayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LinePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/list-shop": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Merchant In My Account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.ShopUserInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "User Account",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Logout Current Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/master-sync": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Master Sync",
                "tags": [
                    "MasterSync"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "last update date ex: 2020-01-01T00:00:00",
                        "name": "lastupdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "module code ex: product,productcategory,productbarcode",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "action code (all, new, remove)",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter data ex. filter=branch:1,department:x01",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/master-sync/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Master Sync Offset",
                "tags": [
                    "MasterSync"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "last update date ex: 2020-01-01T00:00:00",
                        "name": "lastupdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "module code ex: product,productcategory,productbarcode",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "action code (all, new, remove)",
                        "name": "action",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/master-sync/status": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Master Sync Status",
                "tags": [
                    "MasterSync"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/member": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Member Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MemberPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Member",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "parameters": [
                    {
                        "description": "Member",
                        "name": "Member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/member/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Member",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MemberInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Member",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member",
                        "name": "Member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Member",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/notify": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch guid",
                        "name": "branch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "description": "Notify",
                        "name": "Notify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notify"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "description": "Notify GUIDs",
                        "name": "Notify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/notify/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Notify info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/notify/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch guid",
                        "name": "branch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/notify/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Notify info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notify",
                        "name": "Notify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notify"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notify",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/ocr/result": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Result Ocr",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OCR"
                ],
                "summary": "Result Ocr",
                "parameters": [
                    {
                        "description": "Ocr Request",
                        "name": "OcrRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ocr.OcrRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/ocr/upload": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Upload Ocr",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OCR"
                ],
                "summary": "Upload Ocr",
                "parameters": [
                    {
                        "description": "Ocr Request",
                        "name": "OcrRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ocr.OcrRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/option": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Inventory Option",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InventoryOptionPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Inventory Option",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "parameters": [
                    {
                        "description": "Option",
                        "name": "Option",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InventoryOptionMain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/option/by-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Inventory Option by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/option/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Inventory Option",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Option Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InventoryOptionMainInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Option",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Option ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Option",
                        "name": "Option",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InventoryOptionMain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Option",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Option ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/optionpattern": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create OptionPattern",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "description": "OptionPattern",
                        "name": "OptionPattern",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OptionPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/optionpattern/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create OptionPattern",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "description": "OptionPattern",
                        "name": "OptionPattern",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OptionPattern"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/optionpattern/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OptionPattern ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update OptionPattern",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OptionPattern ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OptionPattern",
                        "name": "OptionPattern",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OptionPattern"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete OptionPattern",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OptionPattern"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OptionPattern ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/device": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderDevice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "description": "Device GUIDs",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/device/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderDevice"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/device/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Device info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/device/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/device/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Device info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderDevice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/setting": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Order Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderSetting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Order Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "description": "Setting GUIDs",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/setting/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Order Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Setting"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/setting/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Setting info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/setting/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/order/setting/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Order Setting info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Order Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderSetting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Order Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderSetting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/branch": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "business type code",
                        "name": "businesstypecode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "description": "Branch",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_branch_models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "description": "Branch GUIDs",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/branch/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "description": "Branch",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_organization_branch_models.Branch"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/branch/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Branch info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/branch/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "business type code",
                        "name": "businesstypecode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/branch/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Branch info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_branch_models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "description": "BusinessType",
                        "name": "BusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_businesstype_models.BusinessType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "description": "BusinessType GUIDs",
                        "name": "BusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "description": "BusinessType",
                        "name": "BusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_organization_businesstype_models.BusinessType"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get BusinessType info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BusinessType Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type/default": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get BusinessType info default",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/business-type/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get BusinessType info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BusinessType guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update BusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BusinessType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BusinessType",
                        "name": "BusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_businesstype_models.BusinessType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BusinessType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/department": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Department",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "description": "Department",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_department_models.Department"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Department",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "description": "Department GUIDs",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/department/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Department",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "description": "Department",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_organization_department_models.Department"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/department/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/department/{departmentCode}/branch/{branchCode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Department info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department Code",
                        "name": "departmentCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch Code",
                        "name": "branchCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/organization/department/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Department info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Department",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_organization_department_models.Department"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Department",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bankmaster": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BankMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "description": "BankMaster",
                        "name": "BankMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BankMaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BankMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "description": "BankMaster GUIDs",
                        "name": "BankMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bankmaster/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BankMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "description": "BankMaster",
                        "name": "BankMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BankMaster"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bankmaster/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bankmaster/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BankMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update BankMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BankMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BankMaster",
                        "name": "BankMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BankMaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BankMaster",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BankMaster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BankMaster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bookbank": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BookBank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "description": "BookBank",
                        "name": "BookBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookBank"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BookBank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "description": "BookBank GUIDs",
                        "name": "BookBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bookbank/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create BookBank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "description": "BookBank",
                        "name": "BookBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BookBank"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bookbank/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/bookbank/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BookBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update BookBank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BookBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BookBank",
                        "name": "BookBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BookBank"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete BookBank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BookBank"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "BookBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/qrpayment": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create QrPayment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "description": "QrPayment",
                        "name": "QrPayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QrPayment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete QrPayment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "description": "QrPayment GUIDs",
                        "name": "QrPayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/qrpayment/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create QrPayment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "description": "QrPayment",
                        "name": "QrPayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.QrPayment"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/qrpayment/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/payment/qrpayment/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "QrPayment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update QrPayment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "QrPayment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "QrPayment",
                        "name": "QrPayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QrPayment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete QrPayment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "QrPayment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "QrPayment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/paymentmaster": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายการ payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "แสดงรายการ payment master",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMasterPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "สร้าง payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "สร้าง payment master",
                "parameters": [
                    {
                        "description": "paymentmaster",
                        "name": "PaymentMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/paymentmaster-type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียด payment master type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "แสดงรายละเอียด payment master type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/paymentmaster/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "นำเข้าข้อมูล payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "นำเข้าข้อมูล payment master",
                "parameters": [
                    {
                        "description": "paymentmaster",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Journal"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/paymentmaster/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แสดงรายละเอียด payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "แสดงรายละเอียด payment master",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMasterInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "แก้ไข payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "แก้ไข payment master",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Master ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "paymentmaster",
                        "name": "PaymentMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ลบ payment master",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PaymentMaster"
                ],
                "summary": "ลบ payment master",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/media": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Media",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "description": "Media",
                        "name": "Media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Media",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "description": "Media GUIDs",
                        "name": "Media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/media/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Media",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "description": "Media",
                        "name": "Media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Media"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/media/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Media info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Media Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/media/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/media/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Media info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Media guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Media",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Media",
                        "name": "Media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Media",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/setting": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "description": "Setting GUIDs",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/setting/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Setting"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/setting/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Setting info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/setting/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/setting/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Setting info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Setting",
                        "name": "Setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Setting",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/shift": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "DocType",
                        "name": "doctype",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Shift",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "description": "Shift",
                        "name": "Shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shift"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Shift",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "description": "Shift GUIDs",
                        "name": "Shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/shift/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Shift",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "description": "Shift",
                        "name": "Shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Shift"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/shift/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Shift info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shift Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/shift/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "DocType",
                        "name": "doctype",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/pos/shift/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Shift info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shift guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Shift",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shift",
                        "name": "Shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shift"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Shift",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shift"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/branch": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Save SectionBranch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "description": "SectionBranch",
                        "name": "SectionBranch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SectionBranch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionBranch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "description": "SectionBranch GUIDs",
                        "name": "SectionBranch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/branch/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SectionBranch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "description": "SectionBranch",
                        "name": "SectionBranch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SectionBranch"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/branch/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionBranch info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBranch Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/branch/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/branch/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionBranch info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBranch guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionBranch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBranch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBranch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/business-type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Save SectionBusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "description": "SectionBusinessType",
                        "name": "SectionBusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SectionBusinessType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionBusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "description": "SectionBusinessType GUIDs",
                        "name": "SectionBusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/business-type/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SectionBusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "description": "SectionBusinessType",
                        "name": "SectionBusinessType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SectionBusinessType"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/business-type/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionBusinessType info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBusinessType Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/business-type/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/business-type/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionBusinessType info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBusinessType guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionBusinessType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionBusinessType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionBusinessType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/department": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Save SectionDepartment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionDepartment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SectionDepartment",
                        "name": "SectionDepartment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SectionDepartment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionDepartment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "description": "SectionDepartment GUIDs",
                        "name": "SectionDepartment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/department/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SectionDepartment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "description": "SectionDepartment",
                        "name": "SectionDepartment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SectionDepartment"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/department/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/department/{departmentCode}/branch/{branchCode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionDepartment info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionDepartment Code",
                        "name": "departmentCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch Code",
                        "name": "branchCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product-section/department/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SectionDepartment info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionDepartment guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SectionDepartment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SectionDepartment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SectionDepartment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "business type code ex. bt1,bt2",
                        "name": "businesstypecode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code ex. b1,b2",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "is A La Carte",
                        "name": "isalacarte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order types ex. a01,a02",
                        "name": "ordertypes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "item type",
                        "name": "itemtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "ProductBarcode",
                        "name": "ProductBarcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductBarcodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "ProductBarcode GUIDs",
                        "name": "ProductBarcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/bom/{barcode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get product barcode bom view information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Barcode",
                        "name": "barcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/branch": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductBarcode Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "Product BarcodeBranch Request",
                        "name": "ProductBarcodeBranchRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductBarcodeBranchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "ProductBarcode",
                        "name": "ProductBarcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_product_productbarcode_models.ProductBarcode"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/business-type": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductBarcode Business Type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "Product Barcode Business Type Request",
                        "name": "ProductBarcodeBusinessTypeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductBarcodeBusinessTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/by-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ProductBarcode by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/export": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "ProductBarcode Export",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "language code",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Barcode",
                        "name": "barcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Product Name",
                        "name": "productname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Unit Code",
                        "name": "unitcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Unit Name",
                        "name": "unitname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Item Type",
                        "name": "itemtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Group Code",
                        "name": "groupcode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/groups": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get by group codes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "array of group",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "business type code ex. bt1,bt2",
                        "name": "businesstypecode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code ex. b1,b2",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "is A La Carte",
                        "name": "isalacarte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order types ex. a01,a02",
                        "name": "ordertypes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "item type",
                        "name": "itemtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/master": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get master ProductBarcode by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/pk/{barcode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get data by barcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Barcode",
                        "name": "barcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/ref/{barcode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get by reference barcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reference Barcode",
                        "name": "barcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/units": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get by reference barcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "array of units",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/xsort": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update XSort ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "description": "XSort",
                        "name": "XSort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.XSortModifyReqesut"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductBarcode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductBarcode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ProductBarcode",
                        "name": "ProductBarcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductBarcodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductBarcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductBarcode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/barcode2": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductBarcode2"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "group number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductCategory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "description": "ProductCategory",
                        "name": "ProductCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductCategory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "description": "ProductCategory GUIDs",
                        "name": "ProductCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category/barcodes": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Barcodes Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "description": "Barcodes",
                        "name": "Barcodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BarcodesModifyReqesut"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductCategory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "description": "ProductCategory",
                        "name": "ProductCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductCategory"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "group number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category/xsort": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update XSort Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "description": "XSort",
                        "name": "XSort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.XSortModifyReqesut"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/category/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductCategory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductCategory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductCategory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ProductCategory",
                        "name": "ProductCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductCategory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductCategory"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductCategory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "description": "ProductGroup",
                        "name": "ProductGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_product_productgroup_models.ProductGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "description": "ProductGroup GUIDs",
                        "name": "ProductGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "description": "ProductGroup",
                        "name": "ProductGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_product_productgroup_models.ProductGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group/by-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Product Group by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group/save": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Save ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "description": "ProductGroup",
                        "name": "ProductGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_product_productgroup_models.ProductGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/group/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ProductGroup",
                        "name": "ProductGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_product_productgroup_models.ProductGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductGroup",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductGroup"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/order-type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create OrderType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "description": "OrderType",
                        "name": "OrderType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete OrderType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "description": "OrderType GUIDs",
                        "name": "OrderType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/order-type/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create OrderType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "description": "OrderType",
                        "name": "OrderType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderType"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/order-type/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get OrderType info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderType Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/order-type/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/order-type/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get OrderType info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderType guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update OrderType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OrderType",
                        "name": "OrderType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete OrderType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/promotion": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "promotiontype",
                        "name": "promotiontype",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "description": "Promotion",
                        "name": "Promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "description": "Promotion GUIDs",
                        "name": "Promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/promotion/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "description": "Promotion",
                        "name": "Promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Promotion"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/promotion/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Promotion info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Promotion Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/promotion/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "promotiontype",
                        "name": "promotiontype",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/promotion/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Promotion info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Promotion guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Promotion",
                        "name": "Promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "description": "ProductType",
                        "name": "ProductType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_product_producttype_models.ProductType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "description": "ProductType GUIDs",
                        "name": "ProductType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/type/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "description": "ProductType",
                        "name": "ProductType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_product_producttype_models.ProductType"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/type/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ProductType info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductType Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/type/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/product/type/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ProductType info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductType guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ProductType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ProductType",
                        "name": "ProductType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_product_producttype_models.ProductType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductType"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/productimport": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "description": "ProductImport",
                        "name": "ProductImport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductImport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/productimport/item/{guid}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get ProductImport Part",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductImport By GUID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/productimport/upload": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ProductImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "excel file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/productimport/{task-id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List ProductImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ProductImportHeader",
                        "name": "ProductImportHeader",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductImportHeader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ProductImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/productimport/{task-id}/verify": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Verify ProductImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ProductImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Current Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserProfileReponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "description": "For User Update Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Update profile",
                "parameters": [
                    {
                        "description": "Update account",
                        "name": "UserProfileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/profileshop": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Current Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserProfileReponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "refresh token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "Reresh Token",
                        "name": "TokenLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TokenLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "For User Register Application",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register An Account",
                "parameters": [
                    {
                        "description": "Register account",
                        "name": "RegisterEmailRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/register-phonenumber": {
            "post": {
                "description": "For User Register Phonenumber",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register By Phonenumber",
                "parameters": [
                    {
                        "description": "OTP Request",
                        "name": "OTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/register/exists-phonenumber": {
            "post": {
                "description": "Check Exists Phone Number",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register Check Exists Phone Number",
                "parameters": [
                    {
                        "description": "Username",
                        "name": "PhoneNumber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PhoneNumberField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/register/exists-username": {
            "post": {
                "description": "Check Exists Username",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register Check Exists Username",
                "parameters": [
                    {
                        "description": "Username",
                        "name": "Username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UsernameField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/execute": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Execute ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportqueryc_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/playground": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Playground ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportqueryc_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/query": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportqueryc_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery GUIDs",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/query/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReportQuery info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/query/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/report/query/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReportQuery info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportqueryc_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/execute": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Execute ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportquerym_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/playground": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Playground ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportquerym_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/query": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportquerym_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "description": "ReportQuery GUIDs",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/query/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReportQuery info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/query/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/reportm/query/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReportQuery info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReportQuery",
                        "name": "ReportQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_report_reportquerym_models.ReportQuery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReportQuery",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReportQuery"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReportQuery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/device": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_restaurant_device_models.Device"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Device GUIDs",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/device/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_restaurant_device_models.Device"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/device/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/device/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_restaurant_device_models.Device"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/kitchen": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant Kitchen Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.KitchenPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Kitchen",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Kitchen",
                        "name": "Kitchen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Kitchen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/kitchen/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Kitchen",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Kitchen",
                        "name": "Kitchen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Kitchen"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/kitchen/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/kitchen/products": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant Kitchen product barcode",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/kitchen/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant Kitchen",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.KitchenInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Kitchen",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Kitchen",
                        "name": "Kitchen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Kitchen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Kitchen",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "description": "Notifier",
                        "name": "Notifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notifier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "description": "Notifier GUIDs",
                        "name": "Notifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier-device": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "description": "Notifier GUIDs",
                        "name": "Notifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier-device/ref": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Ref Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier-device/ref-confirm": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Ref confirm Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "description": "NotifierDeviceConfirmAuthPayload",
                        "name": "NotifierDeviceConfirmAuthPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotifierDeviceConfirmAuthPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier-device/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Notifier info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notifier",
                        "name": "Notifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notifier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Notifier info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/notifier/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Notifier info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notifier",
                        "name": "Notifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notifier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Notifier",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifier"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/printer": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant Printer Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PrinterPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Printer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Printer",
                        "name": "Printer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Printer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/printer/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Printer ShopZone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Printer",
                        "name": "Printer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Printer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/printer/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/printer/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant Printer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Printer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PrinterInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Printer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Printer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Printer",
                        "name": "Printer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Printer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Printer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Printer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/settings": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant Settings Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantSettingsPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Settings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Settings",
                        "name": "Settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Restaurant Settings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Restaurant Settings GUIDs",
                        "name": "RestaurantSettings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/settings/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create RestaurantSettings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "RestaurantSettings",
                        "name": "RestaurantSettings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RestaurantSettings"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/settings/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant Settings By Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "RestaurantSettings Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantSettingsInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/settings/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant Settings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "RestaurantSettings Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantSettingsInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Settings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Settings ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Settings",
                        "name": "Settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Settings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "RestaurantSettings ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/staff": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Staff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Staff",
                        "name": "Staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Staff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Staff GUIDs",
                        "name": "Staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/staff/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Staff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Staff",
                        "name": "Staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Staff"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/staff/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/staff/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Staff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Staff",
                        "name": "Staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Staff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/table": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant  Table Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TablePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant  Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Table",
                        "name": "Table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Table GUIDs",
                        "name": "Table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/table/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Table",
                        "name": "Table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Table"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/table/xorder": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update XOrder Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "XOrder",
                        "name": "XOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.XOrderRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/table/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant  Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Table Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TableInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant  Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Table ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Table",
                        "name": "Table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant  Table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Table ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/zone": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Restaurant Zone Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group Number",
                        "name": "group-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ZonePageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Zone",
                        "name": "Zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Restaurant Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Zone GUIDs",
                        "name": "Zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/zone/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "description": "Zone",
                        "name": "Zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Zone"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkInsertResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/zone/by-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Restaurant Zone by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/restaurant/zone/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get Restaurant Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zone Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ZoneInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone",
                        "name": "Zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Restaurant Zone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sale-channel": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "description": "SaleChannel",
                        "name": "SaleChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleChannel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "description": "SaleChannel GUIDs",
                        "name": "SaleChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sale-channel/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "description": "SaleChannel",
                        "name": "SaleChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SaleChannel"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sale-channel/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleChannel info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleChannel Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sale-channel/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sale-channel/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleChannel info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleChannel guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update SaleChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleChannel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SaleChannel",
                        "name": "SaleChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleChannel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleChannel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/select-shop": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Access to Shop",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "Shop",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.ShopSelectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/selected": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "For List Document Ref selected",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WSDocumentRef"
                ],
                "summary": "List Document Ref selected",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/send-phonenumber-otp": {
            "post": {
                "description": "For User Send Phonenumber OTP",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Phonenumber OTP",
                "parameters": [
                    {
                        "description": "OTP Request",
                        "name": "OTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Access to Shop",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ShopInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Shop",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "description": "Add Shop",
                        "name": "ShopRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShopRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/branch": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "description": "Branch",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_shop_branch_models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "description": "Branch GUIDs",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/branch/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/branch/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_shop_branch_models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Branch",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/employee": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "Employee",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_shop_employee_models.EmployeeRequestRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "Employee GUIDs",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/employee/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get employee by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/employee/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/employee/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_shop_employee_models.EmployeeRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/permission": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get shopuser info by username",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ShopUser"
                ],
                "parameters": [
                    {
                        "description": "UserRoleRequest",
                        "name": "UserRoleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/permission/{username}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get shopuser info by username",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ShopUser"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get shopuser info by username",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ShopUser"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/users": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get shopuser",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ShopUser"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/shop/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Infomation Shop Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ShopInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Shop",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shop Body",
                        "name": "Shop",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Shop",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Shop"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/slip/{shopid}/{posid}/{docdate}/{docno}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "GET Slip Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shopid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Doc Date",
                        "name": "docdate",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Doc No",
                        "name": "docno",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_images_models.Image"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/slipimage": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Doc Date",
                        "name": "docdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SlipImage",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Doc Date (yyyy-mm-dd)",
                        "name": "docdate",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SlipImage",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "description": "SlipImage GUIDs",
                        "name": "SlipImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/slipimage/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Doc Date",
                        "name": "docdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/slipimage/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SlipImage info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SlipImage guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SlipImage",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SlipImage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SlipImage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sml-transaction": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SMLTransaction",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMLTransaction"
                ],
                "parameters": [
                    {
                        "description": "SMLTransactionRequest",
                        "name": "SMLTransactionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SMLTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SMLTransaction",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMLTransaction"
                ],
                "parameters": [
                    {
                        "description": "SMLTransactionRequest",
                        "name": "SMLTransactionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SMLTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SMLTransaction",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMLTransaction"
                ],
                "parameters": [
                    {
                        "description": "SMLTransaction Key Request",
                        "name": "SMLTransactionKeyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SMLTransactionKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/sml-transaction/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Bulk Create SMLTransaction",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMLTransaction"
                ],
                "parameters": [
                    {
                        "description": "SMLTransaction Bulk Request",
                        "name": "SMLTransactionBulkRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SMLTransactionBulkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/smspaymentsettings": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "sms payment received settings service",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SmsPayment"
                ],
                "summary": "sms payment settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/smspaymentsettings/{storefrontguid}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "sms payment received settings service",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SmsPayment"
                ],
                "summary": "sms payment settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storefront guidfixed",
                        "name": "storefrontguid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JournalInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "sms payment received settings service",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SmsPayment"
                ],
                "summary": "sms payment settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storefront guidfixed",
                        "name": "storefrontguid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sms payment settings",
                        "name": "SmsPaymentSettings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmsPaymentSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/smstransaction": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransactionPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "description": "sms data",
                        "name": "SMSTransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/smstransaction/confirm/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransactionPageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/smstransaction/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GIUDFIXED",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransactionInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GIUDFIXED",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sms data",
                        "name": "Journal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmsTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "รับข้อมูล sms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "รับข้อมูล sms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GIUDFIXED",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockBalanceImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "description": "StockBalanceImport",
                        "name": "StockBalanceImport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockBalanceImport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport/item/{guid}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get StockBalanceImport Part",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceImport By GUID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport/upload": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockBalanceImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "excel file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport/{task-id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List StockBalanceImport",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stock Balance Header",
                        "name": "StockBalanceHeader",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockBalanceHeader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport/{task-id}/meta": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get StockBalanceImport Meta",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/stockbalanceimport/{task-id}/verify": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Verify StockBalanceImport By Task ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceImport"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "task-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/storefront": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Storefront"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Storefront",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Storefront"
                ],
                "parameters": [
                    {
                        "description": "Storefront",
                        "name": "Storefront",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Storefront"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/storefront/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Storefront"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storefront ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Storefront",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Storefront"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storefront ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Storefront",
                        "name": "Storefront",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Storefront"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Storefront",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Storefront"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storefront ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Module",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ex. status=0 status=1,2,3",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "description": "Task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "description": "Task GUIDs",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "description": "Task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/generate-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "generate new Task Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/reject/{guid}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Task Reject by task guid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Module",
                        "name": "module",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/task/{id}/status": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Task Status",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task Status",
                        "name": "TaskStatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_task_models.TaskStatus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/tokenlogin": {
            "post": {
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "description": "User Account",
                        "name": "TokenLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TokenLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "module ex.TF,RF,GL",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create DocumentFormate",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "description": "DocumentFormate",
                        "name": "DocumentFormate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentFormate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete DocumentFormate",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "description": "DocumentFormate GUIDs",
                        "name": "DocumentFormate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create DocumentFormate",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "description": "DocumentFormate",
                        "name": "DocumentFormate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentFormate"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get DocumentFormate info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocumentFormate Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate/default": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get DocumentFormate Default Module info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "module ex.TF,RF,GL",
                        "name": "module",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/document-formate/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get DocumentFormate info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocumentFormate guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update DocumentFormate",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocumentFormate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DocumentFormate",
                        "name": "DocumentFormate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentFormate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete DocumentFormate",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "DocumentFormate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocumentFormate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/paid": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Paid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "description": "Paid",
                        "name": "Paid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Paid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Paid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "description": "Paid GUIDs",
                        "name": "Paid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/paid/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Paid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "description": "Paid",
                        "name": "Paid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Paid"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/paid/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Paid info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paid Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/paid/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/paid/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Paid info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paid guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Paid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paid ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Paid",
                        "name": "Paid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Paid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Paid",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Paid"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paid ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/pay": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Pay",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "description": "Pay",
                        "name": "Pay",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pay"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Pay",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "description": "Pay GUIDs",
                        "name": "Pay",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/pay/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Pay",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "description": "Pay",
                        "name": "Pay",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pay"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/pay/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Pay info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pay Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/pay/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/pay/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Pay info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pay guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Pay",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pay ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pay",
                        "name": "Pay",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pay"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Pay",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Pay"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pay ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Purchase",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "description": "Purchase",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Purchase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Purchase",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "description": "Purchase GUIDs",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-order": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "description": "PurchaseOrder",
                        "name": "PurchaseOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "description": "PurchaseOrder GUIDs",
                        "name": "PurchaseOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-order/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "description": "PurchaseOrder",
                        "name": "PurchaseOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PurchaseOrder"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-order/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get PurchaseOrder info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseOrder Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-order/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-order/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get PurchaseOrder info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseOrder guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseOrder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PurchaseOrder",
                        "name": "PurchaseOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseOrder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-return": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create PurchaseReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "description": "PurchaseReturn",
                        "name": "PurchaseReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PurchaseReturn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete PurchaseReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "description": "PurchaseReturn GUIDs",
                        "name": "PurchaseReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-return/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create PurchaseReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "description": "PurchaseReturn",
                        "name": "PurchaseReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PurchaseReturn"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-return/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get PurchaseReturn info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseReturn Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-return/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase-return/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get PurchaseReturn info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseReturn guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update PurchaseReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseReturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PurchaseReturn",
                        "name": "PurchaseReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PurchaseReturn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete PurchaseReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "PurchaseReturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Purchase",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "description": "Purchase",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Purchase"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Purchase info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/purchase/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Purchase info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Purchase",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Purchase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Purchase",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/receivableother": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ReceivableOther",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "description": "ReceivableOther",
                        "name": "ReceivableOther",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReceivableOther"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReceivableOther",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "description": "ReceivableOther GUIDs",
                        "name": "ReceivableOther",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/receivableother/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create ReceivableOther",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "description": "ReceivableOther",
                        "name": "ReceivableOther",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ReceivableOther"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/receivableother/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReceivableOther info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReceivableOther Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/receivableother/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/receivableother/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get ReceivableOther info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReceivableOther guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update ReceivableOther",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReceivableOther ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReceivableOther",
                        "name": "ReceivableOther",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReceivableOther"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete ReceivableOther",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ReceivableOther"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ReceivableOther ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is POS",
                        "name": "ispos",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleInvoice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoice",
                        "name": "SaleInvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleInvoice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoice GUIDs",
                        "name": "SaleInvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is POS",
                        "name": "ispos",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleInvoiceReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoiceReturn",
                        "name": "SaleInvoiceReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleInvoiceReturn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleInvoiceReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoiceReturn GUIDs",
                        "name": "SaleInvoiceReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleInvoiceReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoiceReturn",
                        "name": "SaleInvoiceReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SaleInvoiceReturn"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoiceReturn info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoiceReturn Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return/last-pos-docno": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoiceReturn info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Max DocNo",
                        "name": "maxdocno",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is POS",
                        "name": "ispos",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice-return/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoiceReturn info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoiceReturn guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update SaleInvoiceReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoiceReturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SaleInvoiceReturn",
                        "name": "SaleInvoiceReturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleInvoiceReturn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleInvoiceReturn",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoiceReturn"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoiceReturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create SaleInvoice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "description": "SaleInvoice",
                        "name": "SaleInvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SaleInvoice"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoice info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoice Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/export": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "SaleInvoice Export",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "language code",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Doc Date",
                        "name": "docdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Doc No",
                        "name": "docno",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Barcode",
                        "name": "barcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Product Name",
                        "name": "productname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Unit Code",
                        "name": "unitcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Unit Name",
                        "name": "unitname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Qty",
                        "name": "qty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Discount Amount",
                        "name": "discountamount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Label Sum Amount",
                        "name": "sumamount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/last-pos-docno": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoice info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "POS ID",
                        "name": "posid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Max DocNo",
                        "name": "maxdocno",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is POS",
                        "name": "ispos",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/sale-invoice/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get SaleInvoice info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoice guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update SaleInvoice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SaleInvoice",
                        "name": "SaleInvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaleInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete SaleInvoice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SaleInvoice"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "SaleInvoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-adjustment": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockAdjustment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "description": "StockAdjustment",
                        "name": "StockAdjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockAdjustment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockAdjustment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "description": "StockAdjustment GUIDs",
                        "name": "StockAdjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-adjustment/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockAdjustment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "description": "StockAdjustment",
                        "name": "StockAdjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StockAdjustment"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-adjustment/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockAdjustment info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockAdjustment Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-adjustment/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-adjustment/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockAdjustment info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockAdjustment guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockAdjustment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockAdjustment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockAdjustment",
                        "name": "StockAdjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockAdjustment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockAdjustment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockAdjustment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockBalance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "description": "StockBalance",
                        "name": "StockBalance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockBalance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "description": "StockBalance GUIDs",
                        "name": "StockBalance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance-detail": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockBalanceDetail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "description": "StockBalanceDetail",
                        "name": "StockBalanceDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_transaction_stockbalancedetail_models.StockBalanceDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceDetail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "description": "StockBalanceDetail GUIDs",
                        "name": "StockBalanceDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance-detail/doc/{docno}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "customer code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceDetail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance-detail/list/doc/{docno}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "DocNo",
                        "name": "docno",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance-detail/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockBalanceDetail info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalanceDetail guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockBalanceDetail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalanceDetail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockBalanceDetail",
                        "name": "StockBalanceDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smlcloudplatform_internal_transaction_stockbalancedetail_models.StockBalanceDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalanceDetail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalanceDetail"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalanceDetail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockBalance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "description": "StockBalance",
                        "name": "StockBalance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StockBalance"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockBalance info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalance Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-balance/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockBalance info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalance guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockBalance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockBalance",
                        "name": "StockBalance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockBalance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockBalance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockBalance"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockBalance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-prickup-product": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockPickupProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "description": "StockPickupProduct",
                        "name": "StockPickupProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockPickupProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockPickupProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "description": "StockPickupProduct GUIDs",
                        "name": "StockPickupProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-prickup-product/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockPickupProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "description": "StockPickupProduct",
                        "name": "StockPickupProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StockPickupProduct"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-prickup-product/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockPickupProduct info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockPickupProduct Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-prickup-product/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-prickup-product/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockPickupProduct info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockPickupProduct guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockPickupProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockPickupProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockPickupProduct",
                        "name": "StockPickupProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockPickupProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockPickupProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockPickupProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockPickupProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-receive-product": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockReceiveProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReceiveProduct",
                        "name": "StockReceiveProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockReceiveProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockReceiveProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReceiveProduct GUIDs",
                        "name": "StockReceiveProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-receive-product/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockReceiveProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReceiveProduct",
                        "name": "StockReceiveProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StockReceiveProduct"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-receive-product/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockReceiveProduct info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReceiveProduct Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-receive-product/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-receive-product/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockReceiveProduct info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReceiveProduct guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockReceiveProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReceiveProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockReceiveProduct",
                        "name": "StockReceiveProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockReceiveProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockReceiveProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReceiveProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReceiveProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-return-product": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockReturnProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReturnProduct",
                        "name": "StockReturnProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockReturnProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockReturnProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReturnProduct GUIDs",
                        "name": "StockReturnProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-return-product/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockReturnProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "description": "StockReturnProduct",
                        "name": "StockReturnProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StockReturnProduct"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-return-product/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockReturnProduct info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReturnProduct Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-return-product/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-return-product/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockReturnProduct info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReturnProduct guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockReturnProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReturnProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockReturnProduct",
                        "name": "StockReturnProduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockReturnProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockReturnProduct",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockReturnProduct"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockReturnProduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-transfer": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create StockTransfer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "description": "StockTransfer",
                        "name": "StockTransfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockTransfer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockTransfer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "description": "StockTransfer GUIDs",
                        "name": "StockTransfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-transfer/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockTransfer info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockTransfer Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-transfer/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cust code",
                        "name": "custcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "branch code",
                        "name": "branchcode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from date",
                        "name": "fromdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to date",
                        "name": "todate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transaction/stock-transfer/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get StockTransfer info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockTransfer guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update StockTransfer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockTransfer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "StockTransfer",
                        "name": "StockTransfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockTransfer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete StockTransfer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "StockTransfer"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "StockTransfer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transport-channel": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get list step",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create TransportChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "description": "TransportChannel",
                        "name": "TransportChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransportChannel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete TransportChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "description": "TransportChannel GUIDs",
                        "name": "TransportChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transport-channel/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create TransportChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "description": "TransportChannel",
                        "name": "TransportChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransportChannel"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transport-channel/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get TransportChannel info by Code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "TransportChannel Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transport-channel/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/transport-channel/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get TransportChannel info by guidfixed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "TransportChannel guidfixed",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update TransportChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "TransportChannel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TransportChannel",
                        "name": "TransportChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransportChannel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete TransportChannel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "TransportChannel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "TransportChannel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "liumit ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "unitcode filter ex. \\",
                        "name": "unitcode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "description": "Unit",
                        "name": "Unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Unit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "description": "Unit GUIDs",
                        "name": "Unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "description": "Unit",
                        "name": "Unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Unit"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit/by-code": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get unit by unit code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang ex. en,th",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "unitcode filter ex. \\",
                        "name": "unitcode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit/master": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get master Unit by code array",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code filter, json array encode ",
                        "name": "codes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/unit/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unit",
                        "name": "Unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Unit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Unit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unit",
                        "name": "Unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Unit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/upload/images": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_images_models.Image"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/upload/productimage": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Image",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smlcloudplatform_internal_images_models.Image"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/user/permissions": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get shopuser",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ShopUser"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "List Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "description": "Warehouse",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "description": "Warehouse GUIDs",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/bulk": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "description": "Warehouse",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Warehouse"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/code/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Warehouse by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/list": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "search limit offset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/location": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get data warehouse location list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/location/shelf": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get data warehouse location shelf list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Value",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get struct array by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Warehouse",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Warehouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseCode}/location": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Warehouse Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Request",
                        "name": "LocationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseCode}/location/": {
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Warehouse Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Code",
                        "name": "LocationCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseCode}/location/{locationCode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Location by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Warehouse Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Request",
                        "name": "LocationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseCode}/location/{locationCode}/shelf": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Warehouse Shelf",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shelf Request",
                        "name": "ShelfRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShelfRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Warehouse Shelf",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shelf Code",
                        "name": "ShelfCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseCode}/location/{locationCode}/shelf/{shelfCode}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "get Shelf by code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Shelf Code",
                        "name": "shelfCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Warehouse Shelf",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse Code",
                        "name": "warehouseCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location Code",
                        "name": "locationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "shelf Code",
                        "name": "shelfCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shelf Request",
                        "name": "ShelfRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShelfRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessWithID"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponseFailed"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountGroup": {
            "type": "object",
            "required": [
                "code",
                "name1"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.AccountGroupInfo": {
            "type": "object",
            "required": [
                "code",
                "name1"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.AccountGroupInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AccountGroupInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.AccountGroupPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AccountGroupInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.AccountPeriodMaster": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enddate": {
                    "type": "string"
                },
                "isdisabled": {
                    "type": "boolean"
                },
                "period": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.ApiResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "docno": {
                    "type": "string"
                },
                "id": {},
                "message": {
                    "type": "string"
                },
                "pagination": {},
                "success": {
                    "type": "boolean"
                },
                "total": {}
            }
        },
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.AuthResponseFailed": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.BOMProductBarcode": {
            "type": "object",
            "required": [
                "barcode"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "condition": {
                    "type": "boolean"
                },
                "dividevalue": {
                    "type": "number"
                },
                "guidfixed": {
                    "type": "string"
                },
                "itemunitcode": {
                    "type": "string"
                },
                "itemunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "qty": {
                    "type": "number"
                },
                "standvalue": {
                    "type": "number"
                }
            }
        },
        "models.BOMRequest": {
            "type": "object",
            "required": [
                "barcode"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "condition": {
                    "type": "boolean"
                },
                "dividevalue": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "standvalue": {
                    "type": "number"
                }
            }
        },
        "models.BalanceSheetAccountDetail": {
            "type": "object",
            "properties": {
                "accountbalancetype": {
                    "description": "ด้านบัญชี 1=เดบิต,2=เครดิต",
                    "type": "integer"
                },
                "accountcategory": {
                    "description": "หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย",
                    "type": "integer"
                },
                "accountcode": {
                    "description": "รหัสผังบัญชี",
                    "type": "string"
                },
                "accountgroup": {
                    "description": "กลุ่มบัญชี",
                    "type": "string"
                },
                "accountlevel": {
                    "description": "ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ",
                    "type": "integer"
                },
                "accountname": {
                    "description": "ชื่อบัญชี",
                    "type": "string"
                },
                "amount": {
                    "description": "มูลค่า",
                    "type": "number"
                },
                "consolidateaccountcode": {
                    "description": "รหัสผังบัญชีกลาง",
                    "type": "string"
                },
                "shopid": {
                    "type": "string"
                }
            }
        },
        "models.BalanceSheetReport": {
            "type": "object",
            "properties": {
                "accountgroup": {
                    "description": "เล่มบัญชี",
                    "type": "string"
                },
                "assets": {
                    "description": "สินทรัพย์",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BalanceSheetAccountDetail"
                    }
                },
                "enddate": {
                    "description": "วันที่สิ้นสุด",
                    "type": "string"
                },
                "liabilities": {
                    "description": "หนี้สิน",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BalanceSheetAccountDetail"
                    }
                },
                "ownesequities": {
                    "description": "ทุนและส่วนของเจ้าของ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BalanceSheetAccountDetail"
                    }
                },
                "reportdate": {
                    "description": "วันที่ทำรายการ",
                    "type": "string"
                },
                "totalassetamount": {
                    "description": "รวมสินทรัพย์",
                    "type": "number"
                },
                "totalliabilityamount": {
                    "description": "รวมหนี้สิน",
                    "type": "number"
                },
                "totalliabilityandownersequityamount": {
                    "description": "รวมหนี้สิน ทุน และส่วนของเจ้าของ",
                    "type": "number"
                },
                "totalownersequityamount": {
                    "description": "รวมทุนและส่วนของเจ้าของ",
                    "type": "number"
                }
            }
        },
        "models.BalanceSheetReportResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.BalanceSheetReport"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.BankMaster": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.BarcodeRequest": {
            "type": "object",
            "required": [
                "barcode"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "condition": {
                    "type": "boolean"
                },
                "dividevalue": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "standvalue": {
                    "type": "number"
                }
            }
        },
        "models.BarcodesModifyReqesut": {
            "type": "object"
        },
        "models.BookBank": {
            "type": "object",
            "required": [
                "banknames",
                "names"
            ],
            "properties": {
                "accountcode": {
                    "type": "string"
                },
                "accountname": {
                    "type": "string"
                },
                "bankbranch": {
                    "type": "string"
                },
                "bankcode": {
                    "type": "string"
                },
                "banknames": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "bookcode": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_payment_bookbank_models.Image"
                    }
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "passbook": {
                    "type": "string"
                }
            }
        },
        "models.BranchBusinessType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.BranchPOS": {
            "type": "object",
            "properties": {
                "footerreceiptpos": {
                    "type": "string"
                },
                "headerreceiptpos": {
                    "type": "string"
                },
                "inquirytypepurchase": {
                    "type": "integer"
                },
                "inquirytypesale": {
                    "type": "integer"
                },
                "taxid": {
                    "type": "string"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattypepurchase": {
                    "type": "integer"
                },
                "vattypesale": {
                    "type": "integer"
                }
            }
        },
        "models.BulkInsertResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payloadDuplicate": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "updateFailed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.BulkResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payloadDuplicate": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "updateFailed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ChartOfAccount": {
            "type": "object",
            "properties": {
                "accountbalancetype": {
                    "description": "ด้านบัญชี 1=เดบิต,2=เครดิต",
                    "type": "integer"
                },
                "accountcategory": {
                    "description": "หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย",
                    "type": "integer"
                },
                "accountcode": {
                    "description": "รหัสผังบัญชี",
                    "type": "string"
                },
                "accountgroup": {
                    "description": "กลุ่มบัญชี",
                    "type": "string"
                },
                "accountlevel": {
                    "description": "ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ",
                    "type": "integer"
                },
                "accountname": {
                    "description": "ชื่อบัญชี",
                    "type": "string"
                },
                "consolidateaccountcode": {
                    "description": "รหัสผังบัญชีกลาง",
                    "type": "string"
                }
            }
        },
        "models.ChartOfAccountInfo": {
            "type": "object",
            "properties": {
                "accountbalancetype": {
                    "description": "ด้านบัญชี 1=เดบิต,2=เครดิต",
                    "type": "integer"
                },
                "accountcategory": {
                    "description": "หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย",
                    "type": "integer"
                },
                "accountcode": {
                    "description": "รหัสผังบัญชี",
                    "type": "string"
                },
                "accountgroup": {
                    "description": "กลุ่มบัญชี",
                    "type": "string"
                },
                "accountlevel": {
                    "description": "ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ",
                    "type": "integer"
                },
                "accountname": {
                    "description": "ชื่อบัญชี",
                    "type": "string"
                },
                "consolidateaccountcode": {
                    "description": "รหัสผังบัญชีกลาง",
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                }
            }
        },
        "models.ChartOfAccountInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ChartOfAccountInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ChartOfAccountPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChartOfAccountInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Choice": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "choicedetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IncudeChoice"
                    }
                },
                "code": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "itemunit": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "qtymax": {
                    "type": "number"
                },
                "selected": {
                    "type": "boolean"
                },
                "suggestcode": {
                    "type": "string"
                }
            }
        },
        "models.CodeXSort": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "manufacturerguid": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "unitcode": {
                    "type": "string"
                },
                "unitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                }
            }
        },
        "models.Color": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "colorhex": {
                    "type": "string"
                },
                "colorselect": {
                    "type": "string"
                },
                "colorselecthex": {
                    "type": "string"
                },
                "colorsystem": {
                    "type": "string"
                },
                "colorsystemhex": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentedat": {
                    "type": "string"
                },
                "commentedby": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                }
            }
        },
        "models.CommentRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "models.Contact": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "countrycode": {
                    "type": "string"
                },
                "districtcode": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phonenumber": {
                    "type": "string"
                },
                "provincecode": {
                    "type": "string"
                },
                "subdistrictcode": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "models.CreditorAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.CreditorGroup": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "groupcode": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.CreditorRequest": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "addressforbilling": {
                    "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_creditor_models.Address"
                },
                "addressforshipping": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_creditor_models.Address"
                    }
                },
                "auth": {
                    "$ref": "#/definitions/models.CreditorAuth"
                },
                "branchnumber": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "creditday": {
                    "type": "integer"
                },
                "customertype": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fundcode": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_creditor_models.Image"
                    }
                },
                "ismember": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "personaltype": {
                    "type": "integer"
                },
                "taxid": {
                    "type": "string"
                }
            }
        },
        "models.CustomerGroup": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "groupcode": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.CustomerRequest": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "addressforbilling": {
                    "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_customer_models.Address"
                },
                "addressforshipping": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_customer_models.Address"
                    }
                },
                "branchnumber": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "creditday": {
                    "type": "integer"
                },
                "customertype": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fundcode": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_customer_models.Image"
                    }
                },
                "iscreditor": {
                    "type": "boolean"
                },
                "isdebtor": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "personaltype": {
                    "type": "integer"
                },
                "taxid": {
                    "type": "string"
                }
            }
        },
        "models.DebtorAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.DebtorGroup": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "groupcode": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.DebtorRequest": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "addressforbilling": {
                    "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_debtor_models.Address"
                },
                "addressforshipping": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_debtor_models.Address"
                    }
                },
                "auth": {
                    "$ref": "#/definitions/models.DebtorAuth"
                },
                "branchnumber": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "creditday": {
                    "type": "integer"
                },
                "customertype": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fundcode": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_debtaccount_debtor_models.Image"
                    }
                },
                "ismember": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "personaltype": {
                    "type": "integer"
                },
                "taxid": {
                    "type": "string"
                }
            }
        },
        "models.Detail": {
            "type": "object",
            "properties": {
                "averagecost": {
                    "type": "number"
                },
                "barcode": {
                    "type": "string"
                },
                "calcflag": {
                    "type": "integer"
                },
                "discount": {
                    "type": "string"
                },
                "discountamount": {
                    "type": "number"
                },
                "dividevalue": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docref": {
                    "type": "string"
                },
                "docrefdatetime": {
                    "type": "string"
                },
                "extrajson": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "ispos": {
                    "type": "integer"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemguid": {
                    "type": "string"
                },
                "itemnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "itemtype": {
                    "type": "integer"
                },
                "laststatus": {
                    "type": "integer"
                },
                "linenumber": {
                    "type": "integer"
                },
                "locationcode": {
                    "type": "string"
                },
                "locationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "multiunit": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "priceexcludevat": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "remark": {
                    "type": "string"
                },
                "shelfcode": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "standvalue": {
                    "type": "number"
                },
                "sumamount": {
                    "type": "number"
                },
                "sumamountexcludevat": {
                    "type": "number"
                },
                "sumofcost": {
                    "type": "number"
                },
                "taxtype": {
                    "type": "integer"
                },
                "tolocationcode": {
                    "type": "string"
                },
                "tolocationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvaluevat": {
                    "type": "number"
                },
                "towhcode": {
                    "type": "string"
                },
                "towhnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "unitcode": {
                    "type": "string"
                },
                "unitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "vatcal": {
                    "type": "integer"
                },
                "vattype": {
                    "type": "integer"
                },
                "whcode": {
                    "type": "string"
                },
                "whnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.Dimension": {
            "type": "object",
            "properties": {
                "isdisabled": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DimensionItem"
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.DimensionItem": {
            "type": "object",
            "properties": {
                "guidfixed": {
                    "type": "string"
                },
                "isdisabled": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.DocumentFormate": {
            "type": "object",
            "required": [
                "doccode"
            ],
            "properties": {
                "accountgroup": {
                    "type": "string"
                },
                "bookcode": {
                    "type": "string"
                },
                "dateformate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DocumentFormateDetail"
                    }
                },
                "doccode": {
                    "type": "string",
                    "minLength": 1
                },
                "docformat": {
                    "type": "string"
                },
                "docnumber": {
                    "type": "integer"
                },
                "isautoformat": {
                    "type": "boolean"
                },
                "module": {
                    "type": "string",
                    "minLength": 1
                },
                "yeartype": {
                    "type": "integer"
                }
            }
        },
        "models.DocumentFormateDetail": {
            "type": "object",
            "required": [
                "actioncode"
            ],
            "properties": {
                "accountcode": {
                    "type": "string"
                },
                "accountcredit": {
                    "$ref": "#/definitions/models.ChartOfAccountInfo"
                },
                "accountdebit": {
                    "$ref": "#/definitions/models.ChartOfAccountInfo"
                },
                "actioncode": {
                    "type": "string",
                    "minLength": 1
                },
                "credit": {
                    "type": "string"
                },
                "debit": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "isentryselfaccount": {
                    "type": "boolean"
                }
            }
        },
        "models.DocumentImage": {
            "type": "object",
            "properties": {
                "cloneimagefrom": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "edits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageEdit"
                    }
                },
                "imageuri": {
                    "type": "string"
                },
                "metafileat": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "referencegroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReferenceGroup"
                    }
                },
                "references": {
                    "description": "IsReject        bool             `json:\"isreject\" bson:\"isreject\"`\nStatus          int8             `json:\"status\" bson:\"status\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reference"
                    }
                },
                "uploadedat": {
                    "type": "string"
                },
                "uploadedby": {
                    "type": "string"
                }
            }
        },
        "models.DocumentImageGroup": {
            "type": "object",
            "required": [
                "taskguid"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "imagereferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageReference"
                    }
                },
                "iscompleted": {
                    "type": "boolean"
                },
                "pathtask": {
                    "type": "string"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reference"
                    }
                },
                "rejectfromgroupguid": {
                    "type": "string"
                },
                "rejectremark": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "statuschangedat": {
                    "type": "string"
                },
                "statuschangedby": {
                    "type": "string"
                },
                "statushistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StatusHistory"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskguid": {
                    "type": "string",
                    "minLength": 1
                },
                "title": {
                    "description": "DocumentRef     string            `json:\"documentref\" bson:\"documentref\"`",
                    "type": "string"
                },
                "uploadedat": {
                    "type": "string"
                },
                "uploadedby": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.DocumentImageInfo": {
            "type": "object",
            "properties": {
                "cloneimagefrom": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "edits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageEdit"
                    }
                },
                "guidfixed": {
                    "type": "string"
                },
                "imageuri": {
                    "type": "string"
                },
                "metafileat": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "referencegroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReferenceGroup"
                    }
                },
                "references": {
                    "description": "IsReject        bool             `json:\"isreject\" bson:\"isreject\"`\nStatus          int8             `json:\"status\" bson:\"status\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reference"
                    }
                },
                "uploadedat": {
                    "type": "string"
                },
                "uploadedby": {
                    "type": "string"
                }
            }
        },
        "models.DocumentImageInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.DocumentImageInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DocumentImagePageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DocumentImageInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.EmployeeBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.EmployeeContact": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "string"
                },
                "districtcode": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phonenumber": {
                    "type": "string"
                },
                "provincecode": {
                    "type": "string"
                },
                "subdistrictcode": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "models.ForgotPasswordPhoneNumberRequest": {
            "type": "object",
            "required": [
                "countrycode",
                "password",
                "phonenumber"
            ],
            "properties": {
                "countrycode": {
                    "type": "string",
                    "maxLength": 20
                },
                "otppin": {
                    "type": "string"
                },
                "otprefcode": {
                    "type": "string"
                },
                "otptoken": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 5
                },
                "phonenumber": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "models.ImageEdit": {
            "type": "object",
            "properties": {
                "editedat": {
                    "type": "string"
                },
                "editedby": {
                    "type": "string"
                },
                "imageuri": {
                    "type": "string"
                }
            }
        },
        "models.ImageEditRequest": {
            "type": "object",
            "properties": {
                "editedat": {
                    "type": "string"
                },
                "editedby": {
                    "type": "string"
                },
                "imageuri": {
                    "type": "string"
                }
            }
        },
        "models.ImageReference": {
            "type": "object",
            "properties": {
                "cloneimagefrom": {
                    "type": "string"
                },
                "documentimageguid": {
                    "type": "string"
                },
                "imageuri": {
                    "type": "string"
                },
                "metafileat": {
                    "type": "string"
                },
                "name": {
                    "description": "ImageEditURI       string `json:\"imageedituri\" bson:\"imageedituri\"`",
                    "type": "string"
                },
                "uploadedat": {
                    "type": "string"
                },
                "uploadedby": {
                    "description": "IsReject           bool      `json:\"isreject\" bson:\"isreject\"`",
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.ImageReferenceBody": {
            "type": "object",
            "properties": {
                "documentimageguid": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.IncudeChoice": {
            "type": "object",
            "properties": {
                "choicecode": {
                    "type": "string"
                },
                "choicedetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IncudeChoice"
                    }
                }
            }
        },
        "models.InventoryOptionMain": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Choice"
                    }
                },
                "choicetype": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "isstockcontrol": {
                    "type": "boolean"
                },
                "maxselect": {
                    "type": "integer"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "optiondetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OptionDetail"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.InventoryOptionMainInfo": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Choice"
                    }
                },
                "choicetype": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "isstockcontrol": {
                    "type": "boolean"
                },
                "maxselect": {
                    "type": "integer"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "optiondetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OptionDetail"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.InventoryOptionPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InventoryOptionMainInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Journal": {
            "type": "object",
            "properties": {
                "accountdescription": {
                    "type": "string"
                },
                "accountgroup": {
                    "type": "string"
                },
                "accountperiod": {
                    "type": "integer"
                },
                "accountyear": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "appname": {
                    "type": "string"
                },
                "batchid": {
                    "type": "string"
                },
                "bookcode": {
                    "type": "string"
                },
                "docdate": {
                    "type": "string",
                    "format": "dateTime"
                },
                "docformat": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "documentref": {
                    "type": "string"
                },
                "exdocrefdate": {
                    "type": "string"
                },
                "exdocrefno": {
                    "type": "string"
                },
                "journaldetail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JournalDetail"
                    }
                },
                "journaltype": {
                    "description": "ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)",
                    "type": "integer"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tax"
                    }
                },
                "vats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vat"
                    }
                }
            }
        },
        "models.JournalBook": {
            "type": "object",
            "required": [
                "name1"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.JournalBookInfo": {
            "type": "object",
            "required": [
                "name1"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.JournalBookInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.JournalBookInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.JournalBookPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JournalBookInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.JournalDetail": {
            "type": "object",
            "properties": {
                "accountcode": {
                    "description": "chart of account code",
                    "type": "string"
                },
                "accountname": {
                    "type": "string"
                },
                "creditamount": {
                    "type": "number"
                },
                "debitamount": {
                    "type": "number"
                }
            }
        },
        "models.JournalInfo": {
            "type": "object",
            "properties": {
                "accountdescription": {
                    "type": "string"
                },
                "accountgroup": {
                    "type": "string"
                },
                "accountperiod": {
                    "type": "integer"
                },
                "accountyear": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "appname": {
                    "type": "string"
                },
                "batchid": {
                    "type": "string"
                },
                "bookcode": {
                    "type": "string"
                },
                "createdat": {
                    "type": "string"
                },
                "createdby": {
                    "type": "string"
                },
                "docdate": {
                    "type": "string",
                    "format": "dateTime"
                },
                "docformat": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "documentref": {
                    "type": "string"
                },
                "exdocrefdate": {
                    "type": "string"
                },
                "exdocrefno": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "journaldetail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JournalDetail"
                    }
                },
                "journaltype": {
                    "description": "ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)",
                    "type": "integer"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tax"
                    }
                },
                "vats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vat"
                    }
                }
            }
        },
        "models.JournalInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.JournalInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.JournalPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JournalInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.JournalRef": {
            "type": "object",
            "properties": {
                "docref": {
                    "type": "string"
                }
            }
        },
        "models.Kitchen": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "groupnumber": {
                    "type": "integer"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "printers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.KitchenInfo": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "groupnumber": {
                    "type": "integer"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "printers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.KitchenInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.KitchenInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.KitchenPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KitchenInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.LanguageConfig": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "codetranslator": {
                    "type": "string"
                },
                "isdefault": {
                    "type": "boolean"
                },
                "isuse": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.LinePayload": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.LocationRequest": {
            "type": "object",
            "required": [
                "locationcode",
                "warehousecode"
            ],
            "properties": {
                "locationcode": {
                    "type": "string"
                },
                "locationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "shelf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Shelf"
                    }
                },
                "warehousecode": {
                    "type": "string"
                }
            }
        },
        "models.LostAndProfitSheetReportResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ProfitAndLossSheetReport"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Media": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MediaResource"
                    }
                }
            }
        },
        "models.MediaResource": {
            "type": "object",
            "properties": {
                "daysofweek": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "displaytime": {
                    "type": "integer"
                },
                "fromDate": {
                    "type": "string"
                },
                "fromTime": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "integer"
                },
                "toDate": {
                    "type": "string"
                },
                "toTime": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branchcode": {
                    "type": "string"
                },
                "branchtype": {
                    "type": "integer"
                },
                "contacttype": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "personaltype": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                },
                "taxid": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "models.MemberInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branchcode": {
                    "type": "string"
                },
                "branchtype": {
                    "type": "integer"
                },
                "contacttype": {
                    "type": "integer"
                },
                "guidfixed": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "personaltype": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                },
                "taxid": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "models.MemberInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.MemberInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.MemberPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MemberInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.NameNormal": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 255
                },
                "isauto": {
                    "type": "boolean"
                },
                "isdelete": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.NameX": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "isauto": {
                    "type": "boolean"
                },
                "isdelete": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.Notifier": {
            "type": "object",
            "required": [
                "code",
                "message",
                "title"
            ],
            "properties": {
                "accceptedat": {
                    "type": "string"
                },
                "accceptedby": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "message": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notifiedat": {
                    "type": "string"
                },
                "rejectedat": {
                    "type": "string"
                },
                "rejectedby": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.NotifierDeviceConfirmAuthPayload": {
            "type": "object",
            "required": [
                "fcmtoken",
                "refcode"
            ],
            "properties": {
                "deviceid": {
                    "type": "string"
                },
                "devicename": {
                    "type": "string"
                },
                "fcmtoken": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "refcode": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "models.Notify": {
            "type": "object",
            "properties": {
                "branchevents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NotifyBranchEvent"
                    }
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.NotifyBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.NotifyBranchEvent": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/definitions/models.NotifyBranch"
                },
                "isenable": {
                    "type": "boolean"
                },
                "isnearoutofstock": {
                    "type": "boolean"
                },
                "isoutofstock": {
                    "type": "boolean"
                },
                "issavebill": {
                    "type": "boolean"
                }
            }
        },
        "models.OTPRequest": {
            "type": "object",
            "required": [
                "countrycode",
                "phonenumber"
            ],
            "properties": {
                "countrycode": {
                    "type": "string",
                    "maxLength": 20
                },
                "phonenumber": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "models.OptionDetail": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "choicedetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IncudeChoice"
                    }
                },
                "image": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "optiondetailcode": {
                    "type": "string"
                }
            }
        },
        "models.OptionPattern": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "colorcode": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "optionpatterndetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OptionPatternDetail"
                    }
                },
                "patterncode": {
                    "type": "string"
                }
            }
        },
        "models.OptionPatternDetail": {
            "type": "object",
            "required": [
                "name1",
                "names"
            ],
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Choice"
                    }
                },
                "choicetype": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "isstockcontrol": {
                    "type": "boolean"
                },
                "maxselect": {
                    "type": "integer"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "optioncode": {
                    "type": "string"
                },
                "optiondetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OptionDetail"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.OrderDevice": {
            "type": "object",
            "properties": {
                "activepin": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "devicenumber": {
                    "type": "string"
                },
                "devicetype": {
                    "description": "ประเภทเครื่อง ex.เครื่องลูกค้า,เครื่องพนักงาน",
                    "type": "integer"
                },
                "docformat": {
                    "type": "string"
                },
                "isposactive": {
                    "description": "ใช้งาน POS",
                    "type": "boolean"
                },
                "settingcode": {
                    "type": "string"
                }
            }
        },
        "models.OrderSetting": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "activepin": {
                    "type": "string"
                },
                "adminpin": {
                    "type": "string"
                },
                "branch": {
                    "$ref": "#/definitions/models.OrderSettingBranch"
                },
                "categorygroupnumber": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "devicetype": {
                    "description": "ประเภทเครื่อง ex.เครื่องลูกค้า,เครื่องพนักงาน",
                    "type": "integer"
                },
                "docformat": {
                    "type": "string"
                },
                "isposactive": {
                    "description": "ใช้งาน POS",
                    "type": "boolean"
                },
                "kitchengroupnumber": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "logourl": {
                    "type": "string"
                },
                "mediaguid": {
                    "description": "BillHeader *[]models.NameX `json:\"billheader\" bson:\"billheader\"`\nBillFooter        *[]models.NameX           `json:\"billfooter\" bson:\"billfooter\"`",
                    "type": "string"
                },
                "qrcodes": {
                    "description": "Slips             *[]OrderSettingSlip       `json:\"slips\" bson:\"slips\"`",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "salechannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tablegroupnumber": {
                    "type": "integer"
                },
                "tablenumber": {
                    "description": "เลขโต๊ะ",
                    "type": "string"
                },
                "timeforsales": {
                    "description": "timezone.Timezone `bson:\"inline\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderSettingTimeForSale"
                    }
                },
                "zonegroupnumber": {
                    "type": "integer"
                }
            }
        },
        "models.OrderSettingBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.OrderSettingTimeForSale": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.OrderType": {
            "type": "object",
            "required": [
                "names",
                "prices"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "prices": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.OrderTypePrice"
                    }
                },
                "remarks": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.NameX"
                        }
                    }
                }
            }
        },
        "models.OrderTypePrice": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "models.PaginationDataResponse": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "perPage": {
                    "type": "integer"
                },
                "prev": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "models.Paid": {
            "type": "object",
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaidDetail"
                    }
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "doctype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "sumcheque": {
                    "description": "ชำระเงินโดยเช็ค",
                    "type": "number"
                },
                "sumcoupon": {
                    "description": "ชำระเงินโดย Coupon",
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "description": "ชำระเงินโดย Credit Card",
                    "type": "number"
                },
                "summoneytransfer": {
                    "description": "ชำระเงินโดยเงินโอน",
                    "type": "number"
                },
                "sumqrcode": {
                    "description": "ชำระเงินโดย QR Code",
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalbalance": {
                    "type": "number"
                },
                "totalpaymentamount": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                }
            }
        },
        "models.PaidDetail": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "paymentamount": {
                    "type": "number"
                },
                "selected": {
                    "type": "boolean"
                },
                "transflag": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.Pay": {
            "type": "object",
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PayDetail"
                    }
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "doctype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "sumcheque": {
                    "description": "ชำระเงินโดยเช็ค",
                    "type": "number"
                },
                "sumcoupon": {
                    "description": "ชำระเงินโดย Coupon",
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "description": "ชำระเงินโดย Credit Card",
                    "type": "number"
                },
                "summoneytransfer": {
                    "description": "ชำระเงินโดยเงินโอน",
                    "type": "number"
                },
                "sumqrcode": {
                    "description": "ชำระเงินโดย QR Code",
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalbalance": {
                    "type": "number"
                },
                "totalpaymentamount": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                }
            }
        },
        "models.PayDetail": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "paymentamount": {
                    "type": "number"
                },
                "selected": {
                    "type": "boolean"
                },
                "transflag": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.PaymentCreditCard": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "cardnumber": {
                    "type": "string"
                },
                "chargevalue": {
                    "type": "number"
                },
                "chargeword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "totalnetworth": {
                    "type": "number"
                }
            }
        },
        "models.PaymentDetail": {
            "type": "object",
            "properties": {
                "cashamount": {
                    "type": "number"
                },
                "cashamounttext": {
                    "type": "string"
                },
                "paymentcreditcards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentCreditCard"
                    }
                },
                "paymenttransfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentTransfer"
                    }
                }
            }
        },
        "models.PaymentMaster": {
            "type": "object",
            "required": [
                "name1"
            ],
            "properties": {
                "countrycode": {
                    "type": "string"
                },
                "feerate": {
                    "type": "number"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "paymentcode": {
                    "type": "string"
                },
                "paymentlogo": {
                    "type": "string"
                },
                "paymenttype": {
                    "type": "integer"
                },
                "wallettype": {
                    "type": "integer"
                }
            }
        },
        "models.PaymentMasterInfo": {
            "type": "object",
            "required": [
                "name1"
            ],
            "properties": {
                "countrycode": {
                    "type": "string"
                },
                "feerate": {
                    "type": "number"
                },
                "guidfixed": {
                    "type": "string"
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                },
                "paymentcode": {
                    "type": "string"
                },
                "paymentlogo": {
                    "type": "string"
                },
                "paymenttype": {
                    "type": "integer"
                },
                "wallettype": {
                    "type": "integer"
                }
            }
        },
        "models.PaymentMasterInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.PaymentMasterInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.PaymentMasterPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentMasterInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.PaymentTransfer": {
            "type": "object",
            "properties": {
                "accountnumber": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "bankcode": {
                    "type": "string"
                },
                "banknames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "docdatetime": {
                    "type": "string"
                }
            }
        },
        "models.PhoneNumberField": {
            "type": "object",
            "required": [
                "countrycode",
                "phonenumber"
            ],
            "properties": {
                "countrycode": {
                    "type": "string",
                    "maxLength": 20
                },
                "phonenumber": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "models.PosSettingBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.PosSettingLocation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameNormal"
                    }
                }
            }
        },
        "models.PosSettingSlip": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "formcode": {
                    "type": "string"
                },
                "formnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "headernames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "isrequire": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PosSettingTimeForSale": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.PosSettingWarehouse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameNormal"
                    }
                }
            }
        },
        "models.Printer": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "models.PrinterInfo": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "models.PrinterInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.PrinterInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.PrinterPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrinterInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ProductBarcodeBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "isignore": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductBarcodeBranchRequest": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/definitions/models.ProductBarcodeBranch"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProductBarcodeBusinessType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "isignore": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductBarcodeBusinessTypeRequest": {
            "type": "object",
            "properties": {
                "businesstype": {
                    "$ref": "#/definitions/models.ProductBarcodeBusinessType"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProductBarcodeRequest": {
            "type": "object",
            "required": [
                "barcode",
                "names"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "bom": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BOMRequest"
                    }
                },
                "businesstypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductBarcodeBusinessType"
                    }
                },
                "colorselect": {
                    "type": "string"
                },
                "colorselecthex": {
                    "type": "string"
                },
                "condition": {
                    "type": "boolean"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductDimension"
                    }
                },
                "discount": {
                    "type": "string"
                },
                "dividevalue": {
                    "type": "number"
                },
                "foodtype": {
                    "type": "integer"
                },
                "groupcode": {
                    "type": "string"
                },
                "groupnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "ignorebranches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductBarcodeBranch"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductImage"
                    }
                },
                "imageuri": {
                    "type": "string"
                },
                "isalacarte": {
                    "type": "boolean"
                },
                "isdiscountpointofpurchase": {
                    "type": "boolean"
                },
                "isdividend": {
                    "type": "boolean"
                },
                "isonlystaff": {
                    "type": "boolean"
                },
                "issplitunitprint": {
                    "type": "boolean"
                },
                "isstockforrestaurant": {
                    "type": "boolean"
                },
                "issumpoint": {
                    "type": "boolean"
                },
                "isusesubbarcodes": {
                    "type": "boolean"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemtype": {
                    "type": "integer"
                },
                "itemunitcode": {
                    "type": "string"
                },
                "itemunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "itemunitsize": {
                    "type": "number"
                },
                "manufacturerguid": {
                    "type": "string"
                },
                "maxdiscount": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductOption"
                    }
                },
                "ordertypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductOrderType"
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductPrice"
                    }
                },
                "producttype": {
                    "$ref": "#/definitions/smlcloudplatform_internal_product_productbarcode_models.ProductType"
                },
                "qty": {
                    "type": "number"
                },
                "refbarcodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BarcodeRequest"
                    }
                },
                "refdividevalue": {
                    "type": "number"
                },
                "refstandvalue": {
                    "type": "number"
                },
                "refunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "standvalue": {
                    "type": "number"
                },
                "stockbarcode": {
                    "type": "string"
                },
                "taxtype": {
                    "type": "integer"
                },
                "useimageorcolor": {
                    "type": "boolean"
                },
                "vatcal": {
                    "type": "integer"
                },
                "vattype": {
                    "type": "integer"
                },
                "xsorts": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.XSort"
                    }
                }
            }
        },
        "models.ProductCategory": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "childcount": {
                    "type": "integer"
                },
                "codelist": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.CodeXSort"
                    }
                },
                "colorselect": {
                    "type": "string"
                },
                "colorselecthex": {
                    "type": "string"
                },
                "coveruri": {
                    "type": "string"
                },
                "groupnumber": {
                    "type": "integer"
                },
                "imageuri": {
                    "type": "string"
                },
                "isdisabled": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "parentguid": {
                    "type": "string"
                },
                "parentguidall": {
                    "type": "string"
                },
                "useimageorcolor": {
                    "type": "boolean"
                },
                "xsorts": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.XSort"
                    }
                }
            }
        },
        "models.ProductChoice": {
            "type": "object",
            "required": [
                "names",
                "refunitnames"
            ],
            "properties": {
                "guid": {
                    "type": "string"
                },
                "imageuri": {
                    "type": "string"
                },
                "isdefault": {
                    "type": "boolean"
                },
                "isstock": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "price": {
                    "type": "string"
                },
                "qty": {
                    "type": "number"
                },
                "refbarcode": {
                    "type": "string"
                },
                "refbarcodenames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "refproductcode": {
                    "type": "string"
                },
                "refunitcode": {
                    "type": "string"
                },
                "refunitnames": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductDimension": {
            "type": "object",
            "properties": {
                "guidfixed": {
                    "type": "string"
                },
                "isdisabled": {
                    "type": "boolean"
                },
                "item": {
                    "$ref": "#/definitions/models.ProductDimensionItem"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductDimensionItem": {
            "type": "object",
            "properties": {
                "guidfixed": {
                    "type": "string"
                },
                "isdisabled": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductImage": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.ProductImport": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "isduplicate": {
                    "type": "boolean"
                },
                "isexist": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "pricemember": {
                    "type": "number"
                },
                "rownumber": {
                    "type": "number"
                },
                "taskid": {
                    "type": "string"
                },
                "unitcode": {
                    "type": "string"
                }
            }
        },
        "models.ProductImportHeader": {
            "type": "object",
            "required": [
                "languangecode"
            ],
            "properties": {
                "languangecode": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 2
                }
            }
        },
        "models.ProductOption": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductChoice"
                    }
                },
                "choicetype": {
                    "type": "integer"
                },
                "guid": {
                    "type": "string"
                },
                "maxselect": {
                    "type": "integer",
                    "maximum": 60000,
                    "minimum": 0
                },
                "minselect": {
                    "type": "integer",
                    "maximum": 60000,
                    "minimum": 0
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ProductOrderType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ProductPrice": {
            "type": "object",
            "properties": {
                "keynumber": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ProfitAndLossSheetAccountDetail": {
            "type": "object",
            "properties": {
                "accountbalancetype": {
                    "description": "ด้านบัญชี 1=เดบิต,2=เครดิต",
                    "type": "integer"
                },
                "accountcategory": {
                    "description": "หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย",
                    "type": "integer"
                },
                "accountcode": {
                    "description": "รหัสผังบัญชี",
                    "type": "string"
                },
                "accountgroup": {
                    "description": "กลุ่มบัญชี",
                    "type": "string"
                },
                "accountlevel": {
                    "description": "ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ",
                    "type": "integer"
                },
                "accountname": {
                    "description": "ชื่อบัญชี",
                    "type": "string"
                },
                "amount": {
                    "description": "มูลค่า",
                    "type": "number"
                },
                "consolidateaccountcode": {
                    "description": "รหัสผังบัญชีกลาง",
                    "type": "string"
                },
                "shopid": {
                    "type": "string"
                }
            }
        },
        "models.ProfitAndLossSheetReport": {
            "type": "object",
            "properties": {
                "accountgroup": {
                    "description": "เล่มบัญชี",
                    "type": "string"
                },
                "enddate": {
                    "description": "วันที่สิ้นสุด",
                    "type": "string"
                },
                "expenses": {
                    "description": "รายการค่าใช้จ่าย",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProfitAndLossSheetAccountDetail"
                    }
                },
                "incomes": {
                    "description": "รายการรายได้",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProfitAndLossSheetAccountDetail"
                    }
                },
                "profitandlossamount": {
                    "description": "กำไรขาดทุน",
                    "type": "number"
                },
                "reportdate": {
                    "description": "วันที่ทำรายการ",
                    "type": "string"
                },
                "startdate": {
                    "description": "วันที่เริ่มต้น",
                    "type": "string"
                },
                "totalexpenseamount": {
                    "description": "รวมค่าใช้จ่าย",
                    "type": "number"
                },
                "totalincomeamount": {
                    "description": "รวมรายได้",
                    "type": "number"
                }
            }
        },
        "models.Promotion": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PromotionDetail"
                    }
                },
                "fromdate": {
                    "type": "string"
                },
                "fromtime": {
                    "type": "string"
                },
                "ismemberonly": {
                    "type": "boolean"
                },
                "isuseinfriday": {
                    "type": "boolean"
                },
                "isuseinmonday": {
                    "type": "boolean"
                },
                "isuseinsaturday": {
                    "type": "boolean"
                },
                "isuseinsunday": {
                    "type": "boolean"
                },
                "isuseinthursday": {
                    "type": "boolean"
                },
                "isuseintuesday": {
                    "type": "boolean"
                },
                "isuseinwednesday": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "productbarcode": {
                    "$ref": "#/definitions/smlcloudplatform_internal_product_promotion_models.ProductBarcode"
                },
                "promotiontype": {
                    "type": "integer"
                },
                "remark": {
                    "type": "string"
                },
                "todate": {
                    "type": "string"
                },
                "totime": {
                    "type": "string"
                }
            }
        },
        "models.PromotionDetail": {
            "type": "object",
            "properties": {
                "detailtype": {
                    "description": "0: discount, 1: buy x get y, 2: buy x get y with discount",
                    "type": "integer"
                },
                "discount": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "productbarcode": {
                    "$ref": "#/definitions/smlcloudplatform_internal_product_promotion_models.ProductBarcode"
                }
            }
        },
        "models.Purchase": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.PurchaseOrder": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.PurchaseReturn": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.QrPayment": {
            "type": "object",
            "required": [
                "code",
                "qrnames"
            ],
            "properties": {
                "accesscode": {
                    "type": "string"
                },
                "apikey": {
                    "type": "string"
                },
                "bankcharge": {
                    "type": "string"
                },
                "bankcode": {
                    "type": "string"
                },
                "banknames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "billercode": {
                    "type": "string"
                },
                "billerid": {
                    "type": "string"
                },
                "bookbankcode": {
                    "type": "string"
                },
                "bookbanknames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "closeqr": {
                    "description": "0 = เงินเข้าทันที , 1 = สิ้นวัน , 2 = วันถัดไป",
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "customercharge": {
                    "type": "string"
                },
                "isactive": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "merchantname": {
                    "type": "string"
                },
                "qrcode": {
                    "type": "string"
                },
                "qrnames": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "qrtype": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                },
                "storeid": {
                    "type": "string"
                },
                "terminalid": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ReceivableOther": {
            "type": "object",
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReceivableOtherDetail"
                    }
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "doctype": {
                    "type": "integer"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "refdocdate": {
                    "description": "วันที่เอกสารอ้างอิง",
                    "type": "string"
                },
                "refdocno": {
                    "description": "เลขที่เอกสารอ้างอิง",
                    "type": "string"
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "sumcheque": {
                    "description": "ชำระเงินโดยเช็ค",
                    "type": "number"
                },
                "sumcoupon": {
                    "description": "ชำระเงินโดย Coupon",
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "description": "ชำระเงินโดย Credit Card",
                    "type": "number"
                },
                "summoneytransfer": {
                    "description": "ชำระเงินโดยเงินโอน",
                    "type": "number"
                },
                "sumqrcode": {
                    "description": "ชำระเงินโดย QR Code",
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalbalance": {
                    "type": "number"
                },
                "totalpaymentamount": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                }
            }
        },
        "models.ReceivableOtherDetail": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "paymentamount": {
                    "type": "number"
                },
                "selected": {
                    "type": "boolean"
                },
                "transflag": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.RefProductBarcode": {
            "type": "object",
            "required": [
                "barcode"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "condition": {
                    "type": "boolean"
                },
                "dividevalue": {
                    "type": "number"
                },
                "guidfixed": {
                    "type": "string"
                },
                "itemunitcode": {
                    "type": "string"
                },
                "itemunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "qty": {
                    "type": "number"
                },
                "standvalue": {
                    "type": "number"
                }
            }
        },
        "models.Reference": {
            "type": "object",
            "properties": {
                "docno": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                }
            }
        },
        "models.ReferenceGroup": {
            "type": "object",
            "properties": {
                "grouptype": {
                    "type": "string"
                },
                "parentguid": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                },
                "xtype": {
                    "type": "integer"
                }
            }
        },
        "models.RegisterEmailRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "dedezoom": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.DedeZoom"
                },
                "email": {
                    "type": "string",
                    "maxLength": 233
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 5
                },
                "registertype": {
                    "type": "string"
                },
                "timezonelabel": {
                    "type": "string"
                },
                "timezoneoffset": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "yeartype": {
                    "type": "string",
                    "maxLength": 21
                }
            }
        },
        "models.ResponseSuccess": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ResponseSuccessWithID": {
            "type": "object",
            "properties": {
                "id": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.RestaurantSettings": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "models.RestaurantSettingsInfo": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                }
            }
        },
        "models.RestaurantSettingsInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.RestaurantSettingsInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.RestaurantSettingsPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RestaurantSettingsInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.SMLTransactionBulkRequest": {
            "type": "object",
            "required": [
                "body",
                "collection",
                "keyid"
            ],
            "properties": {
                "body": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "collection": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "keyid": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.SMLTransactionKeyRequest": {
            "type": "object",
            "required": [
                "collection",
                "deletekeys",
                "keyid"
            ],
            "properties": {
                "collection": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "deletekeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyid": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.SMLTransactionRequest": {
            "type": "object",
            "required": [
                "body",
                "collection",
                "keyid"
            ],
            "properties": {
                "body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "collection": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "keyid": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.SaleChannel": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "minLength": 1
                },
                "gp": {
                    "type": "number"
                },
                "gptype": {
                    "type": "integer"
                },
                "imageuri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "models.SaleInvoice": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "chequeamount": {
                    "type": "number"
                },
                "chequebookcode": {
                    "type": "string"
                },
                "chequebooknumber": {
                    "type": "string"
                },
                "chequeduedate": {
                    "type": "string"
                },
                "chequeno": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "couponamount": {
                    "type": "number"
                },
                "coupondescription": {
                    "type": "string"
                },
                "couponno": {
                    "type": "string"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SaleInvoiceDetail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "ispos": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "qrcode": {
                    "type": "string"
                },
                "qrcodeamount": {
                    "type": "number"
                },
                "roundamount": {
                    "type": "number"
                },
                "salechannelcode": {
                    "type": "string"
                },
                "salechannelgp": {
                    "type": "number"
                },
                "salechannelgptype": {
                    "type": "integer"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "takeaway": {
                    "type": "integer"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.SaleInvoiceDetail": {
            "type": "object",
            "properties": {
                "averagecost": {
                    "type": "number"
                },
                "barcode": {
                    "type": "string"
                },
                "calcflag": {
                    "type": "integer"
                },
                "discount": {
                    "type": "string"
                },
                "discountamount": {
                    "type": "number"
                },
                "dividevalue": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docref": {
                    "type": "string"
                },
                "docrefdatetime": {
                    "type": "string"
                },
                "extrajson": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "ispos": {
                    "type": "integer"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemguid": {
                    "type": "string"
                },
                "itemnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "itemtype": {
                    "type": "integer"
                },
                "laststatus": {
                    "type": "integer"
                },
                "linenumber": {
                    "type": "integer"
                },
                "locationcode": {
                    "type": "string"
                },
                "locationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "manufacturerguid": {
                    "type": "string"
                },
                "multiunit": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "priceexcludevat": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "remark": {
                    "type": "string"
                },
                "shelfcode": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "standvalue": {
                    "type": "number"
                },
                "sumamount": {
                    "type": "number"
                },
                "sumamountexcludevat": {
                    "type": "number"
                },
                "sumofcost": {
                    "type": "number"
                },
                "taxtype": {
                    "type": "integer"
                },
                "tolocationcode": {
                    "type": "string"
                },
                "tolocationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvaluevat": {
                    "type": "number"
                },
                "towhcode": {
                    "type": "string"
                },
                "towhnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "unitcode": {
                    "type": "string"
                },
                "unitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "vatcal": {
                    "type": "integer"
                },
                "vattype": {
                    "type": "integer"
                },
                "whcode": {
                    "type": "string"
                },
                "whnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.SaleInvoiceReturn": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "chequeamount": {
                    "type": "number"
                },
                "chequebookcode": {
                    "type": "string"
                },
                "chequebooknumber": {
                    "type": "string"
                },
                "chequeduedate": {
                    "type": "string"
                },
                "chequeno": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "couponamount": {
                    "type": "number"
                },
                "coupondescription": {
                    "type": "string"
                },
                "couponno": {
                    "type": "string"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "ispos": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "qrcode": {
                    "type": "string"
                },
                "qrcodeamount": {
                    "type": "number"
                },
                "roundamount": {
                    "type": "number"
                },
                "salechannelcode": {
                    "type": "string"
                },
                "salechannelgp": {
                    "type": "number"
                },
                "salechannelgptype": {
                    "type": "integer"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.SectionBranch": {
            "type": "object",
            "properties": {
                "branchcode": {
                    "type": "string"
                },
                "productcodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SectionBusinessType": {
            "type": "object",
            "properties": {
                "businesstypecode": {
                    "type": "string"
                },
                "productcodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SectionDepartment": {
            "type": "object",
            "properties": {
                "branchcode": {
                    "type": "string"
                },
                "departmentcode": {
                    "type": "string"
                },
                "productcodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Setting": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "activepin": {
                    "type": "string"
                },
                "billfooter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "billheader": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "branch": {
                    "$ref": "#/definitions/models.PosSettingBranch"
                },
                "businesstype": {
                    "description": "ประเภทธุรกิจ",
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "creditcards": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "devicenumber": {
                    "type": "string"
                },
                "doccode": {
                    "type": "string"
                },
                "docformatesalereturn": {
                    "type": "string"
                },
                "docformatinv": {
                    "type": "string"
                },
                "docformattaxinv": {
                    "type": "string"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_pos_setting_models.POSEmployee"
                    }
                },
                "isejournal": {
                    "type": "boolean"
                },
                "isposactive": {
                    "description": "ใช้งาน POS",
                    "type": "boolean"
                },
                "isusecreadit": {
                    "description": "ขายเชื่อได้",
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/models.PosSettingLocation"
                },
                "logourl": {
                    "type": "string"
                },
                "mediaguid": {
                    "type": "string"
                },
                "paymenttype": {
                    "description": "ประเภทการชำระเงิน ex. กินก่อนจ่าย จ่ายก่อนกิน",
                    "type": "integer"
                },
                "qrcodes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "receiptform": {
                    "type": "string"
                },
                "salechanels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SaleChannel"
                    }
                },
                "slips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PosSettingSlip"
                    }
                },
                "timeforsales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PosSettingTimeForSale"
                    }
                },
                "timezonelabel": {
                    "type": "string"
                },
                "timezoneoffset": {
                    "type": "string"
                },
                "transfers": {
                    "description": "Book Bank Transfer เงินโอน",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "wallet": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/models.PosSettingWarehouse"
                }
            }
        },
        "models.Shelf": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "models.ShelfRequest": {
            "type": "object",
            "required": [
                "locationcode",
                "shelfcode",
                "warehousecode"
            ],
            "properties": {
                "locationcode": {
                    "type": "string"
                },
                "shelfcode": {
                    "type": "string"
                },
                "shelfname": {
                    "type": "string"
                },
                "warehousecode": {
                    "type": "string"
                }
            }
        },
        "models.Shift": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "cheque": {
                    "type": "number"
                },
                "coupon": {
                    "type": "number"
                },
                "creditcard": {
                    "type": "number"
                },
                "docdate": {
                    "type": "string"
                },
                "doctype": {
                    "type": "integer"
                },
                "promptpay": {
                    "type": "number"
                },
                "remark": {
                    "type": "string"
                },
                "transfer": {
                    "type": "number"
                },
                "usercode": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Shop": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "branchcode": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShopImage"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "name1": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "profilepicture": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.ShopSettings"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "models.ShopBusinessType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.ShopFavoriteRequest": {
            "type": "object",
            "properties": {
                "isfavorite": {
                    "type": "boolean"
                },
                "shopid": {
                    "type": "string"
                }
            }
        },
        "models.ShopImage": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "models.ShopInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "branchcode": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShopImage"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "name1": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "profilepicture": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.ShopSettings"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "models.ShopRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "branchcode": {
                    "type": "string"
                },
                "businesstype": {
                    "$ref": "#/definitions/models.ShopBusinessType"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShopImage"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "name1": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "profilepicture": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.ShopSettings"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "models.ShopSettings": {
            "type": "object",
            "properties": {
                "emailowners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emailstaffs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inquirytypepurchase": {
                    "type": "integer"
                },
                "inquirytypesale": {
                    "type": "integer"
                },
                "isusebranch": {
                    "type": "boolean"
                },
                "isusedepartment": {
                    "type": "boolean"
                },
                "languageconfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LanguageConfig"
                    }
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "taxid": {
                    "type": "string"
                },
                "vattypepurchase": {
                    "type": "integer"
                },
                "vattypesale": {
                    "type": "number"
                }
            }
        },
        "models.SmsPaymentSettings": {
            "type": "object",
            "required": [
                "patterncode",
                "storefrontguid"
            ],
            "properties": {
                "patterncode": {
                    "type": "string"
                },
                "storefrontguid": {
                    "type": "string",
                    "maxLength": 233
                },
                "timeminuteafter": {
                    "type": "integer"
                },
                "timeminutebefore": {
                    "type": "integer"
                }
            }
        },
        "models.SmsTransaction": {
            "type": "object",
            "required": [
                "storefrontguid"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "deviceuuid": {
                    "type": "string"
                },
                "sendedat": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "storefrontguid": {
                    "type": "string",
                    "maxLength": 233
                },
                "transid": {
                    "type": "string"
                }
            }
        },
        "models.SmsTransactionInfo": {
            "type": "object",
            "required": [
                "storefrontguid"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "deviceuuid": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "sendedat": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "storefrontguid": {
                    "type": "string",
                    "maxLength": 233
                },
                "transid": {
                    "type": "string"
                }
            }
        },
        "models.SmsTransactionInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.SmsTransactionInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.SmsTransactionPageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SmsTransactionInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Staff": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "cashier": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "order": {
                    "type": "boolean"
                }
            }
        },
        "models.Status": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.StatusHistory": {
            "type": "object",
            "properties": {
                "changedat": {
                    "type": "string"
                },
                "changedby": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.StockAdjustment": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockBalance": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockBalanceHeader": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockBalanceImport": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "isnotexist": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "rownumber": {
                    "type": "number"
                },
                "shelfcode": {
                    "type": "string"
                },
                "sumamount": {
                    "type": "number"
                },
                "taskid": {
                    "type": "string"
                },
                "unitcode": {
                    "type": "string"
                },
                "warehousecode": {
                    "type": "string"
                }
            }
        },
        "models.StockPickupProduct": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockReceiveProduct": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockReturnProduct": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.StockTransfer": {
            "type": "object",
            "properties": {
                "billtaxtype": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.TransactionBranch"
                },
                "buffetcode": {
                    "type": "string"
                },
                "canceldatetime": {
                    "type": "string"
                },
                "canceldescription": {
                    "type": "string"
                },
                "cancelreason": {
                    "type": "string"
                },
                "cancelusercode": {
                    "type": "string"
                },
                "cancelusername": {
                    "type": "string"
                },
                "cashiercode": {
                    "type": "string"
                },
                "cashiername": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "custcode": {
                    "type": "string"
                },
                "custnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "customertelephone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detaildiscountformula": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Detail"
                    }
                },
                "detailtotalamount": {
                    "type": "number"
                },
                "detailtotalamountbeforediscount": {
                    "type": "number"
                },
                "detailtotaldiscount": {
                    "type": "number"
                },
                "discountword": {
                    "type": "string"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docrefdate": {
                    "type": "string"
                },
                "docrefno": {
                    "type": "string"
                },
                "docreftype": {
                    "type": "integer"
                },
                "doctype": {
                    "type": "integer"
                },
                "fullvataddress": {
                    "type": "string"
                },
                "fullvatbranchnumber": {
                    "type": "string"
                },
                "fullvatdocnumber": {
                    "type": "string"
                },
                "fullvatname": {
                    "type": "string"
                },
                "fullvatprint": {
                    "type": "boolean"
                },
                "fullvattaxid": {
                    "type": "string"
                },
                "guidref": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "iscancel": {
                    "type": "boolean"
                },
                "ismanualamount": {
                    "type": "boolean"
                },
                "istableallacratemode": {
                    "type": "boolean"
                },
                "isvatregister": {
                    "type": "boolean"
                },
                "mancount": {
                    "type": "integer"
                },
                "membercode": {
                    "type": "string"
                },
                "paycashamount": {
                    "type": "number"
                },
                "paycashchange": {
                    "type": "number"
                },
                "paymentdetail": {
                    "$ref": "#/definitions/models.PaymentDetail"
                },
                "paymentdetailraw": {
                    "type": "string"
                },
                "posid": {
                    "type": "string"
                },
                "printcopybilldatetime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roundamount": {
                    "type": "number"
                },
                "salecode": {
                    "type": "string"
                },
                "salename": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumcheque": {
                    "type": "number"
                },
                "sumcoupon": {
                    "type": "number"
                },
                "sumcredit": {
                    "type": "number"
                },
                "sumcreditcard": {
                    "type": "number"
                },
                "summoneytransfer": {
                    "type": "number"
                },
                "sumqrcode": {
                    "type": "number"
                },
                "tableclosedatetime": {
                    "type": "string"
                },
                "tablenumber": {
                    "type": "string"
                },
                "tableopendatetime": {
                    "type": "string"
                },
                "taxdocdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "totalaftervat": {
                    "type": "number"
                },
                "totalamount": {
                    "type": "number"
                },
                "totalamountafterdiscount": {
                    "type": "number"
                },
                "totalbeforevat": {
                    "type": "number"
                },
                "totalcost": {
                    "type": "number"
                },
                "totaldiscount": {
                    "type": "number"
                },
                "totaldiscountexceptvatamount": {
                    "type": "number"
                },
                "totaldiscountvatamount": {
                    "type": "number"
                },
                "totalexceptvat": {
                    "type": "number"
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvalue": {
                    "type": "number"
                },
                "totalvatvalue": {
                    "type": "number"
                },
                "transflag": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vattype": {
                    "type": "integer"
                },
                "womancount": {
                    "type": "integer"
                }
            }
        },
        "models.Storefront": {
            "type": "object",
            "required": [
                "name1"
            ],
            "properties": {
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_storefront_models.Device"
                    }
                },
                "name1": {
                    "type": "string",
                    "maxLength": 255
                },
                "name2": {
                    "type": "string",
                    "maxLength": 255
                },
                "name3": {
                    "type": "string",
                    "maxLength": 255
                },
                "name4": {
                    "type": "string",
                    "maxLength": 255
                },
                "name5": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.Table": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "groupnumber": {
                    "type": "integer"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "number": {
                    "type": "string"
                },
                "seat": {
                    "type": "integer"
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.TableInfo": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "groupnumber": {
                    "type": "integer"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "number": {
                    "type": "string"
                },
                "seat": {
                    "type": "integer"
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.TableInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TableInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.TablePageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isfavorit": {
                    "type": "boolean"
                },
                "module": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerat": {
                    "type": "string"
                },
                "ownerby": {
                    "type": "string"
                },
                "parentguidfixed": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "rejectedat": {
                    "type": "string"
                },
                "rejectedby": {
                    "type": "string"
                },
                "rejectfromtaskguid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totaldocument": {
                    "type": "integer"
                },
                "totaldocumentstatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TotalStatus"
                    }
                }
            }
        },
        "models.Tax": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branchcode": {
                    "type": "string"
                },
                "custname": {
                    "type": "string"
                },
                "custtaxid": {
                    "type": "string"
                },
                "custtype": {
                    "type": "integer"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaxDetail"
                    }
                },
                "organization": {
                    "type": "integer"
                },
                "taxamount": {
                    "type": "number"
                },
                "taxdate": {
                    "type": "string"
                },
                "taxdocno": {
                    "type": "string"
                },
                "taxtype": {
                    "type": "integer"
                }
            }
        },
        "models.TaxDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "taxamount": {
                    "type": "number"
                },
                "taxbase": {
                    "type": "number"
                },
                "taxrate": {
                    "type": "number"
                }
            }
        },
        "models.TokenLoginRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.TotalStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.TransactionBranch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.TransportChannel": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "minLength": 1
                },
                "imageuri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "models.TrialBalanceSheetAccountDetail": {
            "type": "object",
            "properties": {
                "accountbalancetype": {
                    "description": "ด้านบัญชี 1=เดบิต,2=เครดิต",
                    "type": "integer"
                },
                "accountcategory": {
                    "description": "หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย",
                    "type": "integer"
                },
                "accountcode": {
                    "description": "รหัสผังบัญชี",
                    "type": "string"
                },
                "accountgroup": {
                    "description": "กลุ่มบัญชี",
                    "type": "string"
                },
                "accountlevel": {
                    "description": "ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ",
                    "type": "integer"
                },
                "accountname": {
                    "description": "ชื่อบัญชี",
                    "type": "string"
                },
                "amount": {
                    "description": "ยอดคงเหลือ(ประจำงวด)",
                    "type": "number"
                },
                "balanceamount": {
                    "description": "ยอดคงเหลือยกมา",
                    "type": "number"
                },
                "balancecreditamount": {
                    "description": "ยอดยกมาเครดิต",
                    "type": "number"
                },
                "balancedebitamount": {
                    "description": "ยอดยกมาเดบิต",
                    "type": "number"
                },
                "consolidateaccountcode": {
                    "description": "รหัสผังบัญชีกลาง",
                    "type": "string"
                },
                "creditamount": {
                    "description": "ยอดเครดิต",
                    "type": "number"
                },
                "debitamount": {
                    "description": "ยอดเดบิต",
                    "type": "number"
                },
                "nextbalanceamount": {
                    "description": "ยอดคงเหลือสะสม",
                    "type": "number"
                },
                "nextbalancecreditamount": {
                    "description": "ยอดสะสมเครดิต",
                    "type": "number"
                },
                "nextbalancedebitamount": {
                    "description": "ยอดสะสมเดบิต",
                    "type": "number"
                },
                "shopid": {
                    "type": "string"
                },
                "sumbalancecredit": {
                    "type": "number"
                },
                "sumbalancedebit": {
                    "type": "number"
                },
                "sumcredit": {
                    "description": "ยอดเครดิต",
                    "type": "number"
                },
                "sumdebit": {
                    "description": "ยอดเครดิต",
                    "type": "number"
                },
                "sumnextbalancecredit": {
                    "type": "number"
                },
                "sumnextbalancedebit": {
                    "type": "number"
                }
            }
        },
        "models.TrialBalanceSheetReport": {
            "type": "object",
            "properties": {
                "accountdetails": {
                    "description": "รายละเอียดบัญชี",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrialBalanceSheetAccountDetail"
                    }
                },
                "accountgroup": {
                    "description": "เล่มบัญชี",
                    "type": "string"
                },
                "enddate": {
                    "description": "วันที่สิ้นสุด",
                    "type": "string"
                },
                "reportdate": {
                    "description": "วันที่ทำรายการ",
                    "type": "string"
                },
                "startdate": {
                    "description": "วันที่เริ่มต้น",
                    "type": "string"
                },
                "totalamountcredit": {
                    "description": "รวมเครดิต",
                    "type": "number"
                },
                "totalamountdebit": {
                    "description": "รวมเดบิต",
                    "type": "number"
                },
                "totalbalancecredit": {
                    "description": "รวมยอดยกมาเครดิต",
                    "type": "number"
                },
                "totalbalancedebit": {
                    "description": "รวมยอดยกมาเดบิต",
                    "type": "number"
                },
                "totalnextbalancecredit": {
                    "description": "รวมยอดสะสมเครดิต",
                    "type": "number"
                },
                "totalnextbalancedebit": {
                    "description": "รวมยอดสะสมเดบิต",
                    "type": "number"
                }
            }
        },
        "models.TrialBalanceSheetReportResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TrialBalanceSheetReport"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Unit": {
            "type": "object",
            "required": [
                "names",
                "unitcode"
            ],
            "properties": {
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "unitcode": {
                    "type": "string",
                    "maxLength": 100
                },
                "unitname1": {
                    "type": "string"
                },
                "unitname2": {
                    "type": "string"
                },
                "unitname3": {
                    "type": "string"
                },
                "unitname4": {
                    "type": "string"
                },
                "unitname5": {
                    "type": "string"
                }
            }
        },
        "models.UserLoginPhoneNumberRequest": {
            "type": "object",
            "required": [
                "countrycode",
                "password",
                "phonenumber"
            ],
            "properties": {
                "countrycode": {
                    "type": "string",
                    "maxLength": 20
                },
                "password": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 5
                },
                "phonenumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "shopid": {
                    "type": "string"
                }
            }
        },
        "models.UsernameField": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 3
                }
            }
        },
        "models.Vat": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branchcode": {
                    "type": "string"
                },
                "custname": {
                    "type": "string"
                },
                "custtaxid": {
                    "type": "string"
                },
                "custtype": {
                    "type": "integer"
                },
                "exceptvat": {
                    "type": "number"
                },
                "organization": {
                    "type": "integer"
                },
                "remark": {
                    "type": "string"
                },
                "vatamount": {
                    "type": "number"
                },
                "vatbase": {
                    "type": "number"
                },
                "vatdate": {
                    "type": "string"
                },
                "vatdocno": {
                    "type": "string"
                },
                "vatmode": {
                    "type": "integer"
                },
                "vatperiod": {
                    "type": "integer"
                },
                "vatrate": {
                    "type": "number"
                },
                "vatsubmit": {
                    "type": "boolean"
                },
                "vattype": {
                    "type": "integer"
                },
                "vatyear": {
                    "type": "integer"
                }
            }
        },
        "models.Warehouse": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "location": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_warehouse_models.Location"
                    }
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "models.XOrderRequest": {
            "type": "object",
            "required": [
                "guidfixed"
            ],
            "properties": {
                "guidfixed": {
                    "type": "string",
                    "minLength": 1
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                }
            }
        },
        "models.XSort": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                }
            }
        },
        "models.XSortDocumentImageGroupRequest": {
            "type": "object",
            "required": [
                "guidfixed"
            ],
            "properties": {
                "guidfixed": {
                    "type": "string",
                    "minLength": 1
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                }
            }
        },
        "models.XSortModifyReqesut": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                }
            }
        },
        "models.Zone": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "groupnumber": {
                    "type": "integer"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "printer": {
                    "$ref": "#/definitions/models.Printer"
                }
            }
        },
        "models.ZoneInfo": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "groupnumber": {
                    "type": "integer"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "printer": {
                    "$ref": "#/definitions/models.Printer"
                }
            }
        },
        "models.ZoneInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ZoneInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ZonePageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ZoneInfo"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ocr.OcrRequest": {
            "type": "object",
            "properties": {
                "resourcekey": {
                    "type": "string"
                },
                "urlresources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.DedeZoom": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.ShopSelectRequest": {
            "type": "object",
            "required": [
                "shopid"
            ],
            "properties": {
                "shopid": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.ShopUserInfo": {
            "type": "object",
            "properties": {
                "branchcode": {
                    "type": "string"
                },
                "createdby": {
                    "type": "string"
                },
                "isfavorite": {
                    "type": "boolean"
                },
                "lastaccessedat": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "role": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserRole"
                },
                "shopid": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.UserLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 5
                },
                "shopid": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 3
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.UserProfile": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "dedezoom": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.DedeZoom"
                },
                "name": {
                    "type": "string"
                },
                "registertype": {
                    "type": "string"
                },
                "timezonelabel": {
                    "type": "string"
                },
                "timezoneoffset": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 233,
                    "minLength": 3
                },
                "yeartype": {
                    "type": "string",
                    "maxLength": 21
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.UserProfileReponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserProfile"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.UserProfileRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "dedezoom": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.DedeZoom"
                },
                "name": {
                    "type": "string"
                },
                "registertype": {
                    "type": "string"
                },
                "timezonelabel": {
                    "type": "string"
                },
                "timezoneoffset": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "yeartype": {
                    "type": "string",
                    "maxLength": 21
                }
            }
        },
        "smlcloudplatform_internal_authentication_models.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "ROLE_ADMIN": "\"ADMIN\"",
                "ROLE_OWNER": "\"OWNER\"",
                "ROLE_USER": "\"USER\""
            },
            "x-enum-varnames": [
                "ROLE_USER",
                "ROLE_ADMIN",
                "ROLE_OWNER"
            ]
        },
        "smlcloudplatform_internal_authentication_models.UserRoleRequest": {
            "type": "object",
            "properties": {
                "editusername": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/smlcloudplatform_internal_authentication_models.UserRole"
                },
                "shopid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_creditor_models.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "countrycode": {
                    "type": "string"
                },
                "districtcode": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phoneprimary": {
                    "type": "string"
                },
                "phonesecondary": {
                    "type": "string"
                },
                "provincecode": {
                    "type": "string"
                },
                "subdistrictcode": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_creditor_models.Image": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_customer_models.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "countrycode": {
                    "type": "string"
                },
                "districtcode": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phoneprimary": {
                    "type": "string"
                },
                "phonesecondary": {
                    "type": "string"
                },
                "provincecode": {
                    "type": "string"
                },
                "subdistrictcode": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_customer_models.Image": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_debtor_models.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "countrycode": {
                    "type": "string"
                },
                "districtcode": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phoneprimary": {
                    "type": "string"
                },
                "phonesecondary": {
                    "type": "string"
                },
                "provincecode": {
                    "type": "string"
                },
                "subdistrictcode": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_debtaccount_debtor_models.Image": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_images_models.Image": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_organization_branch_models.Branch": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "businesstype": {
                    "$ref": "#/definitions/models.BranchBusinessType"
                },
                "businesstypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "companynames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "contact": {
                    "$ref": "#/definitions/models.Contact"
                },
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_organization_branch_models.Department"
                    }
                },
                "imageuri": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logouri": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "pos": {
                    "$ref": "#/definitions/models.BranchPOS"
                }
            }
        },
        "smlcloudplatform_internal_organization_branch_models.Department": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "GuidFixed string         `json:\"guidfixed\"`",
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_organization_businesstype_models.BusinessType": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "isdefault": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_organization_department_models.Department": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_payment_bookbank_models.Image": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "xorder": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_pos_setting_models.POSEmployee": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smlcloudplatform_internal_product_productbarcode_models.ProductBarcode": {
            "type": "object",
            "required": [
                "barcode",
                "names"
            ],
            "properties": {
                "barcode": {
                    "type": "string",
                    "minLength": 1
                },
                "bom": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BOMProductBarcode"
                    }
                },
                "businesstypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductBarcodeBusinessType"
                    }
                },
                "colorselect": {
                    "type": "string"
                },
                "colorselecthex": {
                    "type": "string"
                },
                "condition": {
                    "type": "boolean"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductDimension"
                    }
                },
                "discount": {
                    "type": "string"
                },
                "dividevalue": {
                    "type": "number"
                },
                "foodtype": {
                    "type": "integer"
                },
                "groupcode": {
                    "type": "string"
                },
                "groupnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "ignorebranches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductBarcodeBranch"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductImage"
                    }
                },
                "imageuri": {
                    "type": "string"
                },
                "isalacarte": {
                    "type": "boolean"
                },
                "isdiscountpointofpurchase": {
                    "type": "boolean"
                },
                "isdividend": {
                    "type": "boolean"
                },
                "isonlystaff": {
                    "type": "boolean"
                },
                "issplitunitprint": {
                    "type": "boolean"
                },
                "isstockforrestaurant": {
                    "type": "boolean"
                },
                "issumpoint": {
                    "type": "boolean"
                },
                "isusesubbarcodes": {
                    "type": "boolean"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemtype": {
                    "type": "integer"
                },
                "itemunitcode": {
                    "type": "string"
                },
                "itemunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "itemunitsize": {
                    "type": "number"
                },
                "manufacturerguid": {
                    "type": "string"
                },
                "maxdiscount": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductOption"
                    }
                },
                "ordertypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductOrderType"
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductPrice"
                    }
                },
                "producttype": {
                    "$ref": "#/definitions/smlcloudplatform_internal_product_productbarcode_models.ProductType"
                },
                "qty": {
                    "type": "number"
                },
                "refbarcodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RefProductBarcode"
                    }
                },
                "refdividevalue": {
                    "type": "number"
                },
                "refstandvalue": {
                    "type": "number"
                },
                "refunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "standvalue": {
                    "type": "number"
                },
                "stockbarcode": {
                    "type": "string"
                },
                "taxtype": {
                    "type": "integer"
                },
                "useimageorcolor": {
                    "type": "boolean"
                },
                "vatcal": {
                    "type": "integer"
                },
                "vattype": {
                    "type": "integer"
                },
                "xsorts": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.XSort"
                    }
                }
            }
        },
        "smlcloudplatform_internal_product_productbarcode_models.ProductType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_product_productgroup_models.ProductGroup": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_product_producttype_models.ProductType": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_product_promotion_models.ProductBarcode": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "guidfixed": {
                    "type": "string"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemunitcode": {
                    "type": "string"
                },
                "itemunitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductPrice"
                    }
                }
            }
        },
        "smlcloudplatform_internal_report_reportqueryc_models.ReportParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_report_reportqueryc_models.ReportQuery": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "isactived": {
                    "type": "boolean"
                },
                "isapproved": {
                    "type": "boolean"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_report_reportqueryc_models.ReportParam"
                    }
                },
                "sql": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_report_reportquerym_models.ReportParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_report_reportquerym_models.ReportQuery": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "collection": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "isactived": {
                    "type": "boolean"
                },
                "isapproved": {
                    "type": "boolean"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_report_reportquerym_models.ReportParam"
                    }
                }
            }
        },
        "smlcloudplatform_internal_restaurant_device_models.Device": {
            "type": "object",
            "required": [
                "code",
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_shop_branch_models.Branch": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "departments": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/smlcloudplatform_internal_shop_branch_models.Department"
                    }
                },
                "location": {
                    "$ref": "#/definitions/smlcloudplatform_internal_shop_branch_models.Location"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "telephone": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "smlcloudplatform_internal_shop_branch_models.Department": {
            "type": "object",
            "required": [
                "code",
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_shop_branch_models.Location": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "string"
                },
                "lng": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_shop_employee_models.EmployeeRequestPassword": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "currentpassword": {
                    "type": "string"
                },
                "newpassword": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_shop_employee_models.EmployeeRequestRegister": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmployeeBranch"
                    }
                },
                "code": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/models.EmployeeContact"
                },
                "email": {
                    "type": "string"
                },
                "isenabled": {
                    "type": "boolean"
                },
                "isusepos": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "profilepicture": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smlcloudplatform_internal_shop_employee_models.EmployeeRequestUpdate": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmployeeBranch"
                    }
                },
                "code": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/models.EmployeeContact"
                },
                "email": {
                    "type": "string"
                },
                "isenabled": {
                    "type": "boolean"
                },
                "isusepos": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "profilepicture": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smlcloudplatform_internal_storefront_models.Device": {
            "type": "object",
            "properties": {
                "os": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "smlcloudplatform_internal_task_models.TaskStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                }
            }
        },
        "smlcloudplatform_internal_transaction_stockbalancedetail_models.StockBalanceDetail": {
            "type": "object",
            "required": [
                "docno"
            ],
            "properties": {
                "averagecost": {
                    "type": "number"
                },
                "barcode": {
                    "type": "string"
                },
                "calcflag": {
                    "type": "integer"
                },
                "discount": {
                    "type": "string"
                },
                "discountamount": {
                    "type": "number"
                },
                "dividevalue": {
                    "type": "number"
                },
                "docdatetime": {
                    "type": "string"
                },
                "docno": {
                    "type": "string"
                },
                "docref": {
                    "type": "string"
                },
                "docrefdatetime": {
                    "type": "string"
                },
                "extrajson": {
                    "type": "string"
                },
                "inquirytype": {
                    "type": "integer"
                },
                "ispos": {
                    "type": "integer"
                },
                "itemcode": {
                    "type": "string"
                },
                "itemguid": {
                    "type": "string"
                },
                "itemnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "itemtype": {
                    "type": "integer"
                },
                "laststatus": {
                    "type": "integer"
                },
                "linenumber": {
                    "type": "integer"
                },
                "locationcode": {
                    "type": "string"
                },
                "locationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "multiunit": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "priceexcludevat": {
                    "type": "number"
                },
                "qty": {
                    "type": "number"
                },
                "remark": {
                    "type": "string"
                },
                "shelfcode": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "standvalue": {
                    "type": "number"
                },
                "sumamount": {
                    "type": "number"
                },
                "sumamountexcludevat": {
                    "type": "number"
                },
                "sumofcost": {
                    "type": "number"
                },
                "taxtype": {
                    "type": "integer"
                },
                "tolocationcode": {
                    "type": "string"
                },
                "tolocationnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "totalqty": {
                    "type": "number"
                },
                "totalvaluevat": {
                    "type": "number"
                },
                "towhcode": {
                    "type": "string"
                },
                "towhnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "unitcode": {
                    "type": "string"
                },
                "unitnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "vatcal": {
                    "type": "integer"
                },
                "vattype": {
                    "type": "integer"
                },
                "whcode": {
                    "type": "string"
                },
                "whnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                }
            }
        },
        "smlcloudplatform_internal_warehouse_models.Location": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.NameX"
                    }
                },
                "shelf": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.Shelf"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}