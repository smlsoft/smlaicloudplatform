definitions:
  models.AccountGroup:
    properties:
      code:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - code
    - name1
    type: object
  models.AccountGroupInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - code
    - name1
    type: object
  models.AccountGroupInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.AccountGroupInfo'
      success:
        type: boolean
    type: object
  models.AccountGroupPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.AccountGroupInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ApiResponse:
    properties:
      data: {}
      id: {}
      message:
        type: string
      pagination: {}
      success:
        type: boolean
      total: {}
    type: object
  models.AuthResponse:
    properties:
      success:
        type: boolean
      token:
        type: string
    type: object
  models.AuthResponseFailed:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  models.AvailablePatternOption:
    properties:
      optionpatterntags:
        items:
          type: string
        type: array
      patternkey:
        type: string
      price:
        type: number
      qty:
        type: number
    type: object
  models.BalanceSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: มูลค่า
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      shopid:
        type: string
    type: object
  models.BalanceSheetReport:
    properties:
      accountgroup:
        description: เล่มบัญชี
        type: string
      assets:
        description: สินทรัพย์
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      enddate:
        description: วันที่สิ้นสุด
        type: string
      liabilities:
        description: หนี้สิน
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      ownesequities:
        description: ทุนและส่วนของเจ้าของ
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      reportdate:
        description: วันที่ทำรายการ
        type: string
      totalassetamount:
        description: รวมสินทรัพย์
        type: number
      totalliabilityamount:
        description: รวมหนี้สิน
        type: number
      totalliabilityandownersequityamount:
        description: รวมหนี้สิน ทุน และส่วนของเจ้าของ
        type: number
      totalownersequityamount:
        description: รวมทุนและส่วนของเจ้าของ
        type: number
    type: object
  models.BalanceSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.BalanceSheetReport'
      success:
        type: boolean
    type: object
  models.Barcode:
    properties:
      barcode:
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      image:
        type: string
      isprimary:
        type: boolean
      keynumber:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      price:
        type: number
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    required:
    - name1
    type: object
  models.BarcodesModifyReqesut:
    type: object
  models.BulkInsertResponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.BulkReponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.CategoryImport:
    properties:
      barcodes:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
      childcount:
        type: integer
      colorselect:
        type: string
      colorselecthex:
        type: string
      guidfixed:
        type: string
      id:
        type: string
      imageuri:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      shopid:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CategoryImportInfo:
    properties:
      barcodes:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
      childcount:
        type: integer
      colorselect:
        type: string
      colorselecthex:
        type: string
      guidfixed:
        type: string
      id:
        type: string
      imageuri:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      shopid:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CategoryImportPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.CategoryImportInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ChartOfAccount:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
    type: object
  models.ChartOfAccountInfo:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      guidfixed:
        type: string
    type: object
  models.ChartOfAccountInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.ChartOfAccountInfo'
      success:
        type: boolean
    type: object
  models.ChartOfAccountPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ChartOfAccountInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Choice:
    properties:
      barcode:
        type: string
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
      code:
        type: string
      default:
        type: boolean
      itemunit:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      price:
        type: number
      qty:
        type: number
      qtymax:
        type: number
      selected:
        type: boolean
      suggestcode:
        type: string
    required:
    - name1
    - names
    type: object
  models.Color:
    properties:
      code:
        type: string
      colorhex:
        type: string
      colorselect:
        type: string
      colorselecthex:
        type: string
      colorsystem:
        type: string
      colorsystemhex:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CreditCardPayment:
    properties:
      amount:
        type: number
      approvedcode:
        type: string
      cardnumber:
        type: string
      cardtype:
        type: string
      remark:
        type: string
    type: object
  models.Customer:
    properties:
      addressforbilling:
        $ref: '#/definitions/models.CustomerAddress'
      addressforshipping:
        items:
          $ref: '#/definitions/models.CustomerAddress'
        type: array
      code:
        minLength: 1
        type: string
      email:
        type: string
      images:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_customershop_customer_models.Image'
        type: array
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      personaltype:
        type: integer
      taxid:
        type: string
    required:
    - code
    - names
    type: object
  models.CustomerAddress:
    properties:
      address:
        items:
          type: string
        type: array
      contactnames:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      countrycode:
        type: string
      districtcode:
        type: string
      guid:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      phoneprimary:
        type: string
      phonesecondary:
        type: string
      provincecode:
        type: string
      subdistrictcode:
        type: string
      zipcode:
        type: string
    required:
    - contactnames
    type: object
  models.CustomerGroup:
    properties:
      customercode:
        minLength: 1
        type: string
      guid:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - customercode
    - names
    type: object
  models.Device:
    properties:
      os:
        type: string
      uuid:
        type: string
    type: object
  models.DocumentImage:
    properties:
      imageuri:
        type: string
      isreject:
        type: boolean
      metafileat:
        type: string
      name:
        type: string
      referencegroups:
        items:
          $ref: '#/definitions/models.ReferenceGroup'
        type: array
      references:
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      uploadedat:
        type: string
      uploadedby:
        type: string
    type: object
  models.DocumentImageGroup:
    properties:
      imagereferences:
        items:
          $ref: '#/definitions/models.ImageReference'
        type: array
      isreject:
        type: boolean
      references:
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        description: DocumentRef     string            `json:"documentref" bson:"documentref"`
        type: string
      uploadedat:
        type: string
      uploadedby:
        type: string
    type: object
  models.DocumentImageInfo:
    properties:
      guidfixed:
        type: string
      imageuri:
        type: string
      isreject:
        type: boolean
      metafileat:
        type: string
      name:
        type: string
      referencegroups:
        items:
          $ref: '#/definitions/models.ReferenceGroup'
        type: array
      references:
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      uploadedat:
        type: string
      uploadedby:
        type: string
    type: object
  models.DocumentImageInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.DocumentImageInfo'
      success:
        type: boolean
    type: object
  models.DocumentImagePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.DocumentImageInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Employee:
    properties:
      code:
        type: string
      name:
        type: string
      profilepicture:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.EmployeeInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name:
        type: string
      profilepicture:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.EmployeePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.EmployeeInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.EmployeeRequestLogin:
    properties:
      password:
        type: string
      shopid:
        type: string
      username:
        type: string
    type: object
  models.EmployeeRequestPassword:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.EmployeeRequestUpdate:
    properties:
      code:
        type: string
      name:
        type: string
      profilepicture:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.ImageReference:
    properties:
      documentimageguid:
        type: string
      imageuri:
        type: string
      isreject:
        type: boolean
      metafileat:
        type: string
      name:
        type: string
      uploadedat:
        type: string
      uploadedby:
        type: string
      xorder:
        type: integer
    type: object
  models.IncudeChoice:
    properties:
      choicecode:
        type: string
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
    type: object
  models.Inventory:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      keynumber:
        type: integer
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.InventoryActivity:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      createdat:
        type: string
      deletedat:
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      keynumber:
        type: integer
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shopid:
        type: string
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      updatedat:
        type: string
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.InventoryBulkInsertResponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.InventoryDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.InventoryFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.InventoryLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryImage:
    properties:
      uri:
        type: string
    type: object
  models.InventoryInfo:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      keynumber:
        type: integer
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.InventoryInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.InventoryInfo'
      success:
        type: boolean
    type: object
  models.InventoryLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.InventoryActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.InventoryDeleteActivity'
        type: array
    type: object
  models.InventoryOptionGroup:
    properties:
      details:
        items:
          $ref: '#/definitions/models.InventoryOptionGroupDetail'
        type: array
      guidfixed:
        type: string
      id:
        type: string
      optionname1:
        type: string
      productselectoption1:
        type: boolean
      productselectoption2:
        type: boolean
      productselectoptionmax:
        type: integer
      productselectoptionmin:
        type: integer
      shopid:
        type: string
    type: object
  models.InventoryOptionGroupDetail:
    properties:
      amount:
        type: number
      detailname1:
        type: string
      guidfixed:
        type: string
    type: object
  models.InventoryOptionMain:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.InventoryOptionMainImport:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.InventoryOptionMainInfo:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      guidfixed:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.InventoryOptionPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.InventoryOptionMainInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.InventoryInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryTag:
    properties:
      name:
        type: string
    type: object
  models.Journal:
    properties:
      accountdescription:
        type: string
      accountgroup:
        type: string
      accountperiod:
        type: integer
      accountyear:
        type: integer
      amount:
        type: number
      batchId:
        type: string
      bookcode:
        type: string
      docdate:
        format: dateTime
        type: string
      docformat:
        type: string
      docno:
        type: string
      documentref:
        type: string
      exdocrefdate:
        type: string
      exdocrefno:
        type: string
      journaldetail:
        items:
          $ref: '#/definitions/models.JournalDetail'
        type: array
      journaltype:
        description: ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)
        type: integer
      taxes:
        items:
          $ref: '#/definitions/models.Tax'
        type: array
      vats:
        items:
          $ref: '#/definitions/models.Vat'
        type: array
    type: object
  models.JournalBook:
    properties:
      code:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.JournalBookInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.JournalBookInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.JournalBookInfo'
      success:
        type: boolean
    type: object
  models.JournalBookPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.JournalBookInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.JournalDetail:
    properties:
      accountcode:
        description: chart of account code
        type: string
      accountname:
        type: string
      creditamount:
        type: number
      debitamount:
        type: number
    type: object
  models.JournalInfo:
    properties:
      accountdescription:
        type: string
      accountgroup:
        type: string
      accountperiod:
        type: integer
      accountyear:
        type: integer
      amount:
        type: number
      batchId:
        type: string
      bookcode:
        type: string
      createdat:
        type: string
      createdby:
        type: string
      docdate:
        format: dateTime
        type: string
      docformat:
        type: string
      docno:
        type: string
      documentref:
        type: string
      exdocrefdate:
        type: string
      exdocrefno:
        type: string
      guidfixed:
        type: string
      journaldetail:
        items:
          $ref: '#/definitions/models.JournalDetail'
        type: array
      journaltype:
        description: ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)
        type: integer
      taxes:
        items:
          $ref: '#/definitions/models.Tax'
        type: array
      vats:
        items:
          $ref: '#/definitions/models.Vat'
        type: array
    type: object
  models.JournalInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.JournalInfo'
      success:
        type: boolean
    type: object
  models.JournalPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.JournalInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.JournalRef:
    properties:
      docref:
        type: string
    type: object
  models.Kitchen:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.ProductCategory'
        type: array
      code:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printers:
        items:
          $ref: '#/definitions/models.PrinterTerminal'
        type: array
      products:
        items:
          $ref: '#/definitions/models.Inventory'
        type: array
      zones:
        items:
          $ref: '#/definitions/models.ShopZone'
        type: array
    type: object
  models.KitchenActivity:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.ProductCategory'
        type: array
      code:
        type: string
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printers:
        items:
          $ref: '#/definitions/models.PrinterTerminal'
        type: array
      products:
        items:
          $ref: '#/definitions/models.Inventory'
        type: array
      shopid:
        type: string
      updatedat:
        type: string
      zones:
        items:
          $ref: '#/definitions/models.ShopZone'
        type: array
    type: object
  models.KitchenDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.KitchenFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.KitchenLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.KitchenInfo:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.ProductCategory'
        type: array
      code:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printers:
        items:
          $ref: '#/definitions/models.PrinterTerminal'
        type: array
      products:
        items:
          $ref: '#/definitions/models.Inventory'
        type: array
      zones:
        items:
          $ref: '#/definitions/models.ShopZone'
        type: array
    type: object
  models.KitchenInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.KitchenInfo'
      success:
        type: boolean
    type: object
  models.KitchenLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.KitchenActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.KitchenDeleteActivity'
        type: array
    type: object
  models.KitchenPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.KitchenInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Location:
    properties:
      code:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.LostAndProfitSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.ProfitAndLossSheetReport'
      success:
        type: boolean
    type: object
  models.Member:
    properties:
      address:
        type: string
      branchcode:
        type: string
      branchtype:
        type: integer
      contacttype:
        type: integer
      name:
        type: string
      personaltype:
        type: integer
      surname:
        type: string
      taxid:
        type: string
      telephone:
        type: string
      zipcode:
        type: string
    type: object
  models.MemberActivity:
    properties:
      address:
        type: string
      branchcode:
        type: string
      branchtype:
        type: integer
      contacttype:
        type: integer
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      name:
        type: string
      personaltype:
        type: integer
      shopid:
        type: string
      surname:
        type: string
      taxid:
        type: string
      telephone:
        type: string
      updatedat:
        type: string
      zipcode:
        type: string
    type: object
  models.MemberDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.MemberFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.MemberLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.MemberInfo:
    properties:
      address:
        type: string
      branchcode:
        type: string
      branchtype:
        type: integer
      contacttype:
        type: integer
      guidfixed:
        type: string
      name:
        type: string
      personaltype:
        type: integer
      surname:
        type: string
      taxid:
        type: string
      telephone:
        type: string
      zipcode:
        type: string
    type: object
  models.MemberInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.MemberInfo'
      success:
        type: boolean
    type: object
  models.MemberLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.MemberActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.MemberDeleteActivity'
        type: array
    type: object
  models.MemberPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.MemberInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.NameX:
    properties:
      code:
        maxLength: 255
        minLength: 1
        type: string
      isauto:
        type: boolean
      isdelete:
        type: boolean
      name:
        maxLength: 255
        type: string
    required:
    - code
    - name
    type: object
  models.Option:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.OptionDetail:
    properties:
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
      image:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetailcode:
        type: string
    required:
    - name1
    - names
    type: object
  models.OptionPattern:
    properties:
      colorcode:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optionpatterndetails:
        items:
          $ref: '#/definitions/models.OptionPatternDetail'
        type: array
      patterncode:
        type: string
    required:
    - name1
    - names
    type: object
  models.OptionPatternDetail:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optioncode:
        type: string
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.PaginationDataResponse:
    properties:
      next:
        type: integer
      page:
        type: integer
      perPage:
        type: integer
      prev:
        type: integer
      total:
        type: integer
      totalPage:
        type: integer
    type: object
  models.Payment:
    properties:
      cash:
        type: number
      creditcard:
        type: number
      creditcarddetails:
        items:
          $ref: '#/definitions/models.CreditCardPayment'
        type: array
      transfer:
        type: number
      transferdetails:
        items:
          $ref: '#/definitions/models.TransferPayment'
        type: array
    type: object
  models.PaymentMaster:
    properties:
      countrycode:
        type: string
      feerate:
        type: number
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      paymentcode:
        type: string
      paymentlogo:
        type: string
      paymenttype:
        type: integer
      wallettype:
        type: integer
    required:
    - name1
    type: object
  models.PaymentMasterInfo:
    properties:
      countrycode:
        type: string
      feerate:
        type: number
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      paymentcode:
        type: string
      paymentlogo:
        type: string
      paymenttype:
        type: integer
      wallettype:
        type: integer
    required:
    - name1
    type: object
  models.PaymentMasterInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.PaymentMasterInfo'
      success:
        type: boolean
    type: object
  models.PaymentMasterPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PaymentMasterInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.PrinterTerminal:
    properties:
      address:
        type: string
      code:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      type:
        type: integer
    type: object
  models.PrinterTerminalActivity:
    properties:
      address:
        type: string
      code:
        type: string
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      shopid:
        type: string
      type:
        type: integer
      updatedat:
        type: string
    type: object
  models.PrinterTerminalDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.PrinterTerminalFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.PrinterTerminalLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.PrinterTerminalInfo:
    properties:
      address:
        type: string
      code:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      type:
        type: integer
    type: object
  models.PrinterTerminalInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.PrinterTerminalInfo'
      success:
        type: boolean
    type: object
  models.PrinterTerminalLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.PrinterTerminalActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.PrinterTerminalDeleteActivity'
        type: array
    type: object
  models.PrinterTerminalPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PrinterTerminalInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Product:
    properties:
      barcodes:
        items:
          type: string
        type: array
      categoryguid:
        type: string
      images:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_product_product_models.ProductImage'
        type: array
      issumpoint:
        type: boolean
      itemcode:
        maxLength: 100
        minLength: 1
        type: string
      itemstocktype:
        type: integer
      itemtype:
        type: integer
      multiunit:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      prices:
        items:
          $ref: '#/definitions/models.ProductPrice'
        type: array
      unitcost:
        type: string
      units:
        items:
          $ref: '#/definitions/models.ProductUnit'
        type: array
      unitstandard:
        type: string
      useserialnumber:
        type: boolean
      vattype:
        type: integer
    required:
    - itemcode
    - names
    type: object
  models.ProductBarcode:
    properties:
      barcode:
        minLength: 1
        type: string
      categoryguid:
        type: string
      images:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_product_productbarcode_models.ProductImage'
        type: array
      imageuri:
        type: string
      itemcode:
        type: string
      itemunitcode:
        type: string
      itemunitnames:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      options:
        items:
          $ref: '#/definitions/models.ProductOption'
        type: array
      prices:
        items:
          $ref: '#/definitions/models.ProductPrice'
        type: array
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - barcode
    - itemunitnames
    - names
    type: object
  models.ProductCategory:
    properties:
      barcodes:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
      childcount:
        type: integer
      colorselect:
        type: string
      colorselecthex:
        type: string
      imageuri:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.ProductChoice:
    properties:
      guid:
        type: string
      isdefault:
        type: boolean
      isstock:
        description: QtyMax         float64         `json:"qtymax" bson:"qtymax"`
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      price:
        type: string
      qty:
        type: number
      refbarcode:
        type: string
      refproductcode:
        type: string
      refunitcode:
        type: string
    required:
    - names
    type: object
  models.ProductOption:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.ProductChoice'
        type: array
      choicetype:
        type: integer
      guid:
        type: string
      maxselect:
        maximum: 60000
        minimum: 0
        type: integer
      minselect:
        maximum: 60000
        minimum: 0
        type: integer
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.ProductPrice:
    properties:
      keynumber:
        type: integer
      price:
        type: number
    type: object
  models.ProductUnit:
    properties:
      divider:
        type: number
      stand:
        type: number
      stockcount:
        type: boolean
      unitcode:
        type: string
      unitname:
        type: string
      xorder:
        type: integer
    type: object
  models.ProfitAndLossSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: มูลค่า
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      shopid:
        type: string
    type: object
  models.ProfitAndLossSheetReport:
    properties:
      accountgroup:
        description: เล่มบัญชี
        type: string
      enddate:
        description: วันที่สิ้นสุด
        type: string
      expenses:
        description: รายการค่าใช้จ่าย
        items:
          $ref: '#/definitions/models.ProfitAndLossSheetAccountDetail'
        type: array
      incomes:
        description: รายการรายได้
        items:
          $ref: '#/definitions/models.ProfitAndLossSheetAccountDetail'
        type: array
      profitandlossamount:
        description: กำไรขาดทุน
        type: number
      reportdate:
        description: วันที่ทำรายการ
        type: string
      startdate:
        description: วันที่เริ่มต้น
        type: string
      totalexpenseamount:
        description: รวมค่าใช้จ่าย
        type: number
      totalincomeamount:
        description: รวมรายได้
        type: number
    type: object
  models.Purchase:
    properties:
      discountamount:
        type: number
      docdate:
        type: string
      docno:
        type: string
      items:
        items:
          $ref: '#/definitions/models.PurchaseDetail'
        type: array
      member:
        $ref: '#/definitions/models.Member'
      payment:
        $ref: '#/definitions/models.Payment'
      sumamount:
        type: number
      taxamount:
        type: number
      taxbaseamount:
        type: number
      taxrate:
        type: number
      totalamount:
        type: number
    type: object
  models.PurchaseDetail:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      amount:
        type: number
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      discountamount:
        type: number
      discounttext:
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      keynumber:
        type: integer
      linenumber:
        type: integer
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        type: number
      qty:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.PurchaseInfo:
    properties:
      discountamount:
        type: number
      docdate:
        type: string
      docno:
        type: string
      guidfixed:
        type: string
      items:
        items:
          $ref: '#/definitions/models.PurchaseDetail'
        type: array
      member:
        $ref: '#/definitions/models.Member'
      payment:
        $ref: '#/definitions/models.Payment'
      sumamount:
        type: number
      taxamount:
        type: number
      taxbaseamount:
        type: number
      taxrate:
        type: number
      totalamount:
        type: number
    type: object
  models.PurchaseListPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PurchaseInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Reference:
    properties:
      docno:
        type: string
      module:
        type: string
    type: object
  models.ReferenceGroup:
    properties:
      grouptype:
        type: string
      parentguid:
        type: string
      xorder:
        type: integer
      xtype:
        type: integer
    type: object
  models.RequestDocumentImageReject:
    properties:
      isreject:
        type: boolean
    type: object
  models.ResponseSuccess:
    properties:
      success:
        type: boolean
    type: object
  models.ResponseSuccessWithID:
    properties:
      id: {}
      success:
        type: boolean
    type: object
  models.Saleinvoice:
    properties:
      discountamount:
        type: number
      docdate:
        format: date-time
        type: string
      docno:
        type: string
      items:
        items:
          $ref: '#/definitions/models.SaleinvoiceDetail'
        type: array
      localdate:
        type: string
      localtime:
        type: string
      member:
        $ref: '#/definitions/models.Member'
      payment:
        $ref: '#/definitions/models.Payment'
      sumamount:
        type: number
      taxamount:
        type: number
      taxbaseamount:
        type: number
      taxrate:
        type: number
      totalamount:
        type: number
    type: object
  models.SaleinvoiceDetail:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      amount:
        type: number
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      discountamount:
        type: number
      discounttext:
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      keynumber:
        type: integer
      linenumber:
        type: integer
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        type: number
      qty:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.SaleinvoiceInfo:
    properties:
      discountamount:
        type: number
      docdate:
        format: date-time
        type: string
      docno:
        type: string
      guidfixed:
        type: string
      items:
        items:
          $ref: '#/definitions/models.SaleinvoiceDetail'
        type: array
      localdate:
        type: string
      localtime:
        type: string
      member:
        $ref: '#/definitions/models.Member'
      payment:
        $ref: '#/definitions/models.Payment'
      sumamount:
        type: number
      taxamount:
        type: number
      taxbaseamount:
        type: number
      taxrate:
        type: number
      totalamount:
        type: number
    type: object
  models.SaleinvoiceListPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SaleinvoiceInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Shop:
    properties:
      branchcode:
        type: string
      name1:
        type: string
      telephone:
        type: string
    type: object
  models.ShopInfo:
    properties:
      branchcode:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      telephone:
        type: string
    type: object
  models.ShopSelectRequest:
    properties:
      shopid:
        type: string
    required:
    - shopid
    type: object
  models.ShopTable:
    properties:
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      number:
        type: string
      seat:
        type: integer
      zone:
        $ref: '#/definitions/models.ShopZone'
    type: object
  models.ShopTableActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      number:
        type: string
      seat:
        type: integer
      shopid:
        type: string
      updatedat:
        type: string
      zone:
        $ref: '#/definitions/models.ShopZone'
    type: object
  models.ShopTableDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.ShopTableFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.ShopTableLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ShopTableInfo:
    properties:
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      number:
        type: string
      seat:
        type: integer
      zone:
        $ref: '#/definitions/models.ShopZone'
    type: object
  models.ShopTableInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.ShopTableInfo'
      success:
        type: boolean
    type: object
  models.ShopTableLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.ShopTableActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.ShopTableDeleteActivity'
        type: array
    type: object
  models.ShopTablePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ShopTableInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ShopUserInfo:
    properties:
      branchcode:
        type: string
      name:
        type: string
      role:
        type: integer
      shopid:
        type: string
    type: object
  models.ShopZone:
    properties:
      code:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printer:
        $ref: '#/definitions/models.PrinterTerminal'
    type: object
  models.ShopZoneActivity:
    properties:
      code:
        type: string
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printer:
        $ref: '#/definitions/models.PrinterTerminal'
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.ShopZoneDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.ShopZoneFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.ShopZoneLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ShopZoneInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      printer:
        $ref: '#/definitions/models.PrinterTerminal'
    type: object
  models.ShopZoneInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.ShopZoneInfo'
      success:
        type: boolean
    type: object
  models.ShopZoneLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.ShopZoneActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.ShopZoneDeleteActivity'
        type: array
    type: object
  models.ShopZonePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ShopZoneInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.SmsPaymentSettings:
    properties:
      patterncode:
        type: string
      storefrontguid:
        maxLength: 233
        type: string
      timeminuteafter:
        type: integer
      timeminutebefore:
        type: integer
    required:
    - patterncode
    - storefrontguid
    type: object
  models.SmsTransaction:
    properties:
      address:
        type: string
      body:
        type: string
      deviceuuid:
        type: string
      sendedat:
        type: string
      status:
        type: integer
      storefrontguid:
        maxLength: 233
        type: string
      transid:
        type: string
    required:
    - storefrontguid
    type: object
  models.SmsTransactionInfo:
    properties:
      address:
        type: string
      body:
        type: string
      deviceuuid:
        type: string
      guidfixed:
        type: string
      sendedat:
        type: string
      status:
        type: integer
      storefrontguid:
        maxLength: 233
        type: string
      transid:
        type: string
    required:
    - storefrontguid
    type: object
  models.SmsTransactionInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.SmsTransactionInfo'
      success:
        type: boolean
    type: object
  models.SmsTransactionPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SmsTransactionInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Storefront:
    properties:
      devices:
        items:
          $ref: '#/definitions/models.Device'
        type: array
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.SyncInventoryData:
    properties:
      data:
        $ref: '#/definitions/models.Inventory'
      mode:
        type: integer
      myguid:
        type: string
      tablecode:
        type: string
    type: object
  models.Tax:
    properties:
      address:
        type: string
      branchcode:
        type: string
      custname:
        type: string
      custtaxid:
        type: string
      custtype:
        type: integer
      details:
        items:
          $ref: '#/definitions/models.TaxDetail'
        type: array
      organization:
        type: integer
      taxamount:
        type: number
      taxdate:
        type: string
      taxdocno:
        type: string
      taxtype:
        type: integer
    type: object
  models.TaxDetail:
    properties:
      description:
        type: string
      taxamount:
        type: number
      taxbase:
        type: number
      taxrate:
        type: number
    type: object
  models.TransferPayment:
    properties:
      amount:
        type: number
      bankcode:
        type: string
    type: object
  models.TrialBalanceSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: ยอดคงเหลือ(ประจำงวด)
        type: number
      balanceamount:
        description: ยอดคงเหลือยกมา
        type: number
      balancecreditamount:
        description: ยอดยกมาเครดิต
        type: number
      balancedebitamount:
        description: ยอดยกมาเดบิต
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      creditamount:
        description: ยอดเครดิต
        type: number
      debitamount:
        description: ยอดเดบิต
        type: number
      nextbalanceamount:
        description: ยอดคงเหลือสะสม
        type: number
      nextbalancecreditamount:
        description: ยอดสะสมเครดิต
        type: number
      nextbalancedebitamount:
        description: ยอดสะสมเดบิต
        type: number
      shopid:
        type: string
    type: object
  models.TrialBalanceSheetReport:
    properties:
      accountdetails:
        description: รายละเอียดบัญชี
        items:
          $ref: '#/definitions/models.TrialBalanceSheetAccountDetail'
        type: array
      accountgroup:
        description: เล่มบัญชี
        type: string
      enddate:
        description: วันที่สิ้นสุด
        type: string
      reportdate:
        description: วันที่ทำรายการ
        type: string
      startdate:
        description: วันที่เริ่มต้น
        type: string
      totalamountcredit:
        description: รวมเครดิต
        type: number
      totalamountdebit:
        description: รวมเดบิต
        type: number
      totalbalancecredit:
        description: รวมยอดยกมาเครดิต
        type: number
      totalbalancedebit:
        description: รวมยอดยกมาเดบิต
        type: number
      totalnextbalancecredit:
        description: รวมยอดสะสมเครดิต
        type: number
      totalnextbalancedebit:
        description: รวมยอดสะสมเดบิต
        type: number
    type: object
  models.TrialBalanceSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.TrialBalanceSheetReport'
      success:
        type: boolean
    type: object
  models.UnitUse:
    properties:
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      isprimary:
        type: boolean
      isunitcost:
        type: boolean
      isunitstandard:
        type: boolean
      itemunitdiv:
        type: number
      itemunitstd:
        type: number
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      password:
        maxLength: 233
        minLength: 5
        type: string
      shopid:
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  models.UserProfile:
    properties:
      name:
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - name
    - username
    type: object
  models.UserProfileReponse:
    properties:
      data:
        $ref: '#/definitions/models.UserProfile'
      success:
        type: boolean
    type: object
  models.UserRequest:
    properties:
      name:
        type: string
      password:
        maxLength: 233
        minLength: 5
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - name
    - password
    - username
    type: object
  models.UserRoleRequest:
    properties:
      role:
        type: integer
      shopid:
        type: string
      username:
        type: string
    type: object
  models.Vat:
    properties:
      address:
        type: string
      branchcode:
        type: string
      custname:
        type: string
      custtaxid:
        type: string
      custtype:
        type: integer
      exceptvat:
        type: number
      organization:
        type: integer
      remark:
        type: string
      vatamount:
        type: number
      vatbase:
        type: number
      vatdate:
        type: string
      vatdocno:
        type: string
      vatmode:
        type: integer
      vatperiod:
        type: integer
      vatrate:
        type: number
      vatsubmit:
        type: boolean
      vattype:
        type: integer
      vatyear:
        type: integer
    type: object
  models.Warehouse:
    properties:
      code:
        type: string
      locations:
        items:
          $ref: '#/definitions/models.Location'
        type: array
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.XSort:
    properties:
      code:
        type: string
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  models.XSortModifyReqesut:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  smlcloudplatform_pkg_customershop_customer_models.Image:
    properties:
      uri:
        type: string
      xorder:
        type: integer
    type: object
  smlcloudplatform_pkg_images_models.Image:
    properties:
      uri:
        type: string
    type: object
  smlcloudplatform_pkg_product_inventory_models.Unit:
    properties:
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    type: object
  smlcloudplatform_pkg_product_product_models.ProductImage:
    properties:
      uri:
        type: string
      xorder:
        type: integer
    type: object
  smlcloudplatform_pkg_product_productbarcode_models.ProductImage:
    properties:
      uri:
        type: string
      xorder:
        type: integer
    type: object
  smlcloudplatform_pkg_product_unit_models.Unit:
    properties:
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      unitcode:
        maxLength: 100
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    required:
    - names
    - unitcode
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SML Cloud Platform API
  version: "1.0"
paths:
  /apikeyservice:
    delete:
      consumes:
      - application/json
      description: delete x-api-key
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - XApiKey
    post:
      consumes:
      - application/json
      description: generate x-api-key
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - XApiKey
  /checksms:
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /color:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    post:
      consumes:
      - application/json
      description: Create Color
      parameters:
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.Color'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Color
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    put:
      consumes:
      - application/json
      description: Update Color
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.Color'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/bulk:
    post:
      consumes:
      - application/json
      description: Create Color
      parameters:
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Color'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /create-shop:
    post:
      consumes:
      - application/json
      description: Create Shop on login
      parameters:
      - description: Add Shop
        in: body
        name: Shop
        required: true
        schema:
          $ref: '#/definitions/models.Shop'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /customershop/customer:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      parameters:
      - description: Customer GUIDs
        in: body
        name: Customer
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    post:
      consumes:
      - application/json
      description: Create Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    put:
      consumes:
      - application/json
      description: Update Customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customer/bulk:
    post:
      consumes:
      - application/json
      description: Create Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Customer'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customer/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customergroup:
    delete:
      consumes:
      - application/json
      description: Delete CustomerGroup
      parameters:
      - description: CustomerGroup GUIDs
        in: body
        name: CustomerGroup
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    post:
      consumes:
      - application/json
      description: Create CustomerGroup
      parameters:
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          $ref: '#/definitions/models.CustomerGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customergroup/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CustomerGroup
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
    put:
      consumes:
      - application/json
      description: Update CustomerGroup
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          $ref: '#/definitions/models.CustomerGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customergroup/bulk:
    post:
      consumes:
      - application/json
      description: Create CustomerGroup
      parameters:
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CustomerGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /customershop/customergroup/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerShop
  /documentimage:
    get:
      consumes:
      - application/json
      description: List Document Image
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Status Value
        in: query
        name: status
        type: integer
      - description: Module Value
        in: query
        name: module
        type: string
      - description: Doc GUID Ref Value
        in: query
        name: docguidref
        type: string
      - description: Document Ref Value
        in: query
        name: documentref
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImagePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Image
      tags:
      - DocumentImage
    post:
      consumes:
      - application/json
      description: Create Document Image
      parameters:
      - description: DocumentImage
        in: body
        name: DocumentImage
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image
      tags:
      - DocumentImage
  /documentimage/{guid}:
    delete:
      consumes:
      - application/json
      description: Delete Document Image
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Delete Document Image
      tags:
      - DocumentImage
    get:
      consumes:
      - application/json
      description: Get Document Image Infomation
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImageInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Get Document Image Infomation
      tags:
      - DocumentImage
    put:
      consumes:
      - application/json
      description: Update Document Image
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      - description: DocumentImage
        in: body
        name: DocumentImage
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Update Document Image
      tags:
      - DocumentImage
  /documentimage/{guid}/reject:
    put:
      consumes:
      - application/json
      description: Update Reject Document Image
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      - description: Document Image Reject
        in: body
        name: RequestDocumentImageReject
        required: true
        schema:
          $ref: '#/definitions/models.RequestDocumentImageReject'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Update Reject Document Image
      tags:
      - DocumentImage
  /documentimage/bulk:
    post:
      consumes:
      - application/json
      description: Create Document Image
      parameters:
      - description: DocumentImage
        in: body
        name: DocumentImage
        required: true
        schema:
          items:
            $ref: '#/definitions/models.DocumentImage'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image
      tags:
      - DocumentImage
  /documentimage/docref/:docref:
    get:
      consumes:
      - application/json
      description: Get Document Image By document reference Infomation
      parameters:
      - description: document reference
        in: path
        name: docref
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImageInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Get Document Image By document reference Infomation
      tags:
      - DocumentImage
  /documentimage/upload:
    post:
      consumes:
      - application/json
      description: Upload Document Image
      parameters:
      - description: Module
        in: query
        name: module
        required: true
        type: string
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DocumentImageInfoResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImage
  /documentimagegroup:
    get:
      consumes:
      - application/json
      - application/json
      description: Get Document Image Group
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      - description: เอกสารที่มีการจอง,0 not filter, 1 filter
        in: query
        name: reserve
        type: integer
      - description: empty not filter, 0 not reject, 1 reject
        in: query
        name: reject
        type: integer
      - description: 'document reference: empty not filter, 1 not reference, 2 referenced'
        in: query
        name: ref
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
      - Restaurant
    post:
      consumes:
      - application/json
      description: Save Document Image Group
      parameters:
      - description: Document Image Group
        in: body
        name: DocumentImageGroup
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImageGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}:
    get:
      consumes:
      - application/json
      description: Get Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
    put:
      consumes:
      - application/json
      description: Update Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/documentimages:
    put:
      consumes:
      - application/json
      description: Update Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/reference:
    put:
      consumes:
      - application/json
      description: Update Reference In Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/ungroup:
    put:
      consumes:
      - application/json
      description: Ungroup Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /employee:
    get:
      consumes:
      - application/json
      description: List Employee
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EmployeePageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    post:
      consumes:
      - application/json
      description: For Create Employee
      parameters:
      - description: Register Employee
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Employee
      tags:
      - Employee
  /employee/{username}:
    get:
      consumes:
      - application/json
      description: List Employee
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EmployeePageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Update Employee
      parameters:
      - description: Employee username
        in: path
        name: username
        required: true
        type: string
      - description: Employee
        in: body
        name: Employee
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Update Employee
      tags:
      - Employee
  /employee/login:
    post:
      consumes:
      - application/json
      description: Validate Employee
      parameters:
      - description: EmployeeUserPassword
        in: body
        name: EmployeeUserPassword
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestLogin'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.EmployeeInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
  /employee/password/{id}:
    put:
      consumes:
      - application/json
      description: For User Register Application
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: Register Employee
        in: body
        name: Employee
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestPassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Register An Account
      tags:
      - Employee
  /gl/accountgroup:
    get:
      consumes:
      - application/json
      description: แสดงรายการกลุ่มบัญชี
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountGroupPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการกลุ่มบัญชี
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างกลุ่มบัญชี
      parameters:
      - description: กลุ่มบัญชี
        in: body
        name: AccountGroup
        required: true
        schema:
          $ref: '#/definitions/models.AccountGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างกลุ่มบัญชี
      tags:
      - GL
  /gl/accountgroup/{id}:
    delete:
      consumes:
      - application/json
      description: ลบกลุ่มบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบกลุ่มบัญชี
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดกลุ่มบัญชี
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountGroupInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดกลุ่มบัญชี
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขกลุ่มบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: กลุ่มบัญชี
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.AccountGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขกลุ่มบัญชี
      tags:
      - GL
  /gl/chartofaccount:
    get:
      consumes:
      - application/json
      description: แสดงรายการผังบัญชี
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChartOfAccountPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการผังบัญชี
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างผังบัญชี
      parameters:
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          $ref: '#/definitions/models.ChartOfAccount'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างผังบัญชี
      tags:
      - GL
  /gl/chartofaccount/{id}:
    delete:
      consumes:
      - application/json
      description: ลบผังบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบผังบัญชี
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดผังบัญชี
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChartOfAccountInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดผังบัญชี
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขผังบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          $ref: '#/definitions/models.ChartOfAccount'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขผังบัญชี
      tags:
      - GL
  /gl/chartofaccount/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าผังบัญชี
      parameters:
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ChartOfAccount'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าผังบัญชี
      tags:
      - GL
  /gl/journal:
    get:
      consumes:
      - application/json
      description: แสดงรายการข้อมูลรายวัน
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการข้อมูลรายวัน
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: บันทึกข้อมูลรายวัน
      parameters:
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.Journal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: บันทึกข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/{id}:
    delete:
      consumes:
      - application/json
      description: ลบข้อมูลรายวัน
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบข้อมูลรายวัน
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      parameters:
      - description: Journal Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขข้อมูลรายวัน
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.Journal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าข้อมูลรายวัน
      parameters:
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Journal'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/docno/{docno}:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      parameters:
      - description: Journal DocNo
        in: path
        name: docno
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/docref/{doc}:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง
      parameters:
      - description: Document Ref
        in: path
        name: doc
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง
      tags:
      - GL
  /gl/journal/docref/deselect:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      parameters:
      - description: JournalRef body
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.JournalRef'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/docref/next:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/docref/select:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      parameters:
      - description: JournalRef body
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.JournalRef'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/last-docno:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
  /gl/journalbook:
    get:
      consumes:
      - application/json
      description: แสดงรายการสมุดรายวัน
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalBookPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการสมุดรายวัน
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างสมุดรายวัน
      parameters:
      - description: สมุดรายวัน
        in: body
        name: JournalBook
        required: true
        schema:
          $ref: '#/definitions/models.JournalBook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างสมุดรายวัน
      tags:
      - GL
  /gl/journalbook/{id}:
    delete:
      consumes:
      - application/json
      description: ลบสมุดรายวัน
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบสมุดรายวัน
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดสมุดรายวัน
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalBookInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดสมุดรายวัน
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขสมุดรายวัน
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: สมุดรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.JournalBook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขสมุดรายวัน
      tags:
      - GL
  /gl/journalbook/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าสมุดรายวัน
      parameters:
      - description: สมุดรายวัน
        in: body
        name: JournalBook
        required: true
        schema:
          items:
            $ref: '#/definitions/models.JournalBook'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าสมุดรายวัน
      tags:
      - GL
  /gl/report/balancesheet:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบดุล
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'ณ วันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบดุล
      tags:
      - GLReport
  /gl/report/ledgeraccount:
    get:
      consumes:
      - application/json
      description: บัญชีแยกประเภท
      parameters:
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: Account Code
        in: query
        name: accountcode
        required: true
        type: string
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrialBalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: บัญชีแยกประเภท
      tags:
      - GLReport
  /gl/report/profitandloss:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบกำไรขาดทุน
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LostAndProfitSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบกำไรขาดทุน
      tags:
      - GLReport
  /gl/report/trialbalancesheet:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบทดลอง
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrialBalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบทดลอง
      tags:
      - GLReport
  /import/category:
    delete:
      consumes:
      - application/json
      description: Delete Category
      parameters:
      - description: Category Import ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryImportPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Catagory Import
      parameters:
      - description: Catagory
        in: body
        name: Catagory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CategoryImport'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /import/inventory:
    delete:
      consumes:
      - application/json
      description: Delete Inventory
      parameters:
      - description: Inventory Import ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InventoryPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Inventory Import
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Inventory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /import/option:
    delete:
      consumes:
      - application/json
      description: Delete Option
      parameters:
      - description: Option ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: List Inventory Option
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Inventory Option
      parameters:
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          items:
            $ref: '#/definitions/models.InventoryOptionMainImport'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /inventory:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InventoryPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Inventory
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Inventory
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/barcode/{barcode}:
    get:
      consumes:
      - application/json
      description: get struct array by barcode
      parameters:
      - description: Barcode
        in: path
        name: barcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/bulk:
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Inventory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.InventoryBulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/categoryupdate/{catid}:
    post:
      consumes:
      - application/json
      description: Update Inventory Category List
      parameters:
      - description: Category GUID
        in: path
        name: catid
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Update Inventory By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/itemcode/{itemcode}:
    get:
      consumes:
      - application/json
      description: get struct array by Item Code
      parameters:
      - description: Inventory Item Code
        in: path
        name: itemcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Inventory
      parameters:
      - description: Inventory Item Code
        in: path
        name: itemcode
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/save:
    post:
      consumes:
      - application/json
      description: Save Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /list-shop:
    get:
      consumes:
      - application/json
      description: List Merchant In My Account
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopUserInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: User Account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - Authentication
  /logout:
    post:
      consumes:
      - application/json
      description: Logout Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /member:
    get:
      consumes:
      - application/json
      description: List Member Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MemberPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    post:
      consumes:
      - application/json
      description: Create Member
      parameters:
      - description: Member
        in: body
        name: Member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
  /member/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Member
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    get:
      consumes:
      - application/json
      description: Get Member
      parameters:
      - description: Member Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MemberInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    put:
      consumes:
      - application/json
      description: Update Member
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: string
      - description: Member
        in: body
        name: Member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
  /member/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Update Member By Date
      parameters:
      - description: DateTime
        in: query
        name: lastUpdate
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MemberFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
  /merchant:
    get:
      consumes:
      - application/json
      description: Access to Merchant
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Merchant
  /optgroup:
    get:
      consumes:
      - application/json
      description: List Inventory Option Group
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory Option Group
      parameters:
      - description: Option Group
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /optgroup/{id}:
    delete:
      consumes:
      - application/json
      description: Delete OptionGroup
      parameters:
      - description: OptionGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: Get Option Group Information
      parameters:
      - description: OptionGroup Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Option Group
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      - description: Option Group
        in: body
        name: OptionGroup
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /option:
    get:
      consumes:
      - application/json
      description: List Inventory Option
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory Option
      parameters:
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionMain'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /option/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Option
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: Get Inventory Option
      parameters:
      - description: Option Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionMainInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Option
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionMain'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /optionpattern:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    post:
      consumes:
      - application/json
      description: Create OptionPattern
      parameters:
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          $ref: '#/definitions/models.OptionPattern'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /optionpattern/{id}:
    delete:
      consumes:
      - application/json
      description: Delete OptionPattern
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    put:
      consumes:
      - application/json
      description: Update OptionPattern
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          $ref: '#/definitions/models.OptionPattern'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /optionpattern/bulk:
    post:
      consumes:
      - application/json
      description: Create OptionPattern
      parameters:
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          items:
            $ref: '#/definitions/models.OptionPattern'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /paymentmaster:
    get:
      consumes:
      - application/json
      description: แสดงรายการ payment master
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentMasterPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการ payment master
      tags:
      - PaymentMaster
    post:
      consumes:
      - application/json
      description: สร้าง payment master
      parameters:
      - description: paymentmaster
        in: body
        name: PaymentMaster
        required: true
        schema:
          $ref: '#/definitions/models.PaymentMaster'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้าง payment master
      tags:
      - PaymentMaster
  /paymentmaster-type:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียด payment master type
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียด payment master type
      tags:
      - PaymentMaster
  /paymentmaster/{id}:
    delete:
      consumes:
      - application/json
      description: ลบ payment master
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบ payment master
      tags:
      - PaymentMaster
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียด payment master
      parameters:
      - description: Journal Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentMasterInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียด payment master
      tags:
      - PaymentMaster
    put:
      consumes:
      - application/json
      description: แก้ไข payment master
      parameters:
      - description: Payment Master ID
        in: path
        name: id
        required: true
        type: string
      - description: paymentmaster
        in: body
        name: PaymentMaster
        required: true
        schema:
          $ref: '#/definitions/models.PaymentMaster'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไข payment master
      tags:
      - PaymentMaster
  /paymentmaster/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าข้อมูล payment master
      parameters:
      - description: paymentmaster
        in: body
        name: Journal
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Journal'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าข้อมูล payment master
      tags:
      - PaymentMaster
  /product:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product GUIDs
        in: body
        name: Product
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/barcode:
    delete:
      consumes:
      - application/json
      description: Delete ProductBarcode
      parameters:
      - description: ProductBarcode GUIDs
        in: body
        name: ProductBarcode
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    post:
      consumes:
      - application/json
      description: Create ProductBarcode
      parameters:
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          $ref: '#/definitions/models.ProductBarcode'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ProductBarcode
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    put:
      consumes:
      - application/json
      description: Update ProductBarcode
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          $ref: '#/definitions/models.ProductBarcode'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/bulk:
    post:
      consumes:
      - application/json
      description: Create ProductBarcode
      parameters:
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductBarcode'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/xsort:
    put:
      consumes:
      - application/json
      description: Update XSort ProductBarcode
      parameters:
      - description: XSort
        in: body
        name: XSort
        required: true
        schema:
          items:
            $ref: '#/definitions/models.XSortModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/bulk:
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Product'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/category:
    delete:
      consumes:
      - application/json
      description: Delete ProductCategory
      parameters:
      - description: ProductCategory GUIDs
        in: body
        name: ProductCategory
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    post:
      consumes:
      - application/json
      description: Create ProductCategory
      parameters:
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductCategory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ProductCategory
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    put:
      consumes:
      - application/json
      description: Update ProductCategory
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductCategory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/barcodes:
    put:
      consumes:
      - application/json
      description: Update Barcodes Category
      parameters:
      - description: Barcodes
        in: body
        name: Barcodes
        required: true
        schema:
          items:
            $ref: '#/definitions/models.BarcodesModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/bulk:
    post:
      consumes:
      - application/json
      description: Create ProductCategory
      parameters:
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductCategory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/xsort:
    put:
      consumes:
      - application/json
      description: Update XSort Category
      parameters:
      - description: XSort
        in: body
        name: XSort
        required: true
        schema:
          items:
            $ref: '#/definitions/models.XSortModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /profile:
    get:
      consumes:
      - application/json
      description: Get Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /profileshop:
    get:
      consumes:
      - application/json
      description: Get Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /purchase:
    get:
      consumes:
      - application/json
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PurchaseListPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    post:
      consumes:
      - application/json
      description: Create Purchase Transaction
      parameters:
      - description: payload
        in: body
        name: Purchase
        required: true
        schema:
          $ref: '#/definitions/models.Purchase'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /purchase/{id}:
    delete:
      consumes:
      - application/json
      description: Tempolaty Delete  Purchase Transaction
      parameters:
      - description: Purchase Doc ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    get:
      consumes:
      - application/json
      description: After Purchare Doc Create system will be return Id of Purchase
        Document. this Id can get Purchase Document in this service.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PurchaseInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    put:
      consumes:
      - application/json
      description: Update Inventory
      parameters:
      - description: Purchase Document ID
        in: path
        name: id
        required: true
        type: string
      - description: payload
        in: body
        name: Purchase
        required: true
        schema:
          $ref: '#/definitions/models.Purchase'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /register:
    post:
      consumes:
      - application/json
      description: For User Register Application
      parameters:
      - description: Register account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      summary: Register An Account
      tags:
      - Authentication
  /restaurant/kitchen:
    get:
      consumes:
      - application/json
      description: List Restaurant Kitchen Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KitchenPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          $ref: '#/definitions/models.Kitchen'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Kitchen
      parameters:
      - description: Kitchen Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KitchenInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen ID
        in: path
        name: id
        required: true
        type: string
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          $ref: '#/definitions/models.Kitchen'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/bulk:
    post:
      consumes:
      - application/json
      description: Create Kitchen
      parameters:
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Kitchen'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Restaurant Kitchen Update By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KitchenFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer:
    get:
      consumes:
      - application/json
      description: List Restaurant Printer Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PrinterTerminalPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          $ref: '#/definitions/models.PrinterTerminal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Printer
      parameters:
      - description: Printer Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PrinterTerminalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          $ref: '#/definitions/models.PrinterTerminal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/bulk:
    post:
      consumes:
      - application/json
      description: Printer ShopZone
      parameters:
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          items:
            $ref: '#/definitions/models.PrinterTerminal'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Restaurant Printer Update By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PrinterTerminalFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table:
    get:
      consumes:
      - application/json
      description: List Restaurant Shop Table Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopTablePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Shop Table
      parameters:
      - description: Table
        in: body
        name: Table
        required: true
        schema:
          $ref: '#/definitions/models.ShopTable'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Shop Table
      parameters:
      - description: ShopTable ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Shop Table
      parameters:
      - description: ShopTable Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopTableInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Shop Table
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Table
        in: body
        name: Table
        required: true
        schema:
          $ref: '#/definitions/models.ShopTable'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table/bulk:
    post:
      consumes:
      - application/json
      description: Create ShopTable
      parameters:
      - description: ShopTable
        in: body
        name: ShopTable
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ShopTable'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Restaurant ShopTable Update By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopTableFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone:
    get:
      consumes:
      - application/json
      description: List Restaurant Shop Zone Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopZonePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Shop Zone
      parameters:
      - description: Zone
        in: body
        name: Zone
        required: true
        schema:
          $ref: '#/definitions/models.ShopZone'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Shop Zone
      parameters:
      - description: ShopZone ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Shop Zone
      parameters:
      - description: ShopZone Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopZoneInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Shop Zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: string
      - description: Zone
        in: body
        name: Zone
        required: true
        schema:
          $ref: '#/definitions/models.ShopZone'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/bulk:
    post:
      consumes:
      - application/json
      description: Create ShopZone
      parameters:
      - description: ShopZone
        in: body
        name: ShopZone
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ShopZone'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Restaurant ShopZone Update By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShopZoneFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /saleinvoice:
    get:
      consumes:
      - application/json
      description: List Sale Invoice Document
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SaleinvoiceListPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Sale Invoice
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Saleinvoice
        in: body
        name: Saleinvoice
        required: true
        schema:
          $ref: '#/definitions/models.Saleinvoice'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Sale Invoice
  /saleinvoice/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Sale Invoice
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaleinvoiceInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Sale Invoice
    put:
      consumes:
      - application/json
      description: Update Sale Invoice
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: Invoice
        required: true
        schema:
          $ref: '#/definitions/models.Saleinvoice'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Sale Invoice
  /select-shop:
    post:
      consumes:
      - application/json
      description: Access to Shop
      parameters:
      - description: Shop
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.ShopSelectRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /selected:
    get:
      consumes:
      - application/json
      description: For List Document Ref selected
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /shop:
    get:
      consumes:
      - application/json
      description: Access to Shop
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Shop
    post:
      consumes:
      - application/json
      description: Create Shop rt1wer11
      parameters:
      - description: Add Shop
        in: body
        name: Shop
        required: true
        schema:
          $ref: '#/definitions/models.Shop'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Shop
  /shop/permission:
    put:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: UserRoleRequest
        in: body
        name: UserRoleRequest
        required: true
        schema:
          $ref: '#/definitions/models.UserRoleRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /shop/permission/{username}:
    delete:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
    get:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /shop/users:
    get:
      consumes:
      - application/json
      description: get shopuser
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /smspaymentsettings:
    get:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
  /smspaymentsettings/{storefrontguid}:
    get:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: storefront guidfixed
        in: path
        name: storefrontguid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
    put:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: storefront guidfixed
        in: path
        name: storefrontguid
        required: true
        type: string
      - description: sms payment settings
        in: body
        name: SmsPaymentSettings
        required: true
        schema:
          $ref: '#/definitions/models.SmsPaymentSettings'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
  /smstransaction:
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    post:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: sms data
        in: body
        name: Transaction
        required: true
        schema:
          $ref: '#/definitions/models.SmsTransaction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /smstransaction/{id}:
    delete:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    put:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      - description: sms data
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.SmsTransaction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /storefront:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    post:
      consumes:
      - application/json
      description: Create Storefront
      parameters:
      - description: Storefront
        in: body
        name: Storefront
        required: true
        schema:
          $ref: '#/definitions/models.Storefront'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
  /storefront/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Storefront
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    put:
      consumes:
      - application/json
      description: Update Storefront
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      - description: Storefront
        in: body
        name: Storefront
        required: true
        schema:
          $ref: '#/definitions/models.Storefront'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
  /syncproduct:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Data Payload
        in: body
        name: Data
        required: true
        schema:
          $ref: '#/definitions/models.SyncInventoryData'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Synchronize
  /unit:
    delete:
      consumes:
      - application/json
      description: Delete Unit
      parameters:
      - description: Unit GUIDs
        in: body
        name: Unit
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: 'Add '
        in: query
        name: page
        type: integer
      - description: 'Add '
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    post:
      consumes:
      - application/json
      description: Create Unit
      parameters:
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    patch:
      consumes:
      - application/json
      description: Update Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    put:
      consumes:
      - application/json
      description: Update Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/bulk:
    post:
      consumes:
      - application/json
      description: Create Unit
      parameters:
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          items:
            $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /upload/images:
    post:
      consumes:
      - application/json
      description: Update Image
      parameters:
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/smlcloudplatform_pkg_images_models.Image'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Common
  /upload/productimage:
    post:
      consumes:
      - application/json
      description: Update Image
      parameters:
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/smlcloudplatform_pkg_images_models.Image'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Common
  /user/permissions:
    get:
      consumes:
      - application/json
      description: get shopuser
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /warehouse:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Add Category
        in: query
        name: page
        type: integer
      - description: Add Category
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    post:
      consumes:
      - application/json
      description: Create Warehouse
      parameters:
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          $ref: '#/definitions/models.Warehouse'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Warehouse
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    put:
      consumes:
      - application/json
      description: Update Warehouse
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          $ref: '#/definitions/models.Warehouse'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/bulk:
    post:
      consumes:
      - application/json
      description: Create Warehouse
      parameters:
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Warehouse'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
schemes:
- http
- https
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
