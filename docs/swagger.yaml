definitions:
  models.ApiResponse:
    properties:
      data: {}
      id: {}
      message:
        type: string
      pagination: {}
      success:
        type: boolean
    type: object
  models.AuthResponse:
    properties:
      success:
        type: boolean
      token:
        type: string
    type: object
  models.AuthResponseFailed:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  models.Barcode:
    properties:
      barcode:
        type: string
      id:
        type: string
      price:
        type: number
      unit:
        type: string
    type: object
  models.Inventory:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      categoryGuid:
        description: Guid กลุ่มสินค้า
        type: string
      description1:
        description: รายละเอียดภาษาไทย
        type: string
      description2:
        type: string
      description3:
        type: string
      description4:
        type: string
      description5:
        type: string
      guidFixed:
        description: Guid สินค้า
        type: string
      haveImage:
        description: มีรูปสินค้า
        type: boolean
      id:
        type: string
      itemSku:
        type: string
      lineNumber:
        description: บรรทัดที่ (เอาไว้เรียงลำดับ)
        type: integer
      merchantId:
        description: รหัสร้าน
        type: string
      name1:
        description: ชื่อภาษาไทย
        type: string
      name2:
        type: string
      name3:
        type: string
      name4:
        type: string
      name5:
        type: string
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      unitList:
        description: กรณีหลายหน่วยนับ ตารางหน่วบนับ
        items:
          $ref: '#/definitions/models.InventoryUnit'
        type: array
    type: object
  models.InventoryUnit:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      divisor:
        description: ตัวหาร
        type: number
      minuend:
        description: ตัวตั้ง
        type: number
      unitGuid:
        description: Guid หน่วยนับ
        type: string
      unitName:
        description: ชื่อหน่วยนับ
        type: string
    type: object
  models.Merchant:
    properties:
      id:
        default: '-'
        type: string
      name1:
        type: string
    type: object
  models.MerchantInfo:
    properties:
      guidFixed:
        type: string
      id:
        type: string
      name1:
        type: string
    type: object
  models.MerchantSelectRequest:
    properties:
      merchantId:
        type: string
    type: object
  models.MerchantUserInfo:
    properties:
      merchantId:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  models.ResponseSuccessWithId:
    properties:
      id: {}
      success:
        type: boolean
    type: object
  models.UserRequest:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SML Cloud Platform API
  version: "1.0"
paths:
  /inventory:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Inventory'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Add Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/{id}:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inventory'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /list-merchant:
    get:
      consumes:
      - application/json
      description: List Merchant In My Account
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MerchantUserInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Add account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - Authentication
  /merchant:
    get:
      consumes:
      - application/json
      description: Access to Merchant
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MerchantInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Merchant
    post:
      consumes:
      - application/json
      description: Create Merchant
      parameters:
      - description: Add Merchant
        in: body
        name: Merchant
        required: true
        schema:
          $ref: '#/definitions/models.Merchant'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Merchant'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithId'
      security:
      - AccessToken: []
      tags:
      - Merchant
  /register:
    post:
      consumes:
      - application/json
      description: For User Register Application
      parameters:
      - description: Add account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      summary: Register An Account
      tags:
      - Authentication
  /select-merchant:
    post:
      consumes:
      - application/json
      description: Access to Merchant
      parameters:
      - description: Merchant
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.MerchantSelectRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
