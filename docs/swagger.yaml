definitions:
  authentication.ShopFavoriteRequest:
    properties:
      isfavorite:
        type: boolean
      shopid:
        type: string
    type: object
  authentication.TokenLoginRequest:
    properties:
      token:
        type: string
    type: object
  models.AccountGroup:
    properties:
      code:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - code
    - name1
    type: object
  models.AccountGroupInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - code
    - guidfixed
    - name1
    type: object
  models.AccountGroupInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.AccountGroupInfo'
      success:
        type: boolean
    type: object
  models.AccountGroupPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.AccountGroupInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.AccountPeriodMaster:
    properties:
      description:
        type: string
      enddate:
        type: string
      isdisabled:
        type: boolean
      period:
        type: integer
      startdate:
        type: string
    type: object
  models.Address:
    properties:
      address:
        items:
          type: string
        type: array
      contactnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      countrycode:
        type: string
      districtcode:
        type: string
      guid:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      phoneprimary:
        type: string
      phonesecondary:
        type: string
      provincecode:
        type: string
      subdistrictcode:
        type: string
      zipcode:
        type: string
    type: object
  models.ApiResponse:
    properties:
      data: {}
      id: {}
      message:
        type: string
      pagination: {}
      success:
        type: boolean
      total: {}
    type: object
  models.AuthResponse:
    properties:
      success:
        type: boolean
      token:
        type: string
    type: object
  models.AuthResponseFailed:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  models.AvailablePatternOption:
    properties:
      optionpatterntags:
        items:
          type: string
        type: array
      patternkey:
        type: string
      price:
        type: number
      qty:
        type: number
    type: object
  models.BalanceSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: มูลค่า
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      shopid:
        type: string
    type: object
  models.BalanceSheetReport:
    properties:
      accountgroup:
        description: เล่มบัญชี
        type: string
      assets:
        description: สินทรัพย์
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      enddate:
        description: วันที่สิ้นสุด
        type: string
      liabilities:
        description: หนี้สิน
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      ownesequities:
        description: ทุนและส่วนของเจ้าของ
        items:
          $ref: '#/definitions/models.BalanceSheetAccountDetail'
        type: array
      reportdate:
        description: วันที่ทำรายการ
        type: string
      totalassetamount:
        description: รวมสินทรัพย์
        type: number
      totalliabilityamount:
        description: รวมหนี้สิน
        type: number
      totalliabilityandownersequityamount:
        description: รวมหนี้สิน ทุน และส่วนของเจ้าของ
        type: number
      totalownersequityamount:
        description: รวมทุนและส่วนของเจ้าของ
        type: number
    type: object
  models.BalanceSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.BalanceSheetReport'
      success:
        type: boolean
    type: object
  models.BankMaster:
    properties:
      code:
        type: string
      logo:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.Barcode:
    properties:
      barcode:
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      image:
        type: string
      isprimary:
        type: boolean
      memberprice:
        type: number
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      normalprice:
        type: number
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      pricerangemaxmax:
        type: number
      pricerangemin:
        type: number
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    required:
    - name1
    type: object
  models.BarcodeRequest:
    properties:
      barcode:
        minLength: 1
        type: string
      condition:
        type: boolean
      dividevalue:
        type: number
      qty:
        type: number
      standvalue:
        type: number
    required:
    - barcode
    type: object
  models.BarcodesModifyReqesut:
    type: object
  models.BookBank:
    properties:
      accountcode:
        type: string
      accountname:
        type: string
      bankcode:
        type: string
      banknames:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      bookcode:
        type: string
      images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      passbook:
        type: string
    required:
    - banknames
    - names
    type: object
  models.Branch:
    properties:
      businesstypes:
        items:
          type: string
        type: array
      code:
        type: string
      contact:
        $ref: '#/definitions/smlcloudplatform_pkg_organization_branch_models.Contact'
      departments:
        items:
          $ref: '#/definitions/models.Department'
        type: array
      languages:
        items:
          type: string
        type: array
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.BulkInsertResponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.BulkReponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.BusinessType:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CategoryImport:
    properties:
      childcount:
        type: integer
      codelist:
        items:
          $ref: '#/definitions/models.CodeXSort'
        type: array
        uniqueItems: true
      colorselect:
        type: string
      colorselecthex:
        type: string
      guidfixed:
        type: string
      id:
        type: string
      imageuri:
        type: string
      isdisabled:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      shopid:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - guidfixed
    - names
    type: object
  models.CategoryImportInfo:
    properties:
      childcount:
        type: integer
      codelist:
        items:
          $ref: '#/definitions/models.CodeXSort'
        type: array
        uniqueItems: true
      colorselect:
        type: string
      colorselecthex:
        type: string
      guidfixed:
        type: string
      id:
        type: string
      imageuri:
        type: string
      isdisabled:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      shopid:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - guidfixed
    - guidfixed
    - names
    type: object
  models.CategoryImportPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.CategoryImportInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.ChartOfAccount:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
    type: object
  models.ChartOfAccountInfo:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      guidfixed:
        type: string
    required:
    - guidfixed
    type: object
  models.ChartOfAccountInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.ChartOfAccountInfo'
      success:
        type: boolean
    type: object
  models.ChartOfAccountPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ChartOfAccountInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Choice:
    properties:
      barcode:
        type: string
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
      code:
        type: string
      default:
        type: boolean
      itemunit:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      price:
        type: number
      qty:
        type: number
      qtymax:
        type: number
      selected:
        type: boolean
      suggestcode:
        type: string
    required:
    - name1
    - names
    type: object
  models.CodeXSort:
    properties:
      barcode:
        type: string
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      unitcode:
        type: string
      unitnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  models.Color:
    properties:
      code:
        type: string
      colorhex:
        type: string
      colorselect:
        type: string
      colorselecthex:
        type: string
      colorsystem:
        type: string
      colorsystemhex:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.Comment:
    properties:
      comment:
        type: string
      commentedat:
        type: string
      commentedby:
        type: string
      guidfixed:
        type: string
    type: object
  models.CommentRequest:
    properties:
      comment:
        type: string
    type: object
  models.CreditorGroup:
    properties:
      groupcode:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CreditorRequest:
    properties:
      addressforbilling:
        $ref: '#/definitions/models.Address'
      addressforshipping:
        items:
          $ref: '#/definitions/models.Address'
        type: array
      branchnumber:
        type: string
      code:
        type: string
      creditday:
        type: integer
      customertype:
        type: integer
      email:
        type: string
      fundcode:
        type: string
      groups:
        items:
          type: string
        type: array
      images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      ismember:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      personaltype:
        type: integer
      taxid:
        type: string
    required:
    - names
    type: object
  models.CustomerGroup:
    properties:
      groupcode:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.CustomerRequest:
    properties:
      addressforbilling:
        $ref: '#/definitions/models.Address'
      addressforshipping:
        items:
          $ref: '#/definitions/models.Address'
        type: array
      branchnumber:
        type: string
      code:
        type: string
      creditday:
        type: integer
      customertype:
        type: integer
      email:
        type: string
      fundcode:
        type: string
      groups:
        items:
          type: string
        type: array
      images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      iscreditor:
        type: boolean
      isdebtor:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      personaltype:
        type: integer
      taxid:
        type: string
    required:
    - names
    type: object
  models.DebtorGroup:
    properties:
      groupcode:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.DebtorRequest:
    properties:
      addressforbilling:
        $ref: '#/definitions/models.Address'
      addressforshipping:
        items:
          $ref: '#/definitions/models.Address'
        type: array
      branchnumber:
        type: string
      code:
        type: string
      creditday:
        type: integer
      customertype:
        type: integer
      email:
        type: string
      fundcode:
        type: string
      groups:
        items:
          type: string
        type: array
      images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      ismember:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      personaltype:
        type: integer
      taxid:
        type: string
    required:
    - names
    type: object
  models.Department:
    properties:
      code:
        description: GuidFixed string         `json:"guidfixed"`
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
    type: object
  models.Detail:
    properties:
      averagecost:
        type: number
      barcode:
        type: string
      calcflag:
        type: integer
      discount:
        type: string
      discountamount:
        type: number
      dividevalue:
        type: number
      docdatetime:
        type: string
      docref:
        type: string
      docrefdatetime:
        type: string
      inquirytype:
        type: integer
      ispos:
        type: integer
      itemcode:
        type: string
      itemguid:
        type: string
      itemnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      itemtype:
        type: integer
      laststatus:
        type: integer
      linenumber:
        type: integer
      locationcode:
        type: string
      locationnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      multiunit:
        type: boolean
      price:
        type: number
      priceexcludevat:
        type: number
      qty:
        type: number
      remark:
        type: string
      shelfcode:
        type: string
      standvalue:
        type: number
      sumamount:
        type: number
      sumamountexcludevat:
        type: number
      sumofcost:
        type: number
      taxtype:
        type: integer
      tolocationcode:
        type: string
      tolocationnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      totalqty:
        type: number
      totalvaluevat:
        type: number
      towhcode:
        type: string
      towhnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      unitcode:
        type: string
      unitnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      vatcal:
        type: integer
      vattype:
        type: integer
      whcode:
        type: string
      whnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
    type: object
  models.DocumentImage:
    properties:
      cloneimagefrom:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      edits:
        items:
          $ref: '#/definitions/models.ImageEdit'
        type: array
      imageuri:
        type: string
      metafileat:
        type: string
      name:
        type: string
      referencegroups:
        items:
          $ref: '#/definitions/models.ReferenceGroup'
        type: array
      references:
        description: |-
          IsReject        bool             `json:"isreject" bson:"isreject"`
          Status          int8             `json:"status" bson:"status"`
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      uploadedat:
        type: string
      uploadedby:
        type: string
    type: object
  models.DocumentImageGroup:
    properties:
      description:
        type: string
      imagereferences:
        items:
          $ref: '#/definitions/models.ImageReference'
        type: array
      iscompleted:
        type: boolean
      pathtask:
        type: string
      references:
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      rejectfromgroupguid:
        type: string
      rejectremark:
        type: string
      status:
        type: integer
      statuschangedat:
        type: string
      statuschangedby:
        type: string
      statushistories:
        items:
          $ref: '#/definitions/models.StatusHistory'
        type: array
      tags:
        items:
          type: string
        type: array
      taskguid:
        minLength: 1
        type: string
      title:
        description: DocumentRef     string            `json:"documentref" bson:"documentref"`
        type: string
      uploadedat:
        type: string
      uploadedby:
        type: string
      xorder:
        type: integer
    required:
    - taskguid
    type: object
  models.DocumentImageInfo:
    properties:
      cloneimagefrom:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      edits:
        items:
          $ref: '#/definitions/models.ImageEdit'
        type: array
      guidfixed:
        type: string
      imageuri:
        type: string
      metafileat:
        type: string
      name:
        type: string
      referencegroups:
        items:
          $ref: '#/definitions/models.ReferenceGroup'
        type: array
      references:
        description: |-
          IsReject        bool             `json:"isreject" bson:"isreject"`
          Status          int8             `json:"status" bson:"status"`
        items:
          $ref: '#/definitions/models.Reference'
        type: array
      uploadedat:
        type: string
      uploadedby:
        type: string
    required:
    - guidfixed
    type: object
  models.DocumentImageInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.DocumentImageInfo'
      success:
        type: boolean
    type: object
  models.DocumentImagePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.DocumentImageInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.EmployeeRequestPassword:
    properties:
      code:
        type: string
      password:
        type: string
    type: object
  models.EmployeeRequestRegister:
    properties:
      code:
        type: string
      contact:
        $ref: '#/definitions/smlcloudplatform_pkg_shop_employee_models.Contact'
      email:
        type: string
      isenabled:
        type: boolean
      name:
        type: string
      password:
        type: string
      pincode:
        type: string
      profilepicture:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  models.EmployeeRequestUpdate:
    properties:
      code:
        type: string
      contact:
        $ref: '#/definitions/smlcloudplatform_pkg_shop_employee_models.Contact'
      email:
        type: string
      isenabled:
        type: boolean
      name:
        type: string
      pincode:
        type: string
      profilepicture:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  models.Image:
    properties:
      uri:
        type: string
    type: object
  models.ImageEdit:
    properties:
      editedat:
        type: string
      editedby:
        type: string
      imageuri:
        type: string
    type: object
  models.ImageEditRequest:
    properties:
      editedat:
        type: string
      editedby:
        type: string
      imageuri:
        type: string
    type: object
  models.ImageReference:
    properties:
      cloneimagefrom:
        type: string
      documentimageguid:
        type: string
      imageuri:
        type: string
      metafileat:
        type: string
      name:
        description: ImageEditURI       string `json:"imageedituri" bson:"imageedituri"`
        type: string
      uploadedat:
        type: string
      uploadedby:
        description: IsReject           bool      `json:"isreject" bson:"isreject"`
        type: string
      xorder:
        type: integer
    type: object
  models.ImageReferenceBody:
    properties:
      documentimageguid:
        type: string
      xorder:
        type: integer
    type: object
  models.IncudeChoice:
    properties:
      choicecode:
        type: string
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
    type: object
  models.Inventory:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      memberprice:
        type: number
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      normalprice:
        type: number
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      pricerangemaxmax:
        type: number
      pricerangemin:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - name1
    type: object
  models.InventoryActivity:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      createdat:
        type: string
      deletedat:
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      memberprice:
        type: number
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      normalprice:
        type: number
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      pricerangemaxmax:
        type: number
      pricerangemin:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shopid:
        type: string
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      updatedat:
        type: string
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - guidfixed
    - name1
    type: object
  models.InventoryBulkInsertResponse:
    properties:
      created:
        items:
          type: string
        type: array
      payloadDuplicate:
        items:
          type: string
        type: array
      success:
        type: boolean
      updateFailed:
        items:
          type: string
        type: array
      updated:
        items:
          type: string
        type: array
    type: object
  models.InventoryDeleteActivity:
    properties:
      createdat:
        type: string
      deletedat:
        type: string
      guidfixed:
        type: string
      shopid:
        type: string
      updatedat:
        type: string
    type: object
  models.InventoryFetchUpdateResponse:
    properties:
      data:
        $ref: '#/definitions/models.InventoryLastActivityResponse'
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryImage:
    properties:
      uri:
        type: string
    type: object
  models.InventoryInfo:
    properties:
      activated:
        description: เปิดใช้งานอยู่
        type: boolean
      availablepatternoptions:
        items:
          $ref: '#/definitions/models.AvailablePatternOption'
        type: array
      barcode:
        maxLength: 100
        type: string
      barcodedescriptionfromproduct:
        type: boolean
      barcodedetail:
        $ref: '#/definitions/models.Barcode'
      barcodes:
        items:
          $ref: '#/definitions/models.Barcode'
        type: array
      category:
        $ref: '#/definitions/models.ProductCategory'
      categoryguid:
        description: Guid กลุ่มสินค้า
        maxLength: 100
        type: string
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      guidfixed:
        type: string
      havepoint:
        type: boolean
      haveserialno:
        type: boolean
      images:
        items:
          $ref: '#/definitions/models.InventoryImage'
        type: array
      isstockproduct:
        type: boolean
      itemcode:
        maxLength: 50
        type: string
      itemguid:
        maxLength: 50
        type: string
      itemsku:
        maxLength: 50
        type: string
      itemtype:
        maximum: 125
        minimum: -125
        type: integer
      itemvat:
        maximum: 125
        minimum: -125
        type: integer
      memberprice:
        type: number
      multiunit:
        type: boolean
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      normalprice:
        type: number
      optionpatternmaster:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
      ordercount:
        maximum: 100
        type: integer
      orderminimum:
        type: number
      parid:
        maxLength: 50
        type: string
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      pricerangemaxmax:
        type: number
      pricerangemin:
        type: number
      recommended:
        description: สินค้าแนะนำ
        type: boolean
      shoprecommended:
        type: boolean
      starpercent:
        type: number
      stockproductguidref:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.InventoryTag'
        type: array
      unit:
        $ref: '#/definitions/smlcloudplatform_pkg_product_inventory_models.Unit'
      unitcode:
        maxLength: 100
        type: string
      unitcost:
        maxLength: 100
        type: string
      unitstandard:
        maxLength: 100
        type: string
      unituses:
        items:
          $ref: '#/definitions/models.UnitUse'
        type: array
      xorder:
        maximum: 125
        minimum: -125
        type: integer
    required:
    - guidfixed
    - name1
    type: object
  models.InventoryInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.InventoryInfo'
      success:
        type: boolean
    type: object
  models.InventoryLastActivityResponse:
    properties:
      new:
        items:
          $ref: '#/definitions/models.InventoryActivity'
        type: array
      remove:
        items:
          $ref: '#/definitions/models.InventoryDeleteActivity'
        type: array
    type: object
  models.InventoryOptionGroup:
    properties:
      details:
        items:
          $ref: '#/definitions/models.InventoryOptionGroupDetail'
        type: array
      guidfixed:
        type: string
      id:
        type: string
      optionname1:
        type: string
      productselectoption1:
        type: boolean
      productselectoption2:
        type: boolean
      productselectoptionmax:
        type: integer
      productselectoptionmin:
        type: integer
      shopid:
        type: string
    type: object
  models.InventoryOptionGroupDetail:
    properties:
      amount:
        type: number
      detailname1:
        type: string
      guidfixed:
        type: string
    type: object
  models.InventoryOptionMain:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.InventoryOptionMainImport:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.InventoryOptionMainInfo:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      guidfixed:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - guidfixed
    - name1
    - names
    type: object
  models.InventoryOptionPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.InventoryOptionMainInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.InventoryInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.InventoryTag:
    properties:
      name:
        type: string
    type: object
  models.Journal:
    properties:
      accountdescription:
        type: string
      accountgroup:
        type: string
      accountperiod:
        type: integer
      accountyear:
        type: integer
      amount:
        type: number
      batchid:
        type: string
      bookcode:
        type: string
      docdate:
        format: dateTime
        type: string
      docformat:
        type: string
      docno:
        type: string
      documentref:
        type: string
      exdocrefdate:
        type: string
      exdocrefno:
        type: string
      journaldetail:
        items:
          $ref: '#/definitions/models.JournalDetail'
        type: array
      journaltype:
        description: ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)
        type: integer
      taxes:
        items:
          $ref: '#/definitions/models.Tax'
        type: array
      vats:
        items:
          $ref: '#/definitions/models.Vat'
        type: array
    type: object
  models.JournalBook:
    properties:
      code:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.JournalBookInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - guidfixed
    - name1
    type: object
  models.JournalBookInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.JournalBookInfo'
      success:
        type: boolean
    type: object
  models.JournalBookPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.JournalBookInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.JournalDetail:
    properties:
      accountcode:
        description: chart of account code
        type: string
      accountname:
        type: string
      creditamount:
        type: number
      debitamount:
        type: number
    type: object
  models.JournalInfo:
    properties:
      accountdescription:
        type: string
      accountgroup:
        type: string
      accountperiod:
        type: integer
      accountyear:
        type: integer
      amount:
        type: number
      batchid:
        type: string
      bookcode:
        type: string
      createdat:
        type: string
      createdby:
        type: string
      docdate:
        format: dateTime
        type: string
      docformat:
        type: string
      docno:
        type: string
      documentref:
        type: string
      exdocrefdate:
        type: string
      exdocrefno:
        type: string
      guidfixed:
        type: string
      journaldetail:
        items:
          $ref: '#/definitions/models.JournalDetail'
        type: array
      journaltype:
        description: ประเภทข้อมูลรายวัน (0 = ทั่วไป, 1=ปิดยอด)
        type: integer
      taxes:
        items:
          $ref: '#/definitions/models.Tax'
        type: array
      vats:
        items:
          $ref: '#/definitions/models.Vat'
        type: array
    required:
    - guidfixed
    type: object
  models.JournalInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.JournalInfo'
      success:
        type: boolean
    type: object
  models.JournalPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.JournalInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.JournalRef:
    properties:
      docref:
        type: string
    type: object
  models.Kitchen:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      printers:
        items:
          type: string
        type: array
      products:
        items:
          type: string
        type: array
      zones:
        items:
          type: string
        type: array
    required:
    - names
    type: object
  models.KitchenBarcode:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.KitchenInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      printers:
        items:
          type: string
        type: array
      products:
        items:
          type: string
        type: array
      zones:
        items:
          type: string
        type: array
    required:
    - guidfixed
    - names
    type: object
  models.KitchenInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.KitchenInfo'
      success:
        type: boolean
    type: object
  models.KitchenPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.KitchenInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Location:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      shelf:
        items:
          $ref: '#/definitions/models.Shelf'
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.LocationRequest:
    properties:
      locationcode:
        type: string
      locationnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      shelf:
        items:
          $ref: '#/definitions/models.Shelf'
        type: array
      warehousecode:
        type: string
    required:
    - locationcode
    - warehousecode
    type: object
  models.LostAndProfitSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.ProfitAndLossSheetReport'
      success:
        type: boolean
    type: object
  models.Member:
    properties:
      address:
        type: string
      branchcode:
        type: string
      branchtype:
        type: integer
      contacttype:
        type: integer
      name:
        type: string
      personaltype:
        type: integer
      surname:
        type: string
      taxid:
        type: string
      telephone:
        type: string
      zipcode:
        type: string
    type: object
  models.MemberInfo:
    properties:
      address:
        type: string
      branchcode:
        type: string
      branchtype:
        type: integer
      contacttype:
        type: integer
      guidfixed:
        type: string
      name:
        type: string
      personaltype:
        type: integer
      surname:
        type: string
      taxid:
        type: string
      telephone:
        type: string
      zipcode:
        type: string
    required:
    - guidfixed
    type: object
  models.MemberInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.MemberInfo'
      success:
        type: boolean
    type: object
  models.MemberPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.MemberInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.NameX:
    properties:
      code:
        maxLength: 255
        minLength: 1
        type: string
      isauto:
        type: boolean
      isdelete:
        type: boolean
      name:
        maxLength: 255
        type: string
    required:
    - code
    - name
    type: object
  models.Option:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.OptionDetail:
    properties:
      choicedetails:
        items:
          $ref: '#/definitions/models.IncudeChoice'
        type: array
      image:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optiondetailcode:
        type: string
    required:
    - name1
    - names
    type: object
  models.OptionPattern:
    properties:
      colorcode:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optionpatterndetails:
        items:
          $ref: '#/definitions/models.OptionPatternDetail'
        type: array
      patterncode:
        type: string
    required:
    - name1
    - names
    type: object
  models.OptionPatternDetail:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.Choice'
        type: array
      choicetype:
        type: integer
      code:
        type: string
      isstockcontrol:
        type: boolean
      maxselect:
        type: integer
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      optioncode:
        type: string
      optiondetails:
        items:
          $ref: '#/definitions/models.OptionDetail'
        type: array
      required:
        type: boolean
      xorder:
        type: integer
    required:
    - name1
    - names
    type: object
  models.OrderType:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      prices:
        items:
          $ref: '#/definitions/models.OrderTypePrice'
        minItems: 1
        type: array
        uniqueItems: true
      remarks:
        items:
          items:
            $ref: '#/definitions/models.NameX'
          type: array
        type: array
    required:
    - names
    - prices
    type: object
  models.OrderTypePrice:
    properties:
      price:
        type: number
      type:
        type: integer
    type: object
  models.POSEmployee:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    required:
    - guidfixed
    type: object
  models.PaginationDataResponse:
    properties:
      next:
        type: integer
      page:
        type: integer
      perPage:
        type: integer
      prev:
        type: integer
      total:
        type: integer
      totalPage:
        type: integer
    type: object
  models.Paid:
    properties:
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      details:
        items:
          $ref: '#/definitions/models.PaidDetail'
        type: array
      docdatetime:
        type: string
      docno:
        type: string
      doctype:
        type: integer
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      salecode:
        type: string
      salename:
        type: string
      totalamount:
        type: number
      totalbalance:
        type: number
      totalpaymentamount:
        type: number
      totalvalue:
        type: number
      transflag:
        type: integer
    type: object
  models.PaidDetail:
    properties:
      balance:
        type: number
      docdatetime:
        type: string
      docno:
        type: string
      paymentamount:
        type: number
      selected:
        type: boolean
      transflag:
        type: integer
      value:
        type: number
    type: object
  models.Pay:
    properties:
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      details:
        items:
          $ref: '#/definitions/models.PayDetail'
        type: array
      docdatetime:
        type: string
      docno:
        type: string
      doctype:
        type: integer
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      salecode:
        type: string
      salename:
        type: string
      totalamount:
        type: number
      totalbalance:
        type: number
      totalpaymentamount:
        type: number
      totalvalue:
        type: number
      transflag:
        type: integer
    type: object
  models.PayDetail:
    properties:
      balance:
        type: number
      docdatetime:
        type: string
      docno:
        type: string
      paymentamount:
        type: number
      selected:
        type: boolean
      transflag:
        type: integer
      value:
        type: number
    type: object
  models.PaymentCreditCard:
    properties:
      amount:
        type: number
      cardnumber:
        type: string
      chargevalue:
        type: number
      chargeword:
        type: string
      docdatetime:
        type: string
      totalnetworth:
        type: number
    type: object
  models.PaymentDetail:
    properties:
      cashamount:
        type: number
      cashamounttext:
        type: string
      paymentcreditcards:
        items:
          $ref: '#/definitions/models.PaymentCreditCard'
        type: array
      paymenttransfers:
        items:
          $ref: '#/definitions/models.PaymentTransfer'
        type: array
    type: object
  models.PaymentMaster:
    properties:
      countrycode:
        type: string
      feerate:
        type: number
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      paymentcode:
        type: string
      paymentlogo:
        type: string
      paymenttype:
        type: integer
      wallettype:
        type: integer
    required:
    - name1
    type: object
  models.PaymentMasterInfo:
    properties:
      countrycode:
        type: string
      feerate:
        type: number
      guidfixed:
        type: string
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
      paymentcode:
        type: string
      paymentlogo:
        type: string
      paymenttype:
        type: integer
      wallettype:
        type: integer
    required:
    - guidfixed
    - name1
    type: object
  models.PaymentMasterInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.PaymentMasterInfo'
      success:
        type: boolean
    type: object
  models.PaymentMasterPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PaymentMasterInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.PaymentTransfer:
    properties:
      accountnumber:
        type: string
      amount:
        type: number
      bankcode:
        type: string
      banknames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      docdatetime:
        type: string
    type: object
  models.Printer:
    properties:
      address:
        type: string
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      type:
        type: integer
    required:
    - names
    type: object
  models.PrinterInfo:
    properties:
      address:
        type: string
      code:
        type: string
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      type:
        type: integer
    required:
    - guidfixed
    - names
    type: object
  models.PrinterInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.PrinterInfo'
      success:
        type: boolean
    type: object
  models.PrinterPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PrinterInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Product:
    properties:
      barcodes:
        items:
          type: string
        type: array
      groupcode:
        type: string
      groupname:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      images:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_product_product_models.ProductImage'
        type: array
      issumpoint:
        type: boolean
      itemcode:
        maxLength: 100
        minLength: 1
        type: string
      itemstocktype:
        type: integer
      itemtype:
        type: integer
      multiunit:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      prices:
        items:
          $ref: '#/definitions/models.ProductPrice'
        type: array
      taxtype:
        description: 0 ภาษีมูลค่าเพิ่ม 7%, 1 ยกเว้นภาษี
        type: integer
      unit:
        $ref: '#/definitions/models.ProductUnit'
      unitcost:
        type: string
      unitcostnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      units:
        items:
          $ref: '#/definitions/models.ProductUnit'
        type: array
      unitstandard:
        type: string
      unitstandardnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      useserialnumber:
        type: boolean
      vattype:
        type: integer
    required:
    - itemcode
    - names
    - unit
    type: object
  models.ProductBarcode:
    properties:
      barcode:
        type: string
      kitchens:
        items:
          $ref: '#/definitions/models.KitchenBarcode'
        type: array
    type: object
  models.ProductBarcodeRequest:
    properties:
      barcode:
        minLength: 1
        type: string
      colorselect:
        type: string
      colorselecthex:
        type: string
      condition:
        type: boolean
      dividevalue:
        type: number
      groupcode:
        type: string
      groupnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      images:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_product_productbarcode_models.ProductImage'
        type: array
      imageuri:
        type: string
      isalacarte:
        type: boolean
      isdividend:
        type: boolean
      isonlystaff:
        type: boolean
      issplitunitprint:
        type: boolean
      issumpoint:
        type: boolean
      isusesubbarcodes:
        type: boolean
      itemcode:
        type: string
      itemtype:
        type: integer
      itemunitcode:
        type: string
      itemunitnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      itemunitsize:
        type: number
      maxdiscount:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      options:
        items:
          $ref: '#/definitions/models.ProductOption'
        type: array
      ordertypes:
        items:
          $ref: '#/definitions/models.ProductOrderType'
        type: array
      prices:
        items:
          $ref: '#/definitions/models.ProductPrice'
        type: array
      qty:
        type: number
      refbarcodes:
        items:
          $ref: '#/definitions/models.BarcodeRequest'
        type: array
      refdividevalue:
        type: number
      refstandvalue:
        type: number
      refunitnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      standvalue:
        type: number
      stockbarcode:
        type: string
      taxtype:
        type: integer
      useimageorcolor:
        type: boolean
      vatcal:
        type: integer
      vattype:
        type: integer
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - barcode
    - names
    type: object
  models.ProductCategory:
    properties:
      childcount:
        type: integer
      codelist:
        items:
          $ref: '#/definitions/models.CodeXSort'
        type: array
        uniqueItems: true
      colorselect:
        type: string
      colorselecthex:
        type: string
      imageuri:
        type: string
      isdisabled:
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      parentguid:
        type: string
      parentguidall:
        type: string
      useimageorcolor:
        type: boolean
      xsorts:
        items:
          $ref: '#/definitions/models.XSort'
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.ProductChoice:
    properties:
      guid:
        type: string
      isdefault:
        type: boolean
      isstock:
        description: QtyMax         float64         `json:"qtymax" bson:"qtymax"`
        type: boolean
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      price:
        type: string
      qty:
        type: number
      refbarcode:
        type: string
      refproductcode:
        type: string
      refunitcode:
        type: string
      refunitnames:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    - refunitnames
    type: object
  models.ProductGroup:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.ProductOption:
    properties:
      choices:
        items:
          $ref: '#/definitions/models.ProductChoice'
        type: array
      choicetype:
        type: integer
      guid:
        type: string
      maxselect:
        maximum: 60000
        minimum: 0
        type: integer
      minselect:
        maximum: 60000
        minimum: 0
        type: integer
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
  models.ProductOrderType:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      price:
        type: number
    required:
    - guidfixed
    type: object
  models.ProductPrice:
    properties:
      memberprice:
        type: number
      normalprice:
        type: number
      price:
        description: ราคาพื้นฐาน (กรณีไม่มีตารางราคา และโปรโมชั่น)
        type: number
      pricerangemaxmax:
        type: number
      pricerangemin:
        type: number
    type: object
  models.ProductUnit:
    properties:
      divider:
        type: number
      names:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      stand:
        type: number
      stockcount:
        type: boolean
      unitcode:
        type: string
      xorder:
        type: integer
    type: object
  models.ProfitAndLossSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: มูลค่า
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      shopid:
        type: string
    type: object
  models.ProfitAndLossSheetReport:
    properties:
      accountgroup:
        description: เล่มบัญชี
        type: string
      enddate:
        description: วันที่สิ้นสุด
        type: string
      expenses:
        description: รายการค่าใช้จ่าย
        items:
          $ref: '#/definitions/models.ProfitAndLossSheetAccountDetail'
        type: array
      incomes:
        description: รายการรายได้
        items:
          $ref: '#/definitions/models.ProfitAndLossSheetAccountDetail'
        type: array
      profitandlossamount:
        description: กำไรขาดทุน
        type: number
      reportdate:
        description: วันที่ทำรายการ
        type: string
      startdate:
        description: วันที่เริ่มต้น
        type: string
      totalexpenseamount:
        description: รวมค่าใช้จ่าย
        type: number
      totalincomeamount:
        description: รวมรายได้
        type: number
    type: object
  models.Promotion:
    properties:
      code:
        type: string
      details:
        items:
          $ref: '#/definitions/models.PromotionDetail'
        type: array
      fromdate:
        type: string
      fromtime:
        type: string
      ismemberonly:
        type: boolean
      isuseinfriday:
        type: boolean
      isuseinmonday:
        type: boolean
      isuseinsaturday:
        type: boolean
      isuseinsunday:
        type: boolean
      isuseinthursday:
        type: boolean
      isuseintuesday:
        type: boolean
      isuseinwednesday:
        type: boolean
      name:
        type: string
      productbarcode:
        $ref: '#/definitions/models.ProductBarcode'
      promotiontype:
        type: integer
      remark:
        type: string
      todate:
        type: string
      totime:
        type: string
    type: object
  models.PromotionDetail:
    properties:
      detailtype:
        description: '0: discount, 1: buy x get y, 2: buy x get y with discount'
        type: integer
      discount:
        type: number
      minimum:
        type: number
      productbarcode:
        $ref: '#/definitions/models.ProductBarcode'
    type: object
  models.Purchase:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.PurchaseReturn:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.QrPayment:
    properties:
      bankcode:
        type: string
      bookbankcode:
        type: string
      countrycode:
        type: string
      feerate:
        type: number
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      paymentcode:
        type: string
      paymentlogo:
        type: string
      paymenttype:
        type: integer
      wallettype:
        type: integer
    required:
    - names
    type: object
  models.Reference:
    properties:
      docno:
        type: string
      module:
        type: string
    type: object
  models.ReferenceGroup:
    properties:
      grouptype:
        type: string
      parentguid:
        type: string
      xorder:
        type: integer
      xtype:
        type: integer
    type: object
  models.ResponseSuccess:
    properties:
      success:
        type: boolean
    type: object
  models.ResponseSuccessWithID:
    properties:
      id: {}
      success:
        type: boolean
    type: object
  models.RestaurantSettings:
    properties:
      body:
        type: string
      code:
        type: string
    type: object
  models.RestaurantSettingsInfo:
    properties:
      body:
        type: string
      code:
        type: string
      guidfixed:
        type: string
    required:
    - guidfixed
    type: object
  models.RestaurantSettingsInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.RestaurantSettingsInfo'
      success:
        type: boolean
    type: object
  models.RestaurantSettingsPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.RestaurantSettingsInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.SMLTransactionBulkRequest:
    properties:
      body:
        items:
          additionalProperties: true
          type: object
        type: array
      collection:
        maxLength: 100
        minLength: 1
        type: string
      keyid:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - body
    - collection
    - keyid
    type: object
  models.SMLTransactionKeyRequest:
    properties:
      collection:
        maxLength: 100
        minLength: 1
        type: string
      deletekeys:
        items:
          type: string
        type: array
      keyid:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - collection
    - deletekeys
    - keyid
    type: object
  models.SMLTransactionRequest:
    properties:
      body:
        additionalProperties: true
        type: object
      collection:
        maxLength: 100
        minLength: 1
        type: string
      keyid:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - body
    - collection
    - keyid
    type: object
  models.SaleChannel:
    properties:
      code:
        minLength: 1
        type: string
      gp:
        type: number
      gptype:
        type: integer
      imageuri:
        type: string
      name:
        minLength: 1
        type: string
    required:
    - code
    - name
    type: object
  models.SaleInvoice:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      ispos:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.SaleInvoiceReturn:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      ispos:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.SectionBranch:
    properties:
      branchcode:
        type: string
      productcodes:
        items:
          type: string
        type: array
    type: object
  models.SectionBusinessType:
    properties:
      businesstypecode:
        type: string
      productcodes:
        items:
          type: string
        type: array
    type: object
  models.SectionDepartment:
    properties:
      branchcode:
        type: string
      departmentcode:
        type: string
      productcodes:
        items:
          type: string
        type: array
    type: object
  models.Setting:
    properties:
      activepin:
        type: string
      branch:
        $ref: '#/definitions/models.Branch'
      code:
        type: string
      devicenumber:
        type: string
      docformatinv:
        type: string
      docformattaxinv:
        type: string
      employees:
        items:
          $ref: '#/definitions/models.POSEmployee'
        type: array
      location:
        $ref: '#/definitions/models.Location'
      receiptform:
        type: string
      warehouse:
        $ref: '#/definitions/smlcloudplatform_pkg_pos_setting_models.Warehouse'
    required:
    - code
    type: object
  models.Shelf:
    properties:
      code:
        type: string
      name:
        minLength: 1
        type: string
    required:
    - name
    type: object
  models.ShelfRequest:
    properties:
      locationcode:
        type: string
      shelfcode:
        type: string
      shelfname:
        type: string
      warehousecode:
        type: string
    required:
    - locationcode
    - shelfcode
    - warehousecode
    type: object
  models.Shop:
    properties:
      address:
        type: string
      branchcode:
        type: string
      name1:
        type: string
      profilepicture:
        type: string
      telephone:
        type: string
    type: object
  models.ShopInfo:
    properties:
      address:
        type: string
      branchcode:
        type: string
      guidfixed:
        type: string
      name1:
        type: string
      profilepicture:
        type: string
      telephone:
        type: string
    required:
    - guidfixed
    type: object
  models.ShopSelectRequest:
    properties:
      shopid:
        type: string
    required:
    - shopid
    type: object
  models.ShopUserInfo:
    properties:
      branchcode:
        type: string
      isfavorite:
        type: boolean
      lastaccessedat:
        type: string
      name:
        type: string
      role:
        type: integer
      shopid:
        type: string
    type: object
  models.SmsPaymentSettings:
    properties:
      patterncode:
        type: string
      storefrontguid:
        maxLength: 233
        type: string
      timeminuteafter:
        type: integer
      timeminutebefore:
        type: integer
    required:
    - patterncode
    - storefrontguid
    type: object
  models.SmsTransaction:
    properties:
      address:
        type: string
      body:
        type: string
      deviceuuid:
        type: string
      sendedat:
        type: string
      status:
        type: integer
      storefrontguid:
        maxLength: 233
        type: string
      transid:
        type: string
    required:
    - storefrontguid
    type: object
  models.SmsTransactionInfo:
    properties:
      address:
        type: string
      body:
        type: string
      deviceuuid:
        type: string
      guidfixed:
        type: string
      sendedat:
        type: string
      status:
        type: integer
      storefrontguid:
        maxLength: 233
        type: string
      transid:
        type: string
    required:
    - guidfixed
    - storefrontguid
    type: object
  models.SmsTransactionInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.SmsTransactionInfo'
      success:
        type: boolean
    type: object
  models.SmsTransactionPageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SmsTransactionInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Staff:
    properties:
      cashier:
        type: boolean
      code:
        type: string
      email:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      order:
        type: boolean
    required:
    - names
    type: object
  models.Status:
    properties:
      status:
        type: integer
    type: object
  models.StatusHistory:
    properties:
      changedat:
        type: string
      changedby:
        type: string
      status:
        type: integer
    type: object
  models.StockAdjustment:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.StockPickupProduct:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.StockReceiveProduct:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.StockReturnProduct:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.StockTransfer:
    properties:
      cashiercode:
        type: string
      custcode:
        type: string
      custnames:
        items:
          $ref: '#/definitions/models.NameX'
        type: array
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      discountword:
        type: string
      docdatetime:
        type: string
      docno:
        type: string
      docrefdate:
        type: string
      docrefno:
        type: string
      docreftype:
        type: integer
      doctype:
        type: integer
      guidref:
        type: string
      inquirytype:
        type: integer
      iscancel:
        type: boolean
      ismanualamount:
        type: boolean
      membercode:
        type: string
      paymentdetail:
        $ref: '#/definitions/models.PaymentDetail'
      posid:
        type: string
      salecode:
        type: string
      salename:
        type: string
      status:
        type: integer
      taxdocdate:
        type: string
      taxdocno:
        type: string
      totalaftervat:
        type: number
      totalamount:
        type: number
      totalbeforevat:
        type: number
      totalcost:
        type: number
      totaldiscount:
        type: number
      totalexceptvat:
        type: number
      totalvalue:
        type: number
      totalvatvalue:
        type: number
      transflag:
        type: integer
      vatrate:
        type: number
      vattype:
        type: integer
    type: object
  models.Storefront:
    properties:
      devices:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_storefront_models.Device'
        type: array
      name1:
        maxLength: 255
        type: string
      name2:
        maxLength: 255
        type: string
      name3:
        maxLength: 255
        type: string
      name4:
        maxLength: 255
        type: string
      name5:
        maxLength: 255
        type: string
    required:
    - name1
    type: object
  models.SyncInventoryData:
    properties:
      data:
        $ref: '#/definitions/models.Inventory'
      mode:
        type: integer
      myguid:
        type: string
      tablecode:
        type: string
    type: object
  models.Table:
    properties:
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      number:
        type: string
      seat:
        type: integer
      zone:
        type: string
    required:
    - names
    type: object
  models.TableInfo:
    properties:
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      number:
        type: string
      seat:
        type: integer
      zone:
        type: string
    required:
    - guidfixed
    - names
    type: object
  models.TableInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.TableInfo'
      success:
        type: boolean
    type: object
  models.TablePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.TableInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  models.Task:
    properties:
      code:
        type: string
      description:
        type: string
      isfavorit:
        type: boolean
      module:
        type: string
      name:
        type: string
      ownerat:
        type: string
      ownerby:
        type: string
      parentguidfixed:
        type: string
      path:
        type: string
      rejectedat:
        type: string
      rejectedby:
        type: string
      rejectfromtaskguid:
        type: string
      status:
        type: integer
      tags:
        items:
          type: string
        type: array
      totaldocument:
        type: integer
      totaldocumentstatus:
        items:
          $ref: '#/definitions/models.TotalStatus'
        type: array
    type: object
  models.TaskStatus:
    properties:
      status:
        type: integer
    type: object
  models.Tax:
    properties:
      address:
        type: string
      branchcode:
        type: string
      custname:
        type: string
      custtaxid:
        type: string
      custtype:
        type: integer
      details:
        items:
          $ref: '#/definitions/models.TaxDetail'
        type: array
      organization:
        type: integer
      taxamount:
        type: number
      taxdate:
        type: string
      taxdocno:
        type: string
      taxtype:
        type: integer
    type: object
  models.TaxDetail:
    properties:
      description:
        type: string
      taxamount:
        type: number
      taxbase:
        type: number
      taxrate:
        type: number
    type: object
  models.TotalStatus:
    properties:
      status:
        type: integer
      total:
        type: integer
    type: object
  models.TransportChannel:
    properties:
      code:
        minLength: 1
        type: string
      imageuri:
        type: string
      name:
        minLength: 1
        type: string
    required:
    - code
    - name
    type: object
  models.TrialBalanceSheetAccountDetail:
    properties:
      accountbalancetype:
        description: ด้านบัญชี 1=เดบิต,2=เครดิต
        type: integer
      accountcategory:
        description: หมวดบัญชี 1=สินทรัพย์, 2=หนี้สิน, 3=ทุน, 4=รายได้, 5=ค่าใช้จ่าย
        type: integer
      accountcode:
        description: รหัสผังบัญชี
        type: string
      accountgroup:
        description: กลุ่มบัญชี
        type: string
      accountlevel:
        description: ระดับบัญชี 0=บัญชีย่อย, มากกว่า 0 คือแต่ละระดับ
        type: integer
      accountname:
        description: ชื่อบัญชี
        type: string
      amount:
        description: ยอดคงเหลือ(ประจำงวด)
        type: number
      balanceamount:
        description: ยอดคงเหลือยกมา
        type: number
      balancecreditamount:
        description: ยอดยกมาเครดิต
        type: number
      balancedebitamount:
        description: ยอดยกมาเดบิต
        type: number
      consolidateaccountcode:
        description: รหัสผังบัญชีกลาง
        type: string
      creditamount:
        description: ยอดเครดิต
        type: number
      debitamount:
        description: ยอดเดบิต
        type: number
      nextbalanceamount:
        description: ยอดคงเหลือสะสม
        type: number
      nextbalancecreditamount:
        description: ยอดสะสมเครดิต
        type: number
      nextbalancedebitamount:
        description: ยอดสะสมเดบิต
        type: number
      shopid:
        type: string
      sumbalancecredit:
        type: number
      sumbalancedebit:
        type: number
      sumcredit:
        description: ยอดเครดิต
        type: number
      sumdebit:
        description: ยอดเครดิต
        type: number
      sumnextbalancecredit:
        type: number
      sumnextbalancedebit:
        type: number
    type: object
  models.TrialBalanceSheetReport:
    properties:
      accountdetails:
        description: รายละเอียดบัญชี
        items:
          $ref: '#/definitions/models.TrialBalanceSheetAccountDetail'
        type: array
      accountgroup:
        description: เล่มบัญชี
        type: string
      enddate:
        description: วันที่สิ้นสุด
        type: string
      reportdate:
        description: วันที่ทำรายการ
        type: string
      startdate:
        description: วันที่เริ่มต้น
        type: string
      totalamountcredit:
        description: รวมเครดิต
        type: number
      totalamountdebit:
        description: รวมเดบิต
        type: number
      totalbalancecredit:
        description: รวมยอดยกมาเครดิต
        type: number
      totalbalancedebit:
        description: รวมยอดยกมาเดบิต
        type: number
      totalnextbalancecredit:
        description: รวมยอดสะสมเครดิต
        type: number
      totalnextbalancedebit:
        description: รวมยอดสะสมเดบิต
        type: number
    type: object
  models.TrialBalanceSheetReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.TrialBalanceSheetReport'
      success:
        type: boolean
    type: object
  models.UnitUse:
    properties:
      description1:
        maxLength: 255
        type: string
      description2:
        maxLength: 255
        type: string
      description3:
        maxLength: 255
        type: string
      description4:
        maxLength: 255
        type: string
      description5:
        maxLength: 255
        type: string
      isprimary:
        type: boolean
      isunitcost:
        type: boolean
      isunitstandard:
        type: boolean
      itemunitdiv:
        type: number
      itemunitstd:
        type: number
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      password:
        maxLength: 233
        minLength: 5
        type: string
      shopid:
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  models.UserProfile:
    properties:
      name:
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - name
    - username
    type: object
  models.UserProfileReponse:
    properties:
      data:
        $ref: '#/definitions/models.UserProfile'
      success:
        type: boolean
    type: object
  models.UserRequest:
    properties:
      name:
        type: string
      password:
        maxLength: 233
        minLength: 5
        type: string
      username:
        maxLength: 233
        minLength: 5
        type: string
    required:
    - name
    - password
    - username
    type: object
  models.UserRoleRequest:
    properties:
      role:
        type: integer
      shopid:
        type: string
      username:
        type: string
    type: object
  models.Vat:
    properties:
      address:
        type: string
      branchcode:
        type: string
      custname:
        type: string
      custtaxid:
        type: string
      custtype:
        type: integer
      exceptvat:
        type: number
      organization:
        type: integer
      remark:
        type: string
      vatamount:
        type: number
      vatbase:
        type: number
      vatdate:
        type: string
      vatdocno:
        type: string
      vatmode:
        type: integer
      vatperiod:
        type: integer
      vatrate:
        type: number
      vatsubmit:
        type: boolean
      vattype:
        type: integer
      vatyear:
        type: integer
    type: object
  models.XSort:
    properties:
      code:
        type: string
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  models.XSortDocumentImageGroupRequest:
    properties:
      guidfixed:
        minLength: 1
        type: string
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    required:
    - guidfixed
    type: object
  models.XSortModifyReqesut:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      xorder:
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  models.Zone:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      printer:
        $ref: '#/definitions/models.Printer'
    required:
    - names
    type: object
  models.ZoneInfo:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      printer:
        $ref: '#/definitions/models.Printer'
    required:
    - guidfixed
    - names
    type: object
  models.ZoneInfoResponse:
    properties:
      data:
        $ref: '#/definitions/models.ZoneInfo'
      success:
        type: boolean
    type: object
  models.ZonePageResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ZoneInfo'
        type: array
      pagination:
        $ref: '#/definitions/models.PaginationDataResponse'
      success:
        type: boolean
    type: object
  smlcloudplatform_pkg_organization_branch_models.Contact:
    properties:
      address:
        type: string
      countrycode:
        type: string
      districtcode:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      phonenumber:
        type: string
      provincecode:
        type: string
      subdistrictcode:
        type: string
      zipcode:
        type: string
    type: object
  smlcloudplatform_pkg_pos_setting_models.Warehouse:
    properties:
      code:
        type: string
      guidfixed:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - guidfixed
    - names
    type: object
  smlcloudplatform_pkg_product_inventory_models.Unit:
    properties:
      unitcode:
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    type: object
  smlcloudplatform_pkg_product_product_models.ProductImage:
    properties:
      uri:
        type: string
      xorder:
        type: integer
    type: object
  smlcloudplatform_pkg_product_productbarcode_models.ProductImage:
    properties:
      uri:
        type: string
      xorder:
        type: integer
    type: object
  smlcloudplatform_pkg_product_unit_models.Unit:
    properties:
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      unitcode:
        maxLength: 100
        type: string
      unitname1:
        type: string
      unitname2:
        type: string
      unitname3:
        type: string
      unitname4:
        type: string
      unitname5:
        type: string
    required:
    - names
    - unitcode
    type: object
  smlcloudplatform_pkg_report_reportqueryc_models.ReportParam:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  smlcloudplatform_pkg_report_reportqueryc_models.ReportQuery:
    properties:
      code:
        maxLength: 50
        minLength: 1
        type: string
      isactived:
        type: boolean
      isapproved:
        type: boolean
      params:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportqueryc_models.ReportParam'
        type: array
      sql:
        type: string
    required:
    - code
    type: object
  smlcloudplatform_pkg_report_reportquerym_models.ReportParam:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  smlcloudplatform_pkg_report_reportquerym_models.ReportQuery:
    properties:
      code:
        maxLength: 50
        minLength: 1
        type: string
      collection:
        type: string
      fields:
        items:
          type: string
        type: array
      filter:
        type: string
      isactived:
        type: boolean
      isapproved:
        type: boolean
      params:
        items:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportquerym_models.ReportParam'
        type: array
    required:
    - code
    type: object
  smlcloudplatform_pkg_restaurant_device_models.Device:
    properties:
      code:
        type: string
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
      type:
        type: integer
    required:
    - code
    - names
    type: object
  smlcloudplatform_pkg_shop_employee_models.Contact:
    properties:
      address:
        type: string
      countrycode:
        type: string
      districtcode:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      phonenumber:
        type: string
      provincecode:
        type: string
      subdistrictcode:
        type: string
      zipcode:
        type: string
    type: object
  smlcloudplatform_pkg_storefront_models.Device:
    properties:
      os:
        type: string
      uuid:
        type: string
    type: object
  smlcloudplatform_pkg_warehouse_models.Warehouse:
    properties:
      code:
        type: string
      location:
        items:
          $ref: '#/definitions/models.Location'
        type: array
        uniqueItems: true
      names:
        items:
          $ref: '#/definitions/models.NameX'
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - names
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SML Cloud Platform API
  version: "1.0"
paths:
  /apikeyservice:
    delete:
      consumes:
      - application/json
      description: delete x-api-key
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - XApiKey
    post:
      consumes:
      - application/json
      description: generate x-api-key
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - XApiKey
  /checksms:
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /color:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    post:
      consumes:
      - application/json
      description: Create Color
      parameters:
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.Color'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Color
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
    put:
      consumes:
      - application/json
      description: Update Color
      parameters:
      - description: Color ID
        in: path
        name: id
        required: true
        type: string
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.Color'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/bulk:
    post:
      consumes:
      - application/json
      description: Create Color
      parameters:
      - description: Color
        in: body
        name: Color
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Color'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Color
  /color/pk:
    get:
      consumes:
      - application/json
      description: get Color by code array
      parameters:
      - description: Code Array
        in: body
        name: '[]string'
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /create-shop:
    post:
      consumes:
      - application/json
      description: Create Shop on login
      parameters:
      - description: Add Shop
        in: body
        name: Shop
        required: true
        schema:
          $ref: '#/definitions/models.Shop'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /debtaccount/creditor:
    delete:
      consumes:
      - application/json
      description: Delete Creditor
      parameters:
      - description: Creditor GUIDs
        in: body
        name: Creditor
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: groups guidfixed
        in: query
        name: groups
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
    post:
      consumes:
      - application/json
      description: Create Creditor
      parameters:
      - description: Creditor
        in: body
        name: Creditor
        required: true
        schema:
          $ref: '#/definitions/models.CreditorRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
  /debtaccount/creditor-group:
    delete:
      consumes:
      - application/json
      description: Delete CreditorGroup
      parameters:
      - description: CreditorGroup GUIDs
        in: body
        name: CreditorGroup
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
    post:
      consumes:
      - application/json
      description: Create CreditorGroup
      parameters:
      - description: CreditorGroup
        in: body
        name: CreditorGroup
        required: true
        schema:
          $ref: '#/definitions/models.CreditorGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
  /debtaccount/creditor-group/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CreditorGroup
      parameters:
      - description: CreditorGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: CreditorGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
    put:
      consumes:
      - application/json
      description: Update CreditorGroup
      parameters:
      - description: CreditorGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: CreditorGroup
        in: body
        name: CreditorGroup
        required: true
        schema:
          $ref: '#/definitions/models.CreditorGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
  /debtaccount/creditor-group/bulk:
    post:
      consumes:
      - application/json
      description: Create CreditorGroup
      parameters:
      - description: CreditorGroup
        in: body
        name: CreditorGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CreditorGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
  /debtaccount/creditor-group/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CreditorGroup
  /debtaccount/creditor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Creditor
      parameters:
      - description: Creditor ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Creditor ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
    put:
      consumes:
      - application/json
      description: Update Creditor
      parameters:
      - description: Creditor ID
        in: path
        name: id
        required: true
        type: string
      - description: Creditor
        in: body
        name: Creditor
        required: true
        schema:
          $ref: '#/definitions/models.CreditorRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
  /debtaccount/creditor/bulk:
    post:
      consumes:
      - application/json
      description: Create Creditor
      parameters:
      - description: Creditor
        in: body
        name: Creditor
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CreditorRequest'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
  /debtaccount/creditor/code/{code}:
    get:
      consumes:
      - application/json
      description: Get Creditor by code
      parameters:
      - description: Creditor Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
  /debtaccount/creditor/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: groups guidfixed
        in: query
        name: groups
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Creditor
  /debtaccount/customer:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      parameters:
      - description: Customer GUIDs
        in: body
        name: Customer
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: creditor
        in: query
        name: iscreditor
        type: boolean
      - description: debtor
        in: query
        name: isdebtor
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
  /debtaccount/customer-group:
    delete:
      consumes:
      - application/json
      description: Delete CustomerGroup
      parameters:
      - description: CustomerGroup GUIDs
        in: body
        name: CustomerGroup
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
    post:
      consumes:
      - application/json
      description: Create CustomerGroup
      parameters:
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          $ref: '#/definitions/models.CustomerGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
  /debtaccount/customer-group/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CustomerGroup
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
    put:
      consumes:
      - application/json
      description: Update CustomerGroup
      parameters:
      - description: CustomerGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          $ref: '#/definitions/models.CustomerGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
  /debtaccount/customer-group/bulk:
    post:
      consumes:
      - application/json
      description: Create CustomerGroup
      parameters:
      - description: CustomerGroup
        in: body
        name: CustomerGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CustomerGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
  /debtaccount/customer-group/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - CustomerGroup
  /debtaccount/customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: get info Customer by id
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Update Customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
  /debtaccount/customer/bulk:
    post:
      consumes:
      - application/json
      description: Create Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CustomerRequest'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
  /debtaccount/customer/code/{code}:
    get:
      consumes:
      - application/json
      description: Get Customer By Code
      parameters:
      - description: Customer Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
  /debtaccount/customer/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      - description: creditor
        in: query
        name: iscreditor
        type: boolean
      - description: debtor
        in: query
        name: isdebtor
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Customer
  /debtaccount/debtor:
    delete:
      consumes:
      - application/json
      description: Delete Debtor
      parameters:
      - description: Debtor GUIDs
        in: body
        name: Debtor
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: groups guidfixed
        in: query
        name: groups
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
    post:
      consumes:
      - application/json
      description: Create Debtor
      parameters:
      - description: Debtor
        in: body
        name: Debtor
        required: true
        schema:
          $ref: '#/definitions/models.DebtorRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
  /debtaccount/debtor-group:
    delete:
      consumes:
      - application/json
      description: Delete DebtorGroup
      parameters:
      - description: DebtorGroup GUIDs
        in: body
        name: DebtorGroup
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
    post:
      consumes:
      - application/json
      description: Create DebtorGroup
      parameters:
      - description: DebtorGroup
        in: body
        name: DebtorGroup
        required: true
        schema:
          $ref: '#/definitions/models.DebtorGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
  /debtaccount/debtor-group/{id}:
    delete:
      consumes:
      - application/json
      description: Delete DebtorGroup
      parameters:
      - description: DebtorGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: DebtorGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
    put:
      consumes:
      - application/json
      description: Update DebtorGroup
      parameters:
      - description: DebtorGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: DebtorGroup
        in: body
        name: DebtorGroup
        required: true
        schema:
          $ref: '#/definitions/models.DebtorGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
  /debtaccount/debtor-group/bulk:
    post:
      consumes:
      - application/json
      description: Create DebtorGroup
      parameters:
      - description: DebtorGroup
        in: body
        name: DebtorGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.DebtorGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
  /debtaccount/debtor-group/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DebtorGroup
  /debtaccount/debtor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Debtor
      parameters:
      - description: Debtor ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Debtor ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
    put:
      consumes:
      - application/json
      description: Update Debtor
      parameters:
      - description: Debtor ID
        in: path
        name: id
        required: true
        type: string
      - description: Debtor
        in: body
        name: Debtor
        required: true
        schema:
          $ref: '#/definitions/models.DebtorRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
  /debtaccount/debtor/bulk:
    post:
      consumes:
      - application/json
      description: Create Debtor
      parameters:
      - description: Debtor
        in: body
        name: Debtor
        required: true
        schema:
          items:
            $ref: '#/definitions/models.DebtorRequest'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
  /debtaccount/debtor/code/{code}:
    get:
      consumes:
      - application/json
      description: get debtor by code
      parameters:
      - description: Debtor Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
  /debtaccount/debtor/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: groups guidfixed
        in: query
        name: groups
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Debtor
  /documentimage:
    get:
      consumes:
      - application/json
      description: List Document Image
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Status Value
        in: query
        name: status
        type: integer
      - description: Module Value
        in: query
        name: module
        type: string
      - description: Doc GUID Ref Value
        in: query
        name: docguidref
        type: string
      - description: Document Ref Value
        in: query
        name: documentref
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImagePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Image
      tags:
      - DocumentImage
    post:
      consumes:
      - application/json
      description: Create Document Image
      parameters:
      - description: DocumentImage
        in: body
        name: DocumentImage
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image
      tags:
      - DocumentImage
  /documentimage/{guid}:
    get:
      consumes:
      - application/json
      description: Get Document Image Infomation
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImageInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Get Document Image Infomation
      tags:
      - DocumentImage
  /documentimage/{guid}/comment:
    put:
      consumes:
      - application/json
      description: Create Document Image Comment
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      - description: CommentRequest
        in: body
        name: CommentRequest
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image Comment
      tags:
      - DocumentImage
  /documentimage/{guid}/imageedit:
    put:
      consumes:
      - application/json
      description: Create Document Image Edit
      parameters:
      - description: document image guid
        in: path
        name: guid
        required: true
        type: string
      - description: ImageEditRequest
        in: body
        name: ImageEditRequest
        required: true
        schema:
          $ref: '#/definitions/models.ImageEditRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image Edit
      tags:
      - DocumentImage
  /documentimage/bulk:
    post:
      consumes:
      - application/json
      description: Create Document Image
      parameters:
      - description: DocumentImage
        in: body
        name: DocumentImage
        required: true
        schema:
          items:
            $ref: '#/definitions/models.DocumentImage'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Create Document Image
      tags:
      - DocumentImage
  /documentimage/upload:
    post:
      consumes:
      - application/json
      description: Upload Document Image
      parameters:
      - description: Module
        in: query
        name: module
        required: true
        type: string
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DocumentImageInfoResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImage
  /documentimagegroup:
    delete:
      consumes:
      - application/json
      description: Delete Many Document Image Group
      parameters:
      - description: document image group guids
        in: body
        name: guids
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Delete Many Document Image Group
      tags:
      - DocumentImageGroup
    get:
      consumes:
      - application/json
      - application/json
      description: Get Document Image Group
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      - description: Filter Path Job
        in: query
        name: pathtask
        type: string
      - description: Filter by Job guidfixed
        in: query
        name: taskguid
        type: string
      - description: เอกสารที่มีการจอง,0 not filter, 1 filter
        in: query
        name: reserve
        type: integer
      - description: ex. status=0 status=1,2,3
        in: query
        name: status
        type: integer
      - description: 'document reference: empty not filter, 1 not reference, 2 referenced'
        in: query
        name: ref
        type: integer
      - description: From Date (YYYY-MM-DD)
        in: query
        name: fromdate
        type: string
      - description: To Date (YYYY-MM-DD)
        in: query
        name: todate
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
      - Restaurant
    post:
      consumes:
      - application/json
      description: Save Document Image Group
      parameters:
      - description: Document Image Group
        in: body
        name: DocumentImageGroup
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImageGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}:
    delete:
      consumes:
      - application/json
      description: Delete Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Delete Document Image Group
      tags:
      - DocumentImageGroup
    get:
      consumes:
      - application/json
      description: Get Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
    put:
      consumes:
      - application/json
      description: Update Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      - description: Document Image Group
        in: body
        name: DocumentImageGroup
        required: true
        schema:
          $ref: '#/definitions/models.DocumentImageGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/documentimages:
    put:
      consumes:
      - application/json
      description: Update Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      - description: Image Reference
        in: body
        name: ImageReferenceBody
        required: true
        schema:
          $ref: '#/definitions/models.ImageReferenceBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/reference:
    put:
      consumes:
      - application/json
      description: Update Reference In Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      - description: Reference
        in: body
        name: Reference
        required: true
        schema:
          $ref: '#/definitions/models.Reference'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/status:
    put:
      consumes:
      - application/json
      description: Update Status Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      - description: status
        in: body
        name: models.Status
        required: true
        schema:
          $ref: '#/definitions/models.Status'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/tags:
    put:
      consumes:
      - application/json
      description: Update Status Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      - description: tags
        in: body
        name: '[]string'
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/{guid}/ungroup:
    put:
      consumes:
      - application/json
      description: Ungroup Document Image Group
      parameters:
      - description: document image group guid
        in: path
        name: guid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/docref/{docref}:
    get:
      consumes:
      - application/json
      description: Get Document Image Group By document reference Infomation
      parameters:
      - description: document reference
        in: path
        name: docref
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DocumentImageInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Get Document Image Group By document reference Infomation
      tags:
      - DocumentImageGroup
  /documentimagegroup/task/{taskguid}/recount:
    put:
      consumes:
      - application/json
      description: ReCount Status Document Image Group By Task
      parameters:
      - description: task guid
        in: path
        name: taskguid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/task/{taskguid}/status:
    put:
      consumes:
      - application/json
      description: Update Status Document Image Group By Task
      parameters:
      - description: task guid
        in: path
        name: taskguid
        required: true
        type: string
      - description: status
        in: body
        name: models.Status
        required: true
        schema:
          $ref: '#/definitions/models.Status'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /documentimagegroup/xsort/{taskguid}:
    put:
      consumes:
      - application/json
      description: Update XSort Document Image Group
      parameters:
      - description: XSort
        in: body
        name: XSort
        required: true
        schema:
          items:
            $ref: '#/definitions/models.XSortDocumentImageGroupRequest'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - DocumentImageGroup
  /e-order/category:
    get:
      consumes:
      - application/json
      description: List Product Category
      parameters:
      - description: Shop ID
        in: query
        name: shopid
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - E-Order
  /e-order/product:
    get:
      consumes:
      - application/json
      description: List Product
      parameters:
      - description: Shop ID
        in: query
        name: shopid
        type: string
      - description: is A La Carte
        in: query
        name: isalacarte
        type: string
      - description: order types ex. a01,a02
        in: query
        name: ordertypes
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - E-Order
  /e-order/product-barcode:
    get:
      consumes:
      - application/json
      description: List Product By Barcodes
      parameters:
      - description: Shop ID
        in: query
        name: shopid
        type: string
      - description: barcode json array
        in: query
        name: barcodes
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - E-Order
  /employee/password:
    put:
      consumes:
      - application/json
      description: Update Password Employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: Register Employee
        in: body
        name: Employee
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestPassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: Update Password Employee
      tags:
      - Employee
  /favorite-shop:
    put:
      consumes:
      - application/json
      description: Favorite Shop In Account
      parameters:
      - description: Shop Favorite Request
        in: body
        name: ShopFavoriteRequest
        required: true
        schema:
          $ref: '#/definitions/authentication.ShopFavoriteRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /gl/accountgroup:
    get:
      consumes:
      - application/json
      description: แสดงรายการกลุ่มบัญชี
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountGroupPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการกลุ่มบัญชี
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างกลุ่มบัญชี
      parameters:
      - description: กลุ่มบัญชี
        in: body
        name: AccountGroup
        required: true
        schema:
          $ref: '#/definitions/models.AccountGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างกลุ่มบัญชี
      tags:
      - GL
  /gl/accountgroup/{id}:
    delete:
      consumes:
      - application/json
      description: ลบกลุ่มบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบกลุ่มบัญชี
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดกลุ่มบัญชี
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountGroupInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดกลุ่มบัญชี
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขกลุ่มบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: กลุ่มบัญชี
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.AccountGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขกลุ่มบัญชี
      tags:
      - GL
  /gl/accountgroup/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้ากลุ่มบัญชี
      parameters:
      - description: กลุ่มบัญชี
        in: body
        name: AccountGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.AccountGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้ากลุ่มบัญชี
      tags:
      - GL
  /gl/accountperiodmaster:
    delete:
      consumes:
      - application/json
      description: Delete AccountPeriodMaster
      parameters:
      - description: AccountPeriodMaster GUIDs
        in: body
        name: AccountPeriodMaster
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
    post:
      consumes:
      - application/json
      description: Create AccountPeriodMaster
      parameters:
      - description: AccountPeriodMaster
        in: body
        name: AccountPeriodMaster
        required: true
        schema:
          $ref: '#/definitions/models.AccountPeriodMaster'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
  /gl/accountperiodmaster/{id}:
    delete:
      consumes:
      - application/json
      description: Delete AccountPeriodMaster
      parameters:
      - description: AccountPeriodMaster ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: AccountPeriodMaster ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
    put:
      consumes:
      - application/json
      description: Update AccountPeriodMaster
      parameters:
      - description: AccountPeriodMaster ID
        in: path
        name: id
        required: true
        type: string
      - description: AccountPeriodMaster
        in: body
        name: AccountPeriodMaster
        required: true
        schema:
          $ref: '#/definitions/models.AccountPeriodMaster'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
  /gl/accountperiodmaster/bulk:
    post:
      consumes:
      - application/json
      description: Bulk Create AccountPeriodMaster
      parameters:
      - description: Array AccountPeriodMaster
        in: body
        name: AccountPeriodMaster
        required: true
        schema:
          items:
            $ref: '#/definitions/models.AccountPeriodMaster'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
  /gl/accountperiodmaster/by-date:
    get:
      consumes:
      - application/json
      description: Get AccountPeriodMaster by date
      parameters:
      - description: date-list
        in: query
        name: date-list
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
  /gl/accountperiodmaster/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - AccountPeriodMaster
  /gl/chartofaccount:
    get:
      consumes:
      - application/json
      description: แสดงรายการผังบัญชี
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChartOfAccountPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการผังบัญชี
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างผังบัญชี
      parameters:
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          $ref: '#/definitions/models.ChartOfAccount'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างผังบัญชี
      tags:
      - GL
  /gl/chartofaccount/{id}:
    delete:
      consumes:
      - application/json
      description: ลบผังบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบผังบัญชี
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดผังบัญชี
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChartOfAccountInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดผังบัญชี
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขผังบัญชี
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          $ref: '#/definitions/models.ChartOfAccount'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขผังบัญชี
      tags:
      - GL
  /gl/chartofaccount/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าผังบัญชี
      parameters:
      - description: ChartOfAccount
        in: body
        name: ChartOfAccount
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ChartOfAccount'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าผังบัญชี
      tags:
      - GL
  /gl/journal:
    get:
      consumes:
      - application/json
      description: แสดงรายการข้อมูลรายวัน
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: DocNo
        in: query
        name: docno
        type: string
      - description: DocDate ex. 2020-01-01
        in: query
        name: docdate
        type: string
      - description: Account Year
        in: query
        name: accountyear
        type: integer
      - description: Account Period
        in: query
        name: accountperiod
        type: integer
      - description: Account Description
        in: query
        name: accountdescription
        type: integer
      - description: Amount
        in: query
        name: amount
        type: integer
      - description: Created By
        in: query
        name: createdby
        type: string
      - description: Create Date ex. 2020-01-01
        in: query
        name: createdat
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการข้อมูลรายวัน
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: บันทึกข้อมูลรายวัน
      parameters:
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.Journal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: บันทึกข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/{id}:
    delete:
      consumes:
      - application/json
      description: ลบข้อมูลรายวัน
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบข้อมูลรายวัน
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      parameters:
      - description: Journal Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขข้อมูลรายวัน
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.Journal'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/batchid/{batchid}:
    delete:
      consumes:
      - application/json
      description: ลบข้อมูลรายวัน By Batch ID
      parameters:
      - description: Journal Batch ID
        in: path
        name: batchid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบข้อมูลรายวัน By Batch ID
      tags:
      - GL
  /gl/journal/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าข้อมูลรายวัน
      parameters:
      - description: ข้อมูลรายวัน
        in: body
        name: Journal
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Journal'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/docno/{docno}:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      parameters:
      - description: Journal DocNo
        in: path
        name: docno
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
  /gl/journal/docref/{doc}:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง
      parameters:
      - description: Document Ref
        in: path
        name: doc
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน ตามเอกสารอ้างอิง
      tags:
      - GL
  /gl/journal/docref/deselect:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      parameters:
      - description: JournalRef body
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.JournalRef'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/docref/next:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/docref/select:
    post:
      consumes:
      - application/json
      description: For List Document Ref selected
      parameters:
      - description: JournalRef body
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.JournalRef'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /gl/journal/last-docno:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดข้อมูลรายวัน
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดข้อมูลรายวัน
      tags:
      - GL
  /gl/journalbook:
    get:
      consumes:
      - application/json
      description: แสดงรายการสมุดรายวัน
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalBookPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการสมุดรายวัน
      tags:
      - GL
    post:
      consumes:
      - application/json
      description: สร้างสมุดรายวัน
      parameters:
      - description: สมุดรายวัน
        in: body
        name: JournalBook
        required: true
        schema:
          $ref: '#/definitions/models.JournalBook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้างสมุดรายวัน
      tags:
      - GL
  /gl/journalbook/{id}:
    delete:
      consumes:
      - application/json
      description: ลบสมุดรายวัน
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบสมุดรายวัน
      tags:
      - GL
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียดสมุดรายวัน
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalBookInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียดสมุดรายวัน
      tags:
      - GL
    put:
      consumes:
      - application/json
      description: แก้ไขสมุดรายวัน
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: สมุดรายวัน
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.JournalBook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไขสมุดรายวัน
      tags:
      - GL
  /gl/journalbook/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าสมุดรายวัน
      parameters:
      - description: สมุดรายวัน
        in: body
        name: JournalBook
        required: true
        schema:
          items:
            $ref: '#/definitions/models.JournalBook'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าสมุดรายวัน
      tags:
      - GL
  /gl/report/balancesheet:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบดุล
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'ณ วันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบดุล
      tags:
      - GLReport
  /gl/report/ledgeraccount:
    get:
      consumes:
      - application/json
      description: บัญชีแยกประเภท
      parameters:
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: Account Code
        in: query
        name: accountcode
        required: true
        type: string
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrialBalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: บัญชีแยกประเภท
      tags:
      - GLReport
  /gl/report/profitandloss:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบกำไรขาดทุน
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LostAndProfitSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบกำไรขาดทุน
      tags:
      - GLReport
  /gl/report/trialbalancesheet:
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลงบทดลอง
      parameters:
      - description: กลุ่มบัญชี
        in: query
        name: accountgroup
        required: true
        type: string
      - description: 'จากวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: startdate
        required: true
        type: string
      - description: 'ถึงวันที่ (Date Format: YYYY-MM-DD)'
        in: query
        name: enddate
        required: true
        type: string
      - description: รวมรายการปิดปัญชี
        in: query
        name: ica
        required: true
        type: integer
      - description: TimeZone
        in: query
        name: timezone
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrialBalanceSheetReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ดึงข้อมูลงบทดลอง
      tags:
      - GLReport
  /import/category:
    delete:
      consumes:
      - application/json
      description: Delete Category
      parameters:
      - description: Category Import ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryImportPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Catagory Import
      parameters:
      - description: Catagory
        in: body
        name: Catagory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.CategoryImport'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /import/inventory:
    delete:
      consumes:
      - application/json
      description: Delete Inventory
      parameters:
      - description: Inventory Import ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InventoryPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Inventory Import
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Inventory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /import/option:
    delete:
      consumes:
      - application/json
      description: Delete Option
      parameters:
      - description: Option ID
        in: body
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    get:
      consumes:
      - application/json
      description: List Inventory Option
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
    post:
      consumes:
      - application/json
      description: Create Inventory Option
      parameters:
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          items:
            $ref: '#/definitions/models.InventoryOptionMainImport'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Import
  /inventory:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InventoryPageResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Inventory
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Inventory
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/barcode/{barcode}:
    get:
      consumes:
      - application/json
      description: get struct array by barcode
      parameters:
      - description: Barcode
        in: path
        name: barcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/bulk:
    post:
      consumes:
      - application/json
      description: Create Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Inventory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.InventoryBulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/categoryupdate/{catid}:
    post:
      consumes:
      - application/json
      description: Update Inventory Category List
      parameters:
      - description: Category GUID
        in: path
        name: catid
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/fetchupdate:
    get:
      consumes:
      - application/json
      description: Fetch Update Inventory By Date
      parameters:
      - description: DateTime YYYY-MM-DDTHH:mm
        in: query
        name: lastUpdate
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryFetchUpdateResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/itemcode/{itemcode}:
    get:
      consumes:
      - application/json
      description: get struct array by Item Code
      parameters:
      - description: Inventory Item Code
        in: path
        name: itemcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Inventory
      parameters:
      - description: Inventory Item Code
        in: path
        name: itemcode
        required: true
        type: string
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /inventory/save:
    post:
      consumes:
      - application/json
      description: Save Inventory
      parameters:
      - description: Inventory
        in: body
        name: Inventory
        required: true
        schema:
          $ref: '#/definitions/models.Inventory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /list-shop:
    get:
      consumes:
      - application/json
      description: List Merchant In My Account
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopUserInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: User Account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - Authentication
  /logout:
    post:
      consumes:
      - application/json
      description: Logout Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /master-sync:
    get:
      description: Master Sync
      parameters:
      - description: 'last update date ex: 2020-01-01T00:00:00'
        in: query
        name: lastupdate
        type: string
      - description: 'module code ex: product,productcategory,productbarcode'
        in: query
        name: module
        type: string
      - description: action code (all, new, remove)
        in: query
        name: action
        type: string
      - description: filter data ex. filter=branch:1,department:x01
        in: query
        name: filter
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - MasterSync
  /master-sync/list:
    get:
      description: Master Sync Offset
      parameters:
      - description: 'last update date ex: 2020-01-01T00:00:00'
        in: query
        name: lastupdate
        type: string
      - description: 'module code ex: product,productcategory,productbarcode'
        in: query
        name: module
        type: string
      - description: action code (all, new, remove)
        in: query
        name: action
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - MasterSync
  /master-sync/status:
    get:
      description: Master Sync Status
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - MasterSync
  /member:
    get:
      consumes:
      - application/json
      description: List Member Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MemberPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    post:
      consumes:
      - application/json
      description: Create Member
      parameters:
      - description: Member
        in: body
        name: Member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
  /member/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Member
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    get:
      consumes:
      - application/json
      description: Get Member
      parameters:
      - description: Member Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MemberInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
    put:
      consumes:
      - application/json
      description: Update Member
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: string
      - description: Member
        in: body
        name: Member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Member
  /optgroup:
    get:
      consumes:
      - application/json
      description: List Inventory Option Group
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory Option Group
      parameters:
      - description: Option Group
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /optgroup/{id}:
    delete:
      consumes:
      - application/json
      description: Delete OptionGroup
      parameters:
      - description: OptionGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: Get Option Group Information
      parameters:
      - description: OptionGroup Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Option Group
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      - description: Option Group
        in: body
        name: OptionGroup
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionGroup'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /option:
    get:
      consumes:
      - application/json
      description: List Inventory Option
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      description: Create Inventory Option
      parameters:
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionMain'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /option/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Option
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: Get Inventory Option
      parameters:
      - description: Option Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryOptionMainInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update Option
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: string
      - description: Option
        in: body
        name: Option
        required: true
        schema:
          $ref: '#/definitions/models.InventoryOptionMain'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Inventory
  /option/by-code:
    get:
      consumes:
      - application/json
      description: get Inventory Option by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /optionpattern:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    post:
      consumes:
      - application/json
      description: Create OptionPattern
      parameters:
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          $ref: '#/definitions/models.OptionPattern'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /optionpattern/{id}:
    delete:
      consumes:
      - application/json
      description: Delete OptionPattern
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
    put:
      consumes:
      - application/json
      description: Update OptionPattern
      parameters:
      - description: OptionPattern ID
        in: path
        name: id
        required: true
        type: string
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          $ref: '#/definitions/models.OptionPattern'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /optionpattern/bulk:
    post:
      consumes:
      - application/json
      description: Create OptionPattern
      parameters:
      - description: OptionPattern
        in: body
        name: OptionPattern
        required: true
        schema:
          items:
            $ref: '#/definitions/models.OptionPattern'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OptionPattern
  /organization/branch:
    delete:
      consumes:
      - application/json
      description: Delete Branch
      parameters:
      - description: Branch GUIDs
        in: body
        name: Branch
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    post:
      consumes:
      - application/json
      description: Create Branch
      parameters:
      - description: Branch
        in: body
        name: Branch
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /organization/branch/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: get Branch info by guidfixed
      parameters:
      - description: Branch guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    put:
      consumes:
      - application/json
      description: Update Branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      - description: Branch
        in: body
        name: Branch
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /organization/branch/bulk:
    post:
      consumes:
      - application/json
      description: Create Branch
      parameters:
      - description: Branch
        in: body
        name: Branch
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Branch'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /organization/branch/code/{code}:
    get:
      consumes:
      - application/json
      description: get Branch info by Code
      parameters:
      - description: Branch Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /organization/branch/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /organization/business-type:
    delete:
      consumes:
      - application/json
      description: Delete BusinessType
      parameters:
      - description: BusinessType GUIDs
        in: body
        name: BusinessType
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
    post:
      consumes:
      - application/json
      description: Create BusinessType
      parameters:
      - description: BusinessType
        in: body
        name: BusinessType
        required: true
        schema:
          $ref: '#/definitions/models.BusinessType'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
  /organization/business-type/{id}:
    delete:
      consumes:
      - application/json
      description: Delete BusinessType
      parameters:
      - description: BusinessType ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
    get:
      consumes:
      - application/json
      description: get BusinessType info by guidfixed
      parameters:
      - description: BusinessType guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
    put:
      consumes:
      - application/json
      description: Update BusinessType
      parameters:
      - description: BusinessType ID
        in: path
        name: id
        required: true
        type: string
      - description: BusinessType
        in: body
        name: BusinessType
        required: true
        schema:
          $ref: '#/definitions/models.BusinessType'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
  /organization/business-type/bulk:
    post:
      consumes:
      - application/json
      description: Create BusinessType
      parameters:
      - description: BusinessType
        in: body
        name: BusinessType
        required: true
        schema:
          items:
            $ref: '#/definitions/models.BusinessType'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
  /organization/business-type/code/{code}:
    get:
      consumes:
      - application/json
      description: get BusinessType info by Code
      parameters:
      - description: BusinessType Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
  /organization/business-type/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BusinessType
  /organization/department:
    delete:
      consumes:
      - application/json
      description: Delete Department
      parameters:
      - description: Department GUIDs
        in: body
        name: Department
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
    post:
      consumes:
      - application/json
      description: Create Department
      parameters:
      - description: Department
        in: body
        name: Department
        required: true
        schema:
          $ref: '#/definitions/models.Department'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
  /organization/department/{departmentCode}/branch/{branchCode}:
    get:
      consumes:
      - application/json
      description: get Department info by Code
      parameters:
      - description: Department Code
        in: path
        name: departmentCode
        required: true
        type: string
      - description: Branch Code
        in: path
        name: branchCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
  /organization/department/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Department
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
    get:
      consumes:
      - application/json
      description: get Department info by guidfixed
      parameters:
      - description: Department guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
    put:
      consumes:
      - application/json
      description: Update Department
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: string
      - description: Department
        in: body
        name: Department
        required: true
        schema:
          $ref: '#/definitions/models.Department'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
  /organization/department/bulk:
    post:
      consumes:
      - application/json
      description: Create Department
      parameters:
      - description: Department
        in: body
        name: Department
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Department'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
  /organization/department/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Department
  /payment/bankmaster:
    delete:
      consumes:
      - application/json
      description: Delete BankMaster
      parameters:
      - description: BankMaster GUIDs
        in: body
        name: BankMaster
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
    post:
      consumes:
      - application/json
      description: Create BankMaster
      parameters:
      - description: BankMaster
        in: body
        name: BankMaster
        required: true
        schema:
          $ref: '#/definitions/models.BankMaster'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
  /payment/bankmaster/{id}:
    delete:
      consumes:
      - application/json
      description: Delete BankMaster
      parameters:
      - description: BankMaster ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: BankMaster ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
    put:
      consumes:
      - application/json
      description: Update BankMaster
      parameters:
      - description: BankMaster ID
        in: path
        name: id
        required: true
        type: string
      - description: BankMaster
        in: body
        name: BankMaster
        required: true
        schema:
          $ref: '#/definitions/models.BankMaster'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
  /payment/bankmaster/bulk:
    post:
      consumes:
      - application/json
      description: Create BankMaster
      parameters:
      - description: BankMaster
        in: body
        name: BankMaster
        required: true
        schema:
          items:
            $ref: '#/definitions/models.BankMaster'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
  /payment/bankmaster/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BankMaster
  /payment/bookbank:
    delete:
      consumes:
      - application/json
      description: Delete BookBank
      parameters:
      - description: BookBank GUIDs
        in: body
        name: BookBank
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
    post:
      consumes:
      - application/json
      description: Create BookBank
      parameters:
      - description: BookBank
        in: body
        name: BookBank
        required: true
        schema:
          $ref: '#/definitions/models.BookBank'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
  /payment/bookbank/{id}:
    delete:
      consumes:
      - application/json
      description: Delete BookBank
      parameters:
      - description: BookBank ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: BookBank ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
    put:
      consumes:
      - application/json
      description: Update BookBank
      parameters:
      - description: BookBank ID
        in: path
        name: id
        required: true
        type: string
      - description: BookBank
        in: body
        name: BookBank
        required: true
        schema:
          $ref: '#/definitions/models.BookBank'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
  /payment/bookbank/bulk:
    post:
      consumes:
      - application/json
      description: Create BookBank
      parameters:
      - description: BookBank
        in: body
        name: BookBank
        required: true
        schema:
          items:
            $ref: '#/definitions/models.BookBank'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
  /payment/bookbank/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - BookBank
  /payment/qrpayment:
    delete:
      consumes:
      - application/json
      description: Delete QrPayment
      parameters:
      - description: QrPayment GUIDs
        in: body
        name: QrPayment
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
    post:
      consumes:
      - application/json
      description: Create QrPayment
      parameters:
      - description: QrPayment
        in: body
        name: QrPayment
        required: true
        schema:
          $ref: '#/definitions/models.QrPayment'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
  /payment/qrpayment/{id}:
    delete:
      consumes:
      - application/json
      description: Delete QrPayment
      parameters:
      - description: QrPayment ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: QrPayment ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
    put:
      consumes:
      - application/json
      description: Update QrPayment
      parameters:
      - description: QrPayment ID
        in: path
        name: id
        required: true
        type: string
      - description: QrPayment
        in: body
        name: QrPayment
        required: true
        schema:
          $ref: '#/definitions/models.QrPayment'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
  /payment/qrpayment/bulk:
    post:
      consumes:
      - application/json
      description: Create QrPayment
      parameters:
      - description: QrPayment
        in: body
        name: QrPayment
        required: true
        schema:
          items:
            $ref: '#/definitions/models.QrPayment'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
  /payment/qrpayment/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - QrPayment
  /paymentmaster:
    get:
      consumes:
      - application/json
      description: แสดงรายการ payment master
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentMasterPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายการ payment master
      tags:
      - PaymentMaster
    post:
      consumes:
      - application/json
      description: สร้าง payment master
      parameters:
      - description: paymentmaster
        in: body
        name: PaymentMaster
        required: true
        schema:
          $ref: '#/definitions/models.PaymentMaster'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: สร้าง payment master
      tags:
      - PaymentMaster
  /paymentmaster-type:
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียด payment master type
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียด payment master type
      tags:
      - PaymentMaster
  /paymentmaster/{id}:
    delete:
      consumes:
      - application/json
      description: ลบ payment master
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: ลบ payment master
      tags:
      - PaymentMaster
    get:
      consumes:
      - application/json
      description: แสดงรายละเอียด payment master
      parameters:
      - description: Journal Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentMasterInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แสดงรายละเอียด payment master
      tags:
      - PaymentMaster
    put:
      consumes:
      - application/json
      description: แก้ไข payment master
      parameters:
      - description: Payment Master ID
        in: path
        name: id
        required: true
        type: string
      - description: paymentmaster
        in: body
        name: PaymentMaster
        required: true
        schema:
          $ref: '#/definitions/models.PaymentMaster'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: แก้ไข payment master
      tags:
      - PaymentMaster
  /paymentmaster/bulk:
    post:
      consumes:
      - application/json
      description: นำเข้าข้อมูล payment master
      parameters:
      - description: paymentmaster
        in: body
        name: Journal
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Journal'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: นำเข้าข้อมูล payment master
      tags:
      - PaymentMaster
  /pos/setting:
    delete:
      consumes:
      - application/json
      description: Delete Setting
      parameters:
      - description: Setting GUIDs
        in: body
        name: Setting
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
    post:
      consumes:
      - application/json
      description: Create Setting
      parameters:
      - description: Setting
        in: body
        name: Setting
        required: true
        schema:
          $ref: '#/definitions/models.Setting'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
  /pos/setting/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Setting
      parameters:
      - description: Setting ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
    get:
      consumes:
      - application/json
      description: get Setting info by guidfixed
      parameters:
      - description: Setting guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
    put:
      consumes:
      - application/json
      description: Update Setting
      parameters:
      - description: Setting ID
        in: path
        name: id
        required: true
        type: string
      - description: Setting
        in: body
        name: Setting
        required: true
        schema:
          $ref: '#/definitions/models.Setting'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
  /pos/setting/bulk:
    post:
      consumes:
      - application/json
      description: Create Setting
      parameters:
      - description: Setting
        in: body
        name: Setting
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Setting'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
  /pos/setting/code/{code}:
    get:
      consumes:
      - application/json
      description: get Setting info by Code
      parameters:
      - description: Setting Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
  /pos/setting/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Setting
  /product:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product GUIDs
        in: body
        name: Product
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: category guid
        in: query
        name: category
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product-section/branch:
    delete:
      consumes:
      - application/json
      description: Delete SectionBranch
      parameters:
      - description: SectionBranch GUIDs
        in: body
        name: SectionBranch
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
    put:
      consumes:
      - application/json
      description: Save SectionBranch
      parameters:
      - description: SectionBranch
        in: body
        name: SectionBranch
        required: true
        schema:
          $ref: '#/definitions/models.SectionBranch'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
  /product-section/branch/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SectionBranch
      parameters:
      - description: SectionBranch ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
    get:
      consumes:
      - application/json
      description: get SectionBranch info by guidfixed
      parameters:
      - description: SectionBranch guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
  /product-section/branch/bulk:
    post:
      consumes:
      - application/json
      description: Create SectionBranch
      parameters:
      - description: SectionBranch
        in: body
        name: SectionBranch
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SectionBranch'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
  /product-section/branch/code/{code}:
    get:
      consumes:
      - application/json
      description: get SectionBranch info by Code
      parameters:
      - description: SectionBranch Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
  /product-section/branch/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBranch
  /product-section/business-type:
    delete:
      consumes:
      - application/json
      description: Delete SectionBusinessType
      parameters:
      - description: SectionBusinessType GUIDs
        in: body
        name: SectionBusinessType
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
    put:
      consumes:
      - application/json
      description: Save SectionBusinessType
      parameters:
      - description: SectionBusinessType
        in: body
        name: SectionBusinessType
        required: true
        schema:
          $ref: '#/definitions/models.SectionBusinessType'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
  /product-section/business-type/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SectionBusinessType
      parameters:
      - description: SectionBusinessType ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
    get:
      consumes:
      - application/json
      description: get SectionBusinessType info by guidfixed
      parameters:
      - description: SectionBusinessType guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
  /product-section/business-type/bulk:
    post:
      consumes:
      - application/json
      description: Create SectionBusinessType
      parameters:
      - description: SectionBusinessType
        in: body
        name: SectionBusinessType
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SectionBusinessType'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
  /product-section/business-type/code/{code}:
    get:
      consumes:
      - application/json
      description: get SectionBusinessType info by Code
      parameters:
      - description: SectionBusinessType Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
  /product-section/business-type/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionBusinessType
  /product-section/department:
    delete:
      consumes:
      - application/json
      description: Delete SectionDepartment
      parameters:
      - description: SectionDepartment GUIDs
        in: body
        name: SectionDepartment
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
    put:
      consumes:
      - application/json
      description: Save SectionDepartment
      parameters:
      - description: SectionDepartment ID
        in: path
        name: id
        required: true
        type: string
      - description: SectionDepartment
        in: body
        name: SectionDepartment
        required: true
        schema:
          $ref: '#/definitions/models.SectionDepartment'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
  /product-section/department/{departmentCode}/branch/{branchCode}:
    get:
      consumes:
      - application/json
      description: get SectionDepartment info by Code
      parameters:
      - description: SectionDepartment Code
        in: path
        name: departmentCode
        required: true
        type: string
      - description: Branch Code
        in: path
        name: branchCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
  /product-section/department/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SectionDepartment
      parameters:
      - description: SectionDepartment ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
    get:
      consumes:
      - application/json
      description: get SectionDepartment info by guidfixed
      parameters:
      - description: SectionDepartment guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
  /product-section/department/bulk:
    post:
      consumes:
      - application/json
      description: Create SectionDepartment
      parameters:
      - description: SectionDepartment
        in: body
        name: SectionDepartment
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SectionDepartment'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
  /product-section/department/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SectionDepartment
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/barcode:
    delete:
      consumes:
      - application/json
      description: Delete ProductBarcode
      parameters:
      - description: ProductBarcode GUIDs
        in: body
        name: ProductBarcode
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: is A La Carte
        in: query
        name: isalacarte
        type: string
      - description: order types ex. a01,a02
        in: query
        name: ordertypes
        type: string
      - description: item type
        in: query
        name: itemtype
        type: integer
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    post:
      consumes:
      - application/json
      description: Create ProductBarcode
      parameters:
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          $ref: '#/definitions/models.ProductBarcodeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ProductBarcode
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
    put:
      consumes:
      - application/json
      description: Update ProductBarcode
      parameters:
      - description: ProductBarcode ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          $ref: '#/definitions/models.ProductBarcodeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/bulk:
    post:
      consumes:
      - application/json
      description: Create ProductBarcode
      parameters:
      - description: ProductBarcode
        in: body
        name: ProductBarcode
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductBarcode'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/by-code:
    get:
      consumes:
      - application/json
      description: get ProductBarcode by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/groups:
    get:
      consumes:
      - application/json
      description: get by group codes
      parameters:
      - description: array of group
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: is A La Carte
        in: query
        name: isalacarte
        type: string
      - description: order types ex. a01,a02
        in: query
        name: ordertypes
        type: string
      - description: item type
        in: query
        name: itemtype
        type: integer
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/master:
    get:
      consumes:
      - application/json
      description: get master ProductBarcode by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/pk/{barcode}:
    get:
      consumes:
      - application/json
      description: get data by barcode
      parameters:
      - description: Barcode
        in: path
        name: barcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/ref/{barcode}:
    get:
      consumes:
      - application/json
      description: get by reference barcode
      parameters:
      - description: Reference Barcode
        in: path
        name: barcode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/units:
    get:
      consumes:
      - application/json
      description: get by reference barcode
      parameters:
      - description: array of units
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode/xsort:
    put:
      consumes:
      - application/json
      description: Update XSort ProductBarcode
      parameters:
      - description: XSort
        in: body
        name: XSort
        required: true
        schema:
          items:
            $ref: '#/definitions/models.XSortModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode
  /product/barcode2:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductBarcode2
  /product/bulk:
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Product'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/by-barcode:
    get:
      consumes:
      - application/json
      description: get product by barcode
      parameters:
      - description: barcode number
        in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/by-code:
    get:
      consumes:
      - application/json
      description: get Product by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /product/category:
    delete:
      consumes:
      - application/json
      description: Delete ProductCategory
      parameters:
      - description: ProductCategory GUIDs
        in: body
        name: ProductCategory
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    post:
      consumes:
      - application/json
      description: Create ProductCategory
      parameters:
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductCategory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ProductCategory
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
    put:
      consumes:
      - application/json
      description: Update ProductCategory
      parameters:
      - description: ProductCategory ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductCategory'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/barcodes:
    put:
      consumes:
      - application/json
      description: Update Barcodes Category
      parameters:
      - description: Barcodes
        in: body
        name: Barcodes
        required: true
        schema:
          items:
            $ref: '#/definitions/models.BarcodesModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/bulk:
    post:
      consumes:
      - application/json
      description: Create ProductCategory
      parameters:
      - description: ProductCategory
        in: body
        name: ProductCategory
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductCategory'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/category/xsort:
    put:
      consumes:
      - application/json
      description: Update XSort Category
      parameters:
      - description: XSort
        in: body
        name: XSort
        required: true
        schema:
          items:
            $ref: '#/definitions/models.XSortModifyReqesut'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductCategory
  /product/group:
    delete:
      consumes:
      - application/json
      description: Delete ProductGroup
      parameters:
      - description: ProductGroup GUIDs
        in: body
        name: ProductGroup
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
    post:
      consumes:
      - application/json
      description: Create ProductGroup
      parameters:
      - description: ProductGroup
        in: body
        name: ProductGroup
        required: true
        schema:
          $ref: '#/definitions/models.ProductGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
  /product/group/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ProductGroup
      parameters:
      - description: ProductGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: ProductGroup ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
    put:
      consumes:
      - application/json
      description: Update ProductGroup
      parameters:
      - description: ProductGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductGroup
        in: body
        name: ProductGroup
        required: true
        schema:
          $ref: '#/definitions/models.ProductGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
  /product/group/bulk:
    post:
      consumes:
      - application/json
      description: Create ProductGroup
      parameters:
      - description: ProductGroup
        in: body
        name: ProductGroup
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductGroup'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
  /product/group/by-code:
    get:
      consumes:
      - application/json
      description: get Product Group by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /product/group/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
  /product/group/save:
    post:
      consumes:
      - application/json
      description: Save ProductGroup
      parameters:
      - description: ProductGroup
        in: body
        name: ProductGroup
        required: true
        schema:
          $ref: '#/definitions/models.ProductGroup'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ProductGroup
  /product/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      - description: category guid
        in: query
        name: category
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/master/{code}:
    get:
      consumes:
      - application/json
      description: get master Product by code
      parameters:
      - description: Code
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /product/order-type:
    delete:
      consumes:
      - application/json
      description: Delete OrderType
      parameters:
      - description: OrderType GUIDs
        in: body
        name: OrderType
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
    post:
      consumes:
      - application/json
      description: Create OrderType
      parameters:
      - description: OrderType
        in: body
        name: OrderType
        required: true
        schema:
          $ref: '#/definitions/models.OrderType'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
  /product/order-type/{id}:
    delete:
      consumes:
      - application/json
      description: Delete OrderType
      parameters:
      - description: OrderType ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
    get:
      consumes:
      - application/json
      description: get OrderType info by guidfixed
      parameters:
      - description: OrderType guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
    put:
      consumes:
      - application/json
      description: Update OrderType
      parameters:
      - description: OrderType ID
        in: path
        name: id
        required: true
        type: string
      - description: OrderType
        in: body
        name: OrderType
        required: true
        schema:
          $ref: '#/definitions/models.OrderType'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
  /product/order-type/bulk:
    post:
      consumes:
      - application/json
      description: Create OrderType
      parameters:
      - description: OrderType
        in: body
        name: OrderType
        required: true
        schema:
          items:
            $ref: '#/definitions/models.OrderType'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
  /product/order-type/code/{code}:
    get:
      consumes:
      - application/json
      description: get OrderType info by Code
      parameters:
      - description: OrderType Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
  /product/order-type/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - OrderType
  /product/promotion:
    delete:
      consumes:
      - application/json
      description: Delete Promotion
      parameters:
      - description: Promotion GUIDs
        in: body
        name: Promotion
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: promotiontype
        in: query
        name: promotiontype
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
    post:
      consumes:
      - application/json
      description: Create Promotion
      parameters:
      - description: Promotion
        in: body
        name: Promotion
        required: true
        schema:
          $ref: '#/definitions/models.Promotion'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
  /product/promotion/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Promotion
      parameters:
      - description: Promotion ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
    get:
      consumes:
      - application/json
      description: get Promotion info by guidfixed
      parameters:
      - description: Promotion guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
    put:
      consumes:
      - application/json
      description: Update Promotion
      parameters:
      - description: Promotion ID
        in: path
        name: id
        required: true
        type: string
      - description: Promotion
        in: body
        name: Promotion
        required: true
        schema:
          $ref: '#/definitions/models.Promotion'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
  /product/promotion/bulk:
    post:
      consumes:
      - application/json
      description: Create Promotion
      parameters:
      - description: Promotion
        in: body
        name: Promotion
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Promotion'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
  /product/promotion/code/{code}:
    get:
      consumes:
      - application/json
      description: get Promotion info by Code
      parameters:
      - description: Promotion Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
  /product/promotion/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: promotiontype
        in: query
        name: promotiontype
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Promotion
  /product/save:
    post:
      consumes:
      - application/json
      description: Save Product
      parameters:
      - description: Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Product
  /profile:
    get:
      consumes:
      - application/json
      description: Get Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /profileshop:
    get:
      consumes:
      - application/json
      description: Get Current Profile
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfileReponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: For User Register Application
      parameters:
      - description: Register account
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      summary: Register An Account
      tags:
      - Authentication
  /report/execute:
    post:
      consumes:
      - application/json
      description: Execute ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportqueryc_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /report/playground:
    post:
      consumes:
      - application/json
      description: Playground ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportqueryc_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /report/query:
    delete:
      consumes:
      - application/json
      description: Delete ReportQuery
      parameters:
      - description: ReportQuery GUIDs
        in: body
        name: ReportQuery
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    post:
      consumes:
      - application/json
      description: Create ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportqueryc_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /report/query/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ReportQuery
      parameters:
      - description: ReportQuery ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    get:
      consumes:
      - application/json
      description: get ReportQuery info by guidfixed
      parameters:
      - description: ReportQuery guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    put:
      consumes:
      - application/json
      description: Update ReportQuery
      parameters:
      - description: ReportQuery ID
        in: path
        name: id
        required: true
        type: string
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportqueryc_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /report/query/code/{code}:
    get:
      consumes:
      - application/json
      description: get ReportQuery info by Code
      parameters:
      - description: ReportQuery Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /report/query/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/execute:
    post:
      consumes:
      - application/json
      description: Execute ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportquerym_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/playground:
    post:
      consumes:
      - application/json
      description: Playground ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportquerym_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/query:
    delete:
      consumes:
      - application/json
      description: Delete ReportQuery
      parameters:
      - description: ReportQuery GUIDs
        in: body
        name: ReportQuery
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    post:
      consumes:
      - application/json
      description: Create ReportQuery
      parameters:
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportquerym_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/query/{id}:
    delete:
      consumes:
      - application/json
      description: Delete ReportQuery
      parameters:
      - description: ReportQuery ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    get:
      consumes:
      - application/json
      description: get ReportQuery info by guidfixed
      parameters:
      - description: ReportQuery guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
    put:
      consumes:
      - application/json
      description: Update ReportQuery
      parameters:
      - description: ReportQuery ID
        in: path
        name: id
        required: true
        type: string
      - description: ReportQuery
        in: body
        name: ReportQuery
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_report_reportquerym_models.ReportQuery'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/query/code/{code}:
    get:
      consumes:
      - application/json
      description: get ReportQuery info by Code
      parameters:
      - description: ReportQuery Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /reportm/query/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ReportQuery
  /restaurant/device:
    delete:
      consumes:
      - application/json
      description: Delete Device
      parameters:
      - description: Device GUIDs
        in: body
        name: Device
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Create Device
      parameters:
      - description: Device
        in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_restaurant_device_models.Device'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/device/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Update Device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: Device
        in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_restaurant_device_models.Device'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/device/bulk:
    post:
      consumes:
      - application/json
      description: Create Device
      parameters:
      - description: Device
        in: body
        name: Device
        required: true
        schema:
          items:
            $ref: '#/definitions/smlcloudplatform_pkg_restaurant_device_models.Device'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/device/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen:
    get:
      consumes:
      - application/json
      description: List Restaurant Kitchen Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KitchenPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          $ref: '#/definitions/models.Kitchen'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Kitchen
      parameters:
      - description: Kitchen Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KitchenInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Kitchen
      parameters:
      - description: Kitchen ID
        in: path
        name: id
        required: true
        type: string
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          $ref: '#/definitions/models.Kitchen'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/bulk:
    post:
      consumes:
      - application/json
      description: Create Kitchen
      parameters:
      - description: Kitchen
        in: body
        name: Kitchen
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Kitchen'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/kitchen/products:
    get:
      consumes:
      - application/json
      description: List Restaurant Kitchen product barcode
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer:
    get:
      consumes:
      - application/json
      description: List Restaurant Printer Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PrinterPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          $ref: '#/definitions/models.Printer'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Printer
      parameters:
      - description: Printer Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PrinterInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Printer
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          $ref: '#/definitions/models.Printer'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/bulk:
    post:
      consumes:
      - application/json
      description: Printer ShopZone
      parameters:
      - description: Printer
        in: body
        name: Printer
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Printer'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/printer/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/settings:
    delete:
      consumes:
      - application/json
      description: Delete Restaurant Settings
      parameters:
      - description: Restaurant Settings GUIDs
        in: body
        name: Settings
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: List Restaurant Settings Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RestaurantSettingsPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Settings
      parameters:
      - description: Settings
        in: body
        name: Settings
        required: true
        schema:
          $ref: '#/definitions/models.RestaurantSettings'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/settings/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Settings
      parameters:
      - description: RestaurantSettings ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Settings
      parameters:
      - description: RestaurantSettings Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RestaurantSettingsInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Settings
      parameters:
      - description: Settings ID
        in: path
        name: id
        required: true
        type: string
      - description: Settings
        in: body
        name: Settings
        required: true
        schema:
          $ref: '#/definitions/models.RestaurantSettings'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/settings/bulk:
    post:
      consumes:
      - application/json
      description: Create RestaurantSettings
      parameters:
      - description: RestaurantSettings
        in: body
        name: RestaurantSettings
        required: true
        schema:
          items:
            $ref: '#/definitions/models.RestaurantSettings'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/settings/code/{code}:
    get:
      consumes:
      - application/json
      description: Get Restaurant Settings By Code
      parameters:
      - description: RestaurantSettings Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RestaurantSettingsInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/staff:
    delete:
      consumes:
      - application/json
      description: Delete Staff
      parameters:
      - description: Staff GUIDs
        in: body
        name: Staff
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Create Staff
      parameters:
      - description: Staff
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/models.Staff'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/staff/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Staff
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Update Staff
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: string
      - description: Staff
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/models.Staff'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/staff/bulk:
    post:
      consumes:
      - application/json
      description: Create Staff
      parameters:
      - description: Staff
        in: body
        name: Staff
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Staff'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/staff/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table:
    delete:
      consumes:
      - application/json
      description: Delete Restaurant Table
      parameters:
      - description: Restaurant Table GUIDs
        in: body
        name: Table
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: List Restaurant  Table Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TablePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant  Table
      parameters:
      - description: Table
        in: body
        name: Table
        required: true
        schema:
          $ref: '#/definitions/models.Table'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant  Table
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant  Table
      parameters:
      - description: Table Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TableInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant  Table
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Table
        in: body
        name: Table
        required: true
        schema:
          $ref: '#/definitions/models.Table'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/table/bulk:
    post:
      consumes:
      - application/json
      description: Create Table
      parameters:
      - description: Table
        in: body
        name: Table
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Table'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone:
    delete:
      consumes:
      - application/json
      description: Delete Restaurant Zone
      parameters:
      - description: Zone GUIDs
        in: body
        name: Zone
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: List Restaurant Zone Category
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ZonePageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Restaurant Zone
      parameters:
      - description: Zone
        in: body
        name: Zone
        required: true
        schema:
          $ref: '#/definitions/models.Zone'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/{id}:
    delete:
      consumes:
      - application/json
      description: Restaurant Zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Get Restaurant Zone
      parameters:
      - description: Zone Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ZoneInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: Restaurant Zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: string
      - description: Zone
        in: body
        name: Zone
        required: true
        schema:
          $ref: '#/definitions/models.Zone'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/bulk:
    post:
      consumes:
      - application/json
      description: Create Zone
      parameters:
      - description: Zone
        in: body
        name: Zone
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Zone'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkInsertResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /restaurant/zone/by-code:
    get:
      consumes:
      - application/json
      description: get Restaurant Zone by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Restaurant
  /sale-channel:
    delete:
      consumes:
      - application/json
      description: Delete SaleChannel
      parameters:
      - description: SaleChannel GUIDs
        in: body
        name: SaleChannel
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
    post:
      consumes:
      - application/json
      description: Create SaleChannel
      parameters:
      - description: SaleChannel
        in: body
        name: SaleChannel
        required: true
        schema:
          $ref: '#/definitions/models.SaleChannel'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
  /sale-channel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SaleChannel
      parameters:
      - description: SaleChannel ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
    get:
      consumes:
      - application/json
      description: get SaleChannel info by guidfixed
      parameters:
      - description: SaleChannel guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
    put:
      consumes:
      - application/json
      description: Update SaleChannel
      parameters:
      - description: SaleChannel ID
        in: path
        name: id
        required: true
        type: string
      - description: SaleChannel
        in: body
        name: SaleChannel
        required: true
        schema:
          $ref: '#/definitions/models.SaleChannel'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
  /sale-channel/bulk:
    post:
      consumes:
      - application/json
      description: Create SaleChannel
      parameters:
      - description: SaleChannel
        in: body
        name: SaleChannel
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SaleChannel'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
  /sale-channel/code/{code}:
    get:
      consumes:
      - application/json
      description: get SaleChannel info by Code
      parameters:
      - description: SaleChannel Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
  /sale-channel/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleChannel
  /select-shop:
    post:
      consumes:
      - application/json
      description: Access to Shop
      parameters:
      - description: Shop
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.ShopSelectRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Authentication
  /selected:
    get:
      consumes:
      - application/json
      description: For List Document Ref selected
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: List Document Ref selected
      tags:
      - WSDocumentRef
  /shop:
    get:
      consumes:
      - application/json
      description: Access to Shop
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Shop
    post:
      consumes:
      - application/json
      description: Create Shop
      parameters:
      - description: Add Shop
        in: body
        name: Shop
        required: true
        schema:
          $ref: '#/definitions/models.Shop'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Shop
  /shop/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Shop
      parameters:
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Shop
    get:
      consumes:
      - application/json
      description: Infomation Shop Profile
      parameters:
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShopInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - AccessToken: []
      tags:
      - Shop
    put:
      consumes:
      - application/json
      description: Update Shop
      parameters:
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      - description: Shop Body
        in: body
        name: Shop
        required: true
        schema:
          $ref: '#/definitions/models.Shop'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Shop
  /shop/branch:
    delete:
      consumes:
      - application/json
      description: Delete Branch
      parameters:
      - description: Branch GUIDs
        in: body
        name: Branch
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    post:
      consumes:
      - application/json
      description: Create Branch
      parameters:
      - description: Branch
        in: body
        name: Branch
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /shop/branch/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
    put:
      consumes:
      - application/json
      description: Update Branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      - description: Branch
        in: body
        name: Branch
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /shop/branch/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Branch
  /shop/employee:
    delete:
      consumes:
      - application/json
      description: Delete Employee
      parameters:
      - description: Employee GUIDs
        in: body
        name: Employee
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    post:
      consumes:
      - application/json
      description: Create Employee
      parameters:
      - description: Employee
        in: body
        name: Employee
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestRegister'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
  /shop/employee/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Update Employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: Employee
        in: body
        name: Employee
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeRequestUpdate'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
  /shop/employee/code/{code}:
    get:
      consumes:
      - application/json
      description: get employee by code
      parameters:
      - description: Employee code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
  /shop/employee/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Employee
  /shop/permission:
    put:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: UserRoleRequest
        in: body
        name: UserRoleRequest
        required: true
        schema:
          $ref: '#/definitions/models.UserRoleRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /shop/permission/{username}:
    delete:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
    get:
      consumes:
      - application/json
      description: get shopuser info by username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /shop/users:
    get:
      consumes:
      - application/json
      description: get shopuser
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /sml-transaction:
    delete:
      consumes:
      - application/json
      description: Delete SMLTransaction
      parameters:
      - description: SMLTransaction Key Request
        in: body
        name: SMLTransactionKeyRequest
        required: true
        schema:
          $ref: '#/definitions/models.SMLTransactionKeyRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SMLTransaction
    get:
      consumes:
      - application/json
      description: Create SMLTransaction
      parameters:
      - description: SMLTransactionRequest
        in: body
        name: SMLTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/models.SMLTransactionRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SMLTransaction
    post:
      consumes:
      - application/json
      description: Create SMLTransaction
      parameters:
      - description: SMLTransactionRequest
        in: body
        name: SMLTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/models.SMLTransactionRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SMLTransaction
  /sml-transaction/bulk:
    post:
      consumes:
      - application/json
      description: Bulk Create SMLTransaction
      parameters:
      - description: SMLTransaction Bulk Request
        in: body
        name: SMLTransactionBulkRequest
        required: true
        schema:
          $ref: '#/definitions/models.SMLTransactionBulkRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SMLTransaction
  /smspaymentsettings:
    get:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
  /smspaymentsettings/{storefrontguid}:
    get:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: storefront guidfixed
        in: path
        name: storefrontguid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JournalInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
    put:
      consumes:
      - application/json
      description: sms payment received settings service
      parameters:
      - description: storefront guidfixed
        in: path
        name: storefrontguid
        required: true
        type: string
      - description: sms payment settings
        in: body
        name: SmsPaymentSettings
        required: true
        schema:
          $ref: '#/definitions/models.SmsPaymentSettings'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: sms payment settings
      tags:
      - SmsPayment
  /smstransaction:
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    post:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: sms data
        in: body
        name: Transaction
        required: true
        schema:
          $ref: '#/definitions/models.SmsTransaction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /smstransaction/{id}:
    delete:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
    put:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: GIUDFIXED
        in: path
        name: id
        required: true
        type: string
      - description: sms data
        in: body
        name: Journal
        required: true
        schema:
          $ref: '#/definitions/models.SmsTransaction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /smstransaction/confirm/{id}:
    get:
      consumes:
      - application/json
      description: รับข้อมูล sms
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SmsTransactionPageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      summary: รับข้อมูล sms
      tags:
      - SMS
  /storefront:
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    post:
      consumes:
      - application/json
      description: Create Storefront
      parameters:
      - description: Storefront
        in: body
        name: Storefront
        required: true
        schema:
          $ref: '#/definitions/models.Storefront'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
  /storefront/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Storefront
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
    put:
      consumes:
      - application/json
      description: Update Storefront
      parameters:
      - description: Storefront ID
        in: path
        name: id
        required: true
        type: string
      - description: Storefront
        in: body
        name: Storefront
        required: true
        schema:
          $ref: '#/definitions/models.Storefront'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Storefront
  /syncproduct:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Data Payload
        in: body
        name: Data
        required: true
        schema:
          $ref: '#/definitions/models.SyncInventoryData'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Synchronize
  /task:
    delete:
      consumes:
      - application/json
      description: Delete Task
      parameters:
      - description: Task GUIDs
        in: body
        name: Task
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Module
        in: query
        name: module
        type: integer
      - description: ex. status=0 status=1,2,3
        in: query
        name: status
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: Create Task
      parameters:
      - description: Task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
    put:
      consumes:
      - application/json
      description: Update Task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/{id}/status:
    put:
      consumes:
      - application/json
      description: Update Task Status
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task Status
        in: body
        name: TaskStatus
        required: true
        schema:
          $ref: '#/definitions/models.TaskStatus'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/bulk:
    post:
      consumes:
      - application/json
      description: Create Task
      parameters:
      - description: Task
        in: body
        name: Task
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Task'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/generate-code:
    get:
      consumes:
      - application/json
      description: generate new Task Code
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /task/reject/{guid}:
    get:
      consumes:
      - application/json
      description: get Task Reject by task guid
      parameters:
      - description: Module
        in: query
        name: module
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Task
  /tokenlogin:
    post:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: User Account
        in: body
        name: TokenLoginRequest
        required: true
        schema:
          $ref: '#/definitions/authentication.TokenLoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      tags:
      - Authentication
  /transaction/paid:
    delete:
      consumes:
      - application/json
      description: Delete Paid
      parameters:
      - description: Paid GUIDs
        in: body
        name: Paid
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
    post:
      consumes:
      - application/json
      description: Create Paid
      parameters:
      - description: Paid
        in: body
        name: Paid
        required: true
        schema:
          $ref: '#/definitions/models.Paid'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
  /transaction/paid/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Paid
      parameters:
      - description: Paid ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
    get:
      consumes:
      - application/json
      description: get Paid info by guidfixed
      parameters:
      - description: Paid guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
    put:
      consumes:
      - application/json
      description: Update Paid
      parameters:
      - description: Paid ID
        in: path
        name: id
        required: true
        type: string
      - description: Paid
        in: body
        name: Paid
        required: true
        schema:
          $ref: '#/definitions/models.Paid'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
  /transaction/paid/bulk:
    post:
      consumes:
      - application/json
      description: Create Paid
      parameters:
      - description: Paid
        in: body
        name: Paid
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Paid'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
  /transaction/paid/code/{code}:
    get:
      consumes:
      - application/json
      description: get Paid info by Code
      parameters:
      - description: Paid Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
  /transaction/paid/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Paid
  /transaction/pay:
    delete:
      consumes:
      - application/json
      description: Delete Pay
      parameters:
      - description: Pay GUIDs
        in: body
        name: Pay
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
    post:
      consumes:
      - application/json
      description: Create Pay
      parameters:
      - description: Pay
        in: body
        name: Pay
        required: true
        schema:
          $ref: '#/definitions/models.Pay'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
  /transaction/pay/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Pay
      parameters:
      - description: Pay ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
    get:
      consumes:
      - application/json
      description: get Pay info by guidfixed
      parameters:
      - description: Pay guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
    put:
      consumes:
      - application/json
      description: Update Pay
      parameters:
      - description: Pay ID
        in: path
        name: id
        required: true
        type: string
      - description: Pay
        in: body
        name: Pay
        required: true
        schema:
          $ref: '#/definitions/models.Pay'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
  /transaction/pay/bulk:
    post:
      consumes:
      - application/json
      description: Create Pay
      parameters:
      - description: Pay
        in: body
        name: Pay
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Pay'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
  /transaction/pay/code/{code}:
    get:
      consumes:
      - application/json
      description: get Pay info by Code
      parameters:
      - description: Pay Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
  /transaction/pay/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Pay
  /transaction/purchase:
    delete:
      consumes:
      - application/json
      description: Delete Purchase
      parameters:
      - description: Purchase GUIDs
        in: body
        name: Purchase
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    post:
      consumes:
      - application/json
      description: Create Purchase
      parameters:
      - description: Purchase
        in: body
        name: Purchase
        required: true
        schema:
          $ref: '#/definitions/models.Purchase'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /transaction/purchase-return:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseReturn
      parameters:
      - description: PurchaseReturn GUIDs
        in: body
        name: PurchaseReturn
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
    post:
      consumes:
      - application/json
      description: Create PurchaseReturn
      parameters:
      - description: PurchaseReturn
        in: body
        name: PurchaseReturn
        required: true
        schema:
          $ref: '#/definitions/models.PurchaseReturn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
  /transaction/purchase-return/{id}:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseReturn
      parameters:
      - description: PurchaseReturn ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
    get:
      consumes:
      - application/json
      description: get PurchaseReturn info by guidfixed
      parameters:
      - description: PurchaseReturn guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
    put:
      consumes:
      - application/json
      description: Update PurchaseReturn
      parameters:
      - description: PurchaseReturn ID
        in: path
        name: id
        required: true
        type: string
      - description: PurchaseReturn
        in: body
        name: PurchaseReturn
        required: true
        schema:
          $ref: '#/definitions/models.PurchaseReturn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
  /transaction/purchase-return/bulk:
    post:
      consumes:
      - application/json
      description: Create PurchaseReturn
      parameters:
      - description: PurchaseReturn
        in: body
        name: PurchaseReturn
        required: true
        schema:
          items:
            $ref: '#/definitions/models.PurchaseReturn'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
  /transaction/purchase-return/code/{code}:
    get:
      consumes:
      - application/json
      description: get PurchaseReturn info by Code
      parameters:
      - description: PurchaseReturn Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
  /transaction/purchase-return/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - PurchaseReturn
  /transaction/purchase/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Purchase
      parameters:
      - description: Purchase ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    get:
      consumes:
      - application/json
      description: get Purchase info by guidfixed
      parameters:
      - description: Purchase guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
    put:
      consumes:
      - application/json
      description: Update Purchase
      parameters:
      - description: Purchase ID
        in: path
        name: id
        required: true
        type: string
      - description: Purchase
        in: body
        name: Purchase
        required: true
        schema:
          $ref: '#/definitions/models.Purchase'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /transaction/purchase/bulk:
    post:
      consumes:
      - application/json
      description: Create Purchase
      parameters:
      - description: Purchase
        in: body
        name: Purchase
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Purchase'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /transaction/purchase/code/{code}:
    get:
      consumes:
      - application/json
      description: get Purchase info by Code
      parameters:
      - description: Purchase Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /transaction/purchase/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Purchase
  /transaction/sale-invoice:
    delete:
      consumes:
      - application/json
      description: Delete SaleInvoice
      parameters:
      - description: SaleInvoice GUIDs
        in: body
        name: SaleInvoice
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: is POS
        in: query
        name: ispos
        type: boolean
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
    post:
      consumes:
      - application/json
      description: Create SaleInvoice
      parameters:
      - description: SaleInvoice
        in: body
        name: SaleInvoice
        required: true
        schema:
          $ref: '#/definitions/models.SaleInvoice'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
  /transaction/sale-invoice-return:
    delete:
      consumes:
      - application/json
      description: Delete SaleInvoiceReturn
      parameters:
      - description: SaleInvoiceReturn GUIDs
        in: body
        name: SaleInvoiceReturn
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: is POS
        in: query
        name: ispos
        type: boolean
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
    post:
      consumes:
      - application/json
      description: Create SaleInvoiceReturn
      parameters:
      - description: SaleInvoiceReturn
        in: body
        name: SaleInvoiceReturn
        required: true
        schema:
          $ref: '#/definitions/models.SaleInvoiceReturn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
  /transaction/sale-invoice-return/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SaleInvoiceReturn
      parameters:
      - description: SaleInvoiceReturn ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
    get:
      consumes:
      - application/json
      description: get SaleInvoiceReturn info by guidfixed
      parameters:
      - description: SaleInvoiceReturn guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
    put:
      consumes:
      - application/json
      description: Update SaleInvoiceReturn
      parameters:
      - description: SaleInvoiceReturn ID
        in: path
        name: id
        required: true
        type: string
      - description: SaleInvoiceReturn
        in: body
        name: SaleInvoiceReturn
        required: true
        schema:
          $ref: '#/definitions/models.SaleInvoiceReturn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
  /transaction/sale-invoice-return/bulk:
    post:
      consumes:
      - application/json
      description: Create SaleInvoiceReturn
      parameters:
      - description: SaleInvoiceReturn
        in: body
        name: SaleInvoiceReturn
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SaleInvoiceReturn'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
  /transaction/sale-invoice-return/code/{code}:
    get:
      consumes:
      - application/json
      description: get SaleInvoiceReturn info by Code
      parameters:
      - description: SaleInvoiceReturn Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
  /transaction/sale-invoice-return/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: is POS
        in: query
        name: ispos
        type: boolean
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoiceReturn
  /transaction/sale-invoice/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SaleInvoice
      parameters:
      - description: SaleInvoice ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
    get:
      consumes:
      - application/json
      description: get SaleInvoice info by guidfixed
      parameters:
      - description: SaleInvoice guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
    put:
      consumes:
      - application/json
      description: Update SaleInvoice
      parameters:
      - description: SaleInvoice ID
        in: path
        name: id
        required: true
        type: string
      - description: SaleInvoice
        in: body
        name: SaleInvoice
        required: true
        schema:
          $ref: '#/definitions/models.SaleInvoice'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
  /transaction/sale-invoice/bulk:
    post:
      consumes:
      - application/json
      description: Create SaleInvoice
      parameters:
      - description: SaleInvoice
        in: body
        name: SaleInvoice
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SaleInvoice'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
  /transaction/sale-invoice/code/{code}:
    get:
      consumes:
      - application/json
      description: get SaleInvoice info by Code
      parameters:
      - description: SaleInvoice Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
  /transaction/sale-invoice/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: is POS
        in: query
        name: ispos
        type: boolean
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - SaleInvoice
  /transaction/stock-adjustment:
    delete:
      consumes:
      - application/json
      description: Delete StockAdjustment
      parameters:
      - description: StockAdjustment GUIDs
        in: body
        name: StockAdjustment
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
    post:
      consumes:
      - application/json
      description: Create StockAdjustment
      parameters:
      - description: StockAdjustment
        in: body
        name: StockAdjustment
        required: true
        schema:
          $ref: '#/definitions/models.StockAdjustment'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
  /transaction/stock-adjustment/{id}:
    delete:
      consumes:
      - application/json
      description: Delete StockAdjustment
      parameters:
      - description: StockAdjustment ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
    get:
      consumes:
      - application/json
      description: get StockAdjustment info by guidfixed
      parameters:
      - description: StockAdjustment guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
    put:
      consumes:
      - application/json
      description: Update StockAdjustment
      parameters:
      - description: StockAdjustment ID
        in: path
        name: id
        required: true
        type: string
      - description: StockAdjustment
        in: body
        name: StockAdjustment
        required: true
        schema:
          $ref: '#/definitions/models.StockAdjustment'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
  /transaction/stock-adjustment/bulk:
    post:
      consumes:
      - application/json
      description: Create StockAdjustment
      parameters:
      - description: StockAdjustment
        in: body
        name: StockAdjustment
        required: true
        schema:
          items:
            $ref: '#/definitions/models.StockAdjustment'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
  /transaction/stock-adjustment/code/{code}:
    get:
      consumes:
      - application/json
      description: get StockAdjustment info by Code
      parameters:
      - description: StockAdjustment Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
  /transaction/stock-adjustment/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockAdjustment
  /transaction/stock-prickup-product:
    delete:
      consumes:
      - application/json
      description: Delete StockPickupProduct
      parameters:
      - description: StockPickupProduct GUIDs
        in: body
        name: StockPickupProduct
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
    post:
      consumes:
      - application/json
      description: Create StockPickupProduct
      parameters:
      - description: StockPickupProduct
        in: body
        name: StockPickupProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockPickupProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
  /transaction/stock-prickup-product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete StockPickupProduct
      parameters:
      - description: StockPickupProduct ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
    get:
      consumes:
      - application/json
      description: get StockPickupProduct info by guidfixed
      parameters:
      - description: StockPickupProduct guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
    put:
      consumes:
      - application/json
      description: Update StockPickupProduct
      parameters:
      - description: StockPickupProduct ID
        in: path
        name: id
        required: true
        type: string
      - description: StockPickupProduct
        in: body
        name: StockPickupProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockPickupProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
  /transaction/stock-prickup-product/bulk:
    post:
      consumes:
      - application/json
      description: Create StockPickupProduct
      parameters:
      - description: StockPickupProduct
        in: body
        name: StockPickupProduct
        required: true
        schema:
          items:
            $ref: '#/definitions/models.StockPickupProduct'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
  /transaction/stock-prickup-product/code/{code}:
    get:
      consumes:
      - application/json
      description: get StockPickupProduct info by Code
      parameters:
      - description: StockPickupProduct Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
  /transaction/stock-prickup-product/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockPickupProduct
  /transaction/stock-receive-product:
    delete:
      consumes:
      - application/json
      description: Delete StockReceiveProduct
      parameters:
      - description: StockReceiveProduct GUIDs
        in: body
        name: StockReceiveProduct
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
    post:
      consumes:
      - application/json
      description: Create StockReceiveProduct
      parameters:
      - description: StockReceiveProduct
        in: body
        name: StockReceiveProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockReceiveProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
  /transaction/stock-receive-product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete StockReceiveProduct
      parameters:
      - description: StockReceiveProduct ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
    get:
      consumes:
      - application/json
      description: get StockReceiveProduct info by guidfixed
      parameters:
      - description: StockReceiveProduct guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
    put:
      consumes:
      - application/json
      description: Update StockReceiveProduct
      parameters:
      - description: StockReceiveProduct ID
        in: path
        name: id
        required: true
        type: string
      - description: StockReceiveProduct
        in: body
        name: StockReceiveProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockReceiveProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
  /transaction/stock-receive-product/bulk:
    post:
      consumes:
      - application/json
      description: Create StockReceiveProduct
      parameters:
      - description: StockReceiveProduct
        in: body
        name: StockReceiveProduct
        required: true
        schema:
          items:
            $ref: '#/definitions/models.StockReceiveProduct'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
  /transaction/stock-receive-product/code/{code}:
    get:
      consumes:
      - application/json
      description: get StockReceiveProduct info by Code
      parameters:
      - description: StockReceiveProduct Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
  /transaction/stock-receive-product/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReceiveProduct
  /transaction/stock-return-product:
    delete:
      consumes:
      - application/json
      description: Delete StockReturnProduct
      parameters:
      - description: StockReturnProduct GUIDs
        in: body
        name: StockReturnProduct
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
    post:
      consumes:
      - application/json
      description: Create StockReturnProduct
      parameters:
      - description: StockReturnProduct
        in: body
        name: StockReturnProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockReturnProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
  /transaction/stock-return-product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete StockReturnProduct
      parameters:
      - description: StockReturnProduct ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
    get:
      consumes:
      - application/json
      description: get StockReturnProduct info by guidfixed
      parameters:
      - description: StockReturnProduct guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
    put:
      consumes:
      - application/json
      description: Update StockReturnProduct
      parameters:
      - description: StockReturnProduct ID
        in: path
        name: id
        required: true
        type: string
      - description: StockReturnProduct
        in: body
        name: StockReturnProduct
        required: true
        schema:
          $ref: '#/definitions/models.StockReturnProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
  /transaction/stock-return-product/bulk:
    post:
      consumes:
      - application/json
      description: Create StockReturnProduct
      parameters:
      - description: StockReturnProduct
        in: body
        name: StockReturnProduct
        required: true
        schema:
          items:
            $ref: '#/definitions/models.StockReturnProduct'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
  /transaction/stock-return-product/code/{code}:
    get:
      consumes:
      - application/json
      description: get StockReturnProduct info by Code
      parameters:
      - description: StockReturnProduct Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
  /transaction/stock-return-product/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockReturnProduct
  /transaction/stock-transfer:
    delete:
      consumes:
      - application/json
      description: Delete StockTransfer
      parameters:
      - description: StockTransfer GUIDs
        in: body
        name: StockTransfer
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: customer code
        in: query
        name: custcode
        type: string
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
    post:
      consumes:
      - application/json
      description: Create StockTransfer
      parameters:
      - description: StockTransfer
        in: body
        name: StockTransfer
        required: true
        schema:
          $ref: '#/definitions/models.StockTransfer'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
  /transaction/stock-transfer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete StockTransfer
      parameters:
      - description: StockTransfer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
    get:
      consumes:
      - application/json
      description: get StockTransfer info by guidfixed
      parameters:
      - description: StockTransfer guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
    put:
      consumes:
      - application/json
      description: Update StockTransfer
      parameters:
      - description: StockTransfer ID
        in: path
        name: id
        required: true
        type: string
      - description: StockTransfer
        in: body
        name: StockTransfer
        required: true
        schema:
          $ref: '#/definitions/models.StockTransfer'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
  /transaction/stock-transfer/code/{code}:
    get:
      consumes:
      - application/json
      description: get StockTransfer info by Code
      parameters:
      - description: StockTransfer Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
  /transaction/stock-transfer/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: from date
        in: query
        name: fromdate
        type: string
      - description: to date
        in: query
        name: todate
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - StockTransfer
  /transport-channel:
    delete:
      consumes:
      - application/json
      description: Delete TransportChannel
      parameters:
      - description: TransportChannel GUIDs
        in: body
        name: TransportChannel
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
    get:
      consumes:
      - application/json
      description: get list step
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
    post:
      consumes:
      - application/json
      description: Create TransportChannel
      parameters:
      - description: TransportChannel
        in: body
        name: TransportChannel
        required: true
        schema:
          $ref: '#/definitions/models.TransportChannel'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
  /transport-channel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete TransportChannel
      parameters:
      - description: TransportChannel ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
    get:
      consumes:
      - application/json
      description: get TransportChannel info by guidfixed
      parameters:
      - description: TransportChannel guidfixed
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
    put:
      consumes:
      - application/json
      description: Update TransportChannel
      parameters:
      - description: TransportChannel ID
        in: path
        name: id
        required: true
        type: string
      - description: TransportChannel
        in: body
        name: TransportChannel
        required: true
        schema:
          $ref: '#/definitions/models.TransportChannel'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
  /transport-channel/bulk:
    post:
      consumes:
      - application/json
      description: Create TransportChannel
      parameters:
      - description: TransportChannel
        in: body
        name: TransportChannel
        required: true
        schema:
          items:
            $ref: '#/definitions/models.TransportChannel'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
  /transport-channel/code/{code}:
    get:
      consumes:
      - application/json
      description: get TransportChannel info by Code
      parameters:
      - description: TransportChannel Code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
  /transport-channel/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - TransportChannel
  /unit:
    delete:
      consumes:
      - application/json
      description: Delete Unit
      parameters:
      - description: Unit GUIDs
        in: body
        name: Unit
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: 'page '
        in: query
        name: page
        type: integer
      - description: 'liumit '
        in: query
        name: limit
        type: integer
      - description: unitcode filter ex. \
        in: query
        name: unitcode
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    post:
      consumes:
      - application/json
      description: Create Unit
      parameters:
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    patch:
      consumes:
      - application/json
      description: Update Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
    put:
      consumes:
      - application/json
      description: Update Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: string
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/bulk:
    post:
      consumes:
      - application/json
      description: Create Unit
      parameters:
      - description: Unit
        in: body
        name: Unit
        required: true
        schema:
          items:
            $ref: '#/definitions/smlcloudplatform_pkg_product_unit_models.Unit'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/by-code:
    get:
      consumes:
      - application/json
      description: get unit by unit code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang ex. en,th
        in: query
        name: lang
        type: string
      - description: unitcode filter ex. \
        in: query
        name: unitcode
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /unit/master:
    get:
      consumes:
      - application/json
      description: get master Unit by code array
      parameters:
      - description: 'Code filter, json array encode '
        in: query
        name: codes
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Unit
  /upload/images:
    post:
      consumes:
      - application/json
      description: Update Image
      parameters:
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Image'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Common
  /upload/productimage:
    post:
      consumes:
      - application/json
      description: Update Image
      parameters:
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Image'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Common
  /user/permissions:
    get:
      consumes:
      - application/json
      description: get shopuser
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - ShopUser
  /warehouse:
    delete:
      consumes:
      - application/json
      description: Delete Warehouse
      parameters:
      - description: Warehouse GUIDs
        in: body
        name: Warehouse
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    get:
      consumes:
      - application/json
      description: List Warehouse
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    post:
      consumes:
      - application/json
      description: Create Warehouse
      parameters:
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_warehouse_models.Warehouse'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Warehouse
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    get:
      consumes:
      - application/json
      description: get struct array by ID
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    put:
      consumes:
      - application/json
      description: Update Warehouse
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          $ref: '#/definitions/smlcloudplatform_pkg_warehouse_models.Warehouse'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{warehouseCode}/location:
    post:
      consumes:
      - application/json
      description: Create Warehouse Location
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: Location Request
        in: body
        name: LocationRequest
        required: true
        schema:
          $ref: '#/definitions/models.LocationRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{warehouseCode}/location/:
    delete:
      consumes:
      - application/json
      description: Delete Warehouse Location
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: Location Code
        in: body
        name: LocationCode
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{warehouseCode}/location/{locationCode}:
    get:
      consumes:
      - application/json
      description: get Location by code
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: Location Code
        in: path
        name: locationCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    put:
      consumes:
      - application/json
      description: Update Warehouse Location
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: location Code
        in: path
        name: locationCode
        required: true
        type: string
      - description: Location Request
        in: body
        name: LocationRequest
        required: true
        schema:
          $ref: '#/definitions/models.LocationRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{warehouseCode}/location/{locationCode}/shelf:
    delete:
      consumes:
      - application/json
      description: Delete Warehouse Shelf
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: location Code
        in: path
        name: locationCode
        required: true
        type: string
      - description: Shelf Code
        in: body
        name: ShelfCode
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    post:
      consumes:
      - application/json
      description: Create Warehouse Shelf
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: Location Code
        in: path
        name: locationCode
        required: true
        type: string
      - description: Shelf Request
        in: body
        name: ShelfRequest
        required: true
        schema:
          $ref: '#/definitions/models.ShelfRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/{warehouseCode}/location/{locationCode}/shelf/{shelfCode}:
    get:
      consumes:
      - application/json
      description: get Shelf by code
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: Location Code
        in: path
        name: locationCode
        required: true
        type: string
      - description: Shelf Code
        in: path
        name: shelfCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
    put:
      consumes:
      - application/json
      description: Update Warehouse Shelf
      parameters:
      - description: Warehouse Code
        in: path
        name: warehouseCode
        required: true
        type: string
      - description: location Code
        in: path
        name: locationCode
        required: true
        type: string
      - description: shelf Code
        in: path
        name: shelfCode
        required: true
        type: string
      - description: Shelf Request
        in: body
        name: ShelfRequest
        required: true
        schema:
          $ref: '#/definitions/models.ShelfRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccessWithID'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/bulk:
    post:
      consumes:
      - application/json
      description: Create Warehouse
      parameters:
      - description: Warehouse
        in: body
        name: Warehouse
        required: true
        schema:
          items:
            $ref: '#/definitions/smlcloudplatform_pkg_warehouse_models.Warehouse'
          type: array
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BulkReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/code/{code}:
    get:
      consumes:
      - application/json
      description: get Warehouse by code
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/list:
    get:
      consumes:
      - application/json
      description: search limit offset
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: lang
        in: query
        name: lang
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/location:
    get:
      consumes:
      - application/json
      description: get data warehouse location list
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
  /warehouse/location/shelf:
    get:
      consumes:
      - application/json
      description: get data warehouse location shelf list
      parameters:
      - description: Search Value
        in: query
        name: q
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponseFailed'
      security:
      - AccessToken: []
      tags:
      - Warehouse
schemes:
- http
- https
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
